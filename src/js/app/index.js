!function(t){var r={};function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=r,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s="./src/js/init/index.js")}({"./node_modules/babel-loader/lib/index.js?!./node_modules/jquery/dist/jquery.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4!./node_modules/jquery/dist/jquery.js ***!
  \************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * jQuery JavaScript Library v3.5.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-05-04T22:49Z\n */\n(function (global, factory) {\n  "use strict";\n\n  if (( false ? undefined : _typeof(module)) === "object" && _typeof(module.exports) === "object") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require("jquery")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error("jQuery requires a window with a document");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  "use strict";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var _slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns "function" for HTML <object> elements\n    // (i.e., `typeof document.createElement( "object" ) === "function"`).\n    // We don\'t want to classify *any* DOM node as a function.\n    return typeof obj === "function" && typeof obj.nodeType !== "number";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement("script");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don\'t support the "nonce" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + "";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return _typeof(obj) === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : _typeof(obj);\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = "3.5.1",\n      // Define a local copy of jQuery\n  jQuery = function jQuery(selector, context) {\n    // The jQuery object is actually just the init constructor \'enhanced\'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  };\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function toArray() {\n      return _slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function get(num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return _slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function pushStack(elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function each(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function map(callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function slice() {\n      return this.pushStack(_slice.apply(this, arguments));\n    },\n    first: function first() {\n      return this.eq(0);\n    },\n    last: function last() {\n      return this.eq(-1);\n    },\n    even: function even() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function odd() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function eq(i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function end() {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array\'s method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === "boolean") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (_typeof(target) !== "object" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === "__proto__" || target === copy) {\n            continue;\n          } // Recurse if we\'re merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don\'t bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: "jQuery" + (version + Math.random()).replace(/\\D/g, ""),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function error(msg) {\n      throw new Error(msg);\n    },\n    noop: function noop() {},\n    isPlainObject: function isPlainObject(obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== "[object Object]") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, "constructor") && proto.constructor;\n      return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function isEmptyObject(obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function globalEval(code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function each(obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // results is for internal usage only\n    makeArray: function makeArray(arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function inArray(elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function merge(first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function grep(elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function map(elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === "function") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_i, name) {\n    class2type["[object " + name + "]"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn\'t used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && "length" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.5\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2020-03-14\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = "sizzle" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function sortOrder(a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        pushNative = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it\'s faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function indexOf(list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" + "ismap|loop|multiple|open|readonly|required|scoped",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = "[\\\\x20\\\\t\\\\r\\\\n\\\\f]",\n        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = "(?:\\\\\\\\[\\\\da-fA-F]{1,6}" + whitespace + "?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = "\\\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)\n    "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]\n    // or strings [capture 3 or capture 4]"\n    "*(?:\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\"|(" + identifier + "))|)" + whitespace + "*\\\\]",\n        pseudos = ":(" + identifier + ")(?:\\\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    "(\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\")|" + // 2. simple (capture 6)\n    "((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)\n    ".*" + ")\\\\)|)",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + "+", "g"),\n        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)" + whitespace + "+$", "g"),\n        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),\n        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),\n        rdescend = new RegExp(whitespace + "|>"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp("^" + identifier + "$"),\n        matchExpr = {\n      "ID": new RegExp("^#(" + identifier + ")"),\n      "CLASS": new RegExp("^\\\\.(" + identifier + ")"),\n      "TAG": new RegExp("^(" + identifier + "|[*])"),\n      "ATTR": new RegExp("^" + attributes),\n      "PSEUDO": new RegExp("^" + pseudos),\n      "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(" + whitespace + "*(even|odd|(([+-]|)(\\\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\\\d+)|))" + whitespace + "*\\\\)|)", "i"),\n      "bool": new RegExp("^(?:" + booleans + ")$", "i"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(" + whitespace + "*((?:-\\\\d)?\\\\d*)" + whitespace + "*\\\\)|)(?=[^-]|$)", "i")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp("\\\\\\\\[\\\\da-fA-F]{1,6}" + whitespace + "?|\\\\\\\\([^\\\\r\\\\n\\\\f])", "g"),\n        funescape = function funescape(escape, nonHex) {\n      var high = "0x" + escape.slice(1) - 0x10000;\n      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence\n      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point\n      // Support: IE <=11+\n      // For values outside the Basic Multilingual Plane (BMP), manually construct a\n      // surrogate pair\n      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function fcssescape(ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === "\\0") {\n          return "\\uFFFD";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + "\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return "\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a "Permission Denied"\n    // error in IE\n    unloadHandler = function unloadHandler() {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";\n    }, {\n      dir: "parentNode",\n      next: "legend"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can\'t trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a "get*By*" DOM method\n          // (excepting DocumentFragment context, where the methods don\'t exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser\n              // supports it & if we\'re not changing the context.\n\n              if (newContext !== context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute("id")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute("id", nid = expando);\n                }\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(",");\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute("id");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, "$1"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + " ") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + " "] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement("fieldset");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split("|"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === "input" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === "input" || name === "button") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if ("form" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a "form" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if ("label" in elem) {\n              if ("label" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can\'t be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn\'t\n          // even exist on them, let alone have a boolean value.\n        } else if ("label" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== "undefined" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem.namespaceURI,\n          docElem = (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn\'t yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener("unload", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent("onunload", unloadHandler);\n        }\n      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don\'t support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it\'s an alias of :root there.\n\n\n      support.scope = assert(function (el) {\n        docElem.appendChild(el).appendChild(document.createElement("div"));\n        return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;\n      });\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n      support.attributes = assert(function (el) {\n        el.className = "i";\n        return !el.getAttribute("className");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName("*") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(""));\n        return !el.getElementsByTagName("*").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don\'t pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter["ID"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute("id") === attrId;\n          };\n        };\n\n        Expr.find["ID"] = function (id, context) {\n          if (typeof context.getElementById !== "undefined" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter["ID"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find["ID"] = function (id, context) {\n          if (typeof context.getElementById !== "undefined" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode("id");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode("id");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== "undefined") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don\'t have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === "*") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          var input; // Select is set to empty string on purpose\n          // This is to test IE\'s treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n\n          docElem.appendChild(el).innerHTML = "<a id=\'" + expando + "\'></a>" + "<select id=\'" + expando + "-\\r\\\\\' msallowcapture=\'\'>" + "<option selected=\'\'></option></select>"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but "safe" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll("[msallowcapture^=\'\']").length) {\n            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:\'\'|\\"\\")");\n          } // Support: IE8\n          // Boolean attributes and "value" are not treated correctly\n\n\n          if (!el.querySelectorAll("[selected]").length) {\n            rbuggyQSA.push("\\\\[" + whitespace + "*(?:value|" + booleans + ")");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll("[id~=" + expando + "-]").length) {\n            rbuggyQSA.push("~=");\n          } // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don\'t find elements on a `[name=\'\']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don\'t seem to have the issue.\n\n\n          input = document.createElement("input");\n          input.setAttribute("name", "");\n          el.appendChild(input);\n\n          if (!el.querySelectorAll("[name=\'\']").length) {\n            rbuggyQSA.push("\\\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:\'\'|\\"\\")");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(":checked").length) {\n            rbuggyQSA.push(":checked");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll("a#" + expando + "+*").length) {\n            rbuggyQSA.push(".#.+[+~]");\n          } // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn\'t throw on a badly-escaped identifier.\n\n\n          el.querySelectorAll("\\\\\\f");\n          rbuggyQSA.push("[\\\\r\\\\n\\\\f]");\n        });\n        assert(function (el) {\n          el.innerHTML = "<a href=\'\' disabled=\'disabled\'></a>" + "<select disabled=\'disabled\'><option/></select>"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement("input");\n          input.setAttribute("type", "hidden");\n          el.appendChild(input).setAttribute("name", "D"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll("[name=d]").length) {\n            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(":enabled").length !== 2) {\n            rbuggyQSA.push(":enabled", ":disabled");\n          } // Support: IE9-11+\n          // IE\'s :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(":disabled").length !== 2) {\n            rbuggyQSA.push(":enabled", ":disabled");\n          } // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll("*,:x");\n          rbuggyQSA.push(",.*:");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it\'s possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, "*"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, "[s!=\'\']:x");\n          rbuggyMatches.push("!=", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n\n\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          } // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n\n\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 :\n          /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n        // two documents; shallow comparisons work.\n\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :\n        /* eslint-enable eqeqeq */\n        0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9\'s matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don\'t get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + "").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error("Syntax error, unrecognized expression: " + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = "",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === "string") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        ">": {\n          dir: "parentNode",\n          first: true\n        },\n        " ": {\n          dir: "parentNode"\n        },\n        "+": {\n          dir: "previousSibling",\n          first: true\n        },\n        "~": {\n          dir: "previousSibling"\n        }\n      },\n      preFilter: {\n        "ATTR": function ATTR(match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);\n\n          if (match[2] === "~=") {\n            match[3] = " " + match[3] + " ";\n          }\n\n          return match.slice(0, 4);\n        },\n        "CHILD": function CHILD(match) {\n          /* matches from matchExpr["CHILD"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === "nth") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));\n            match[5] = +(match[7] + match[8] || match[3] === "odd"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        "PSEUDO": function PSEUDO(match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr["CHILD"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || ""; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        "TAG": function TAG(nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === "*" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        "CLASS": function CLASS(className) {\n          var pattern = classCache[className + " "];\n          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");\n          });\n        },\n        "ATTR": function ATTR(name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === "!=";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += "";\n            /* eslint-disable max-len */\n\n            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;\n            /* eslint-enable max-len */\n          };\n        },\n        "CHILD": function CHILD(type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== "nth",\n              forward = type.slice(-4) !== "last",\n              ofType = what === "of-type";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? "nextSibling" : "previousSibling",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven\'t yet done so)\n\n\n                  start = dir = type === "only" && !start && "nextSibling";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        "PSEUDO": function PSEUDO(pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, "", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        "not": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, "$1"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don\'t keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        "has": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        "contains": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // "Whether an element is represented by a :lang() selector\n        // is based solely on the element\'s language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by "-".\n        // The matching of C against the element\'s language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name."\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        "lang": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || "")) {\n            Sizzle.error("unsupported lang: " + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        "target": function target(elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        "root": function root(elem) {\n          return elem === docElem;\n        },\n        "focus": function focus(elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        "enabled": createDisabledPseudo(false),\n        "disabled": createDisabledPseudo(true),\n        "checked": function checked(elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;\n        },\n        "selected": function selected(elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        "empty": function empty(elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        "parent": function parent(elem) {\n          return !Expr.pseudos["empty"](elem);\n        },\n        // Element/input types\n        "header": function header(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        "input": function input(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        "button": function button(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === "input" && elem.type === "button" || name === "button";\n        },\n        "text": function text(elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"\n          (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");\n        },\n        // Position-in-collection\n        "first": createPositionalPseudo(function () {\n          return [0];\n        }),\n        "last": createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        "eq": createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        "even": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "odd": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "lt": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        "gt": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos["nth"] = Expr.pseudos["eq"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + " "];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don\'t consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, " ")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we\'re just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = "";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === "parentNode",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can\'t set arbitrary data on XML nodes, so they don\'t benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we\'re done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[" "],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === " " ? "*" : ""\n            })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = "0",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find["TAG"]("*", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          outermostContext = context == document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0; // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n\n            if (!context && elem.ownerDocument != document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn\'t visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that\n        // case, which will result in a "00" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + " "];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle\'s compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === "function" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split("").sort(sortOrder).join("") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren\'t passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement("fieldset")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property "interpolation"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = "<a href=\'#\'></a>";\n      return el.firstChild.getAttribute("href") === "#";\n    })) {\n      addHandle("type|href|height|width", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute("value")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = "<input/>";\n      el.firstChild.setAttribute("value", "");\n      return el.firstChild.getAttribute("value") === "";\n    })) {\n      addHandle("value", function (elem, _name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === "input") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute("disabled") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[":"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function dir(elem, _dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var _siblings = function siblings(n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== "string") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = ":not(" + expr + ")";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function find(selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== "string") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function filter(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function not(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function is(selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $("p:first").is("p:last") won\'t return true for a doc with two "p".\n      typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(""), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === "string") {\n      if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function has(target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function closest(selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== "string" && jQuery(selectors); // Positional selectors never match, since there\'s no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don\'t pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function index(elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === "string") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function add(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function addBack(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function parent(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function parents(elem) {\n      return dir(elem, "parentNode");\n    },\n    parentsUntil: function parentsUntil(elem, _i, until) {\n      return dir(elem, "parentNode", until);\n    },\n    next: function next(elem) {\n      return sibling(elem, "nextSibling");\n    },\n    prev: function prev(elem) {\n      return sibling(elem, "previousSibling");\n    },\n    nextAll: function nextAll(elem) {\n      return dir(elem, "nextSibling");\n    },\n    prevAll: function prevAll(elem) {\n      return dir(elem, "previousSibling");\n    },\n    nextUntil: function nextUntil(elem, _i, until) {\n      return dir(elem, "nextSibling", until);\n    },\n    prevUntil: function prevUntil(elem, _i, until) {\n      return dir(elem, "previousSibling", until);\n    },\n    siblings: function siblings(elem) {\n      return _siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function children(elem) {\n      return _siblings(elem.firstChild);\n    },\n    contents: function contents(elem) {\n      if (elem.contentDocument != null && // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don\'t support it.\n\n\n      if (nodeName(elem, "template")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== "Until") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === "string") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * "fired" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest "memorized"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    _fired,\n        // Flag to prevent firing\n    _locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function fire() {\n      // Enforce single-firing\n      _locked = _locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      _fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn\'t re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we\'re done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we\'re done firing for good\n\n      if (_locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = "";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function add() {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== "string") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function remove() {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function has(fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function empty() {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function disable() {\n        _locked = queue = [];\n        list = memory = "";\n        return this;\n      },\n      disabled: function disabled() {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function lock() {\n        _locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = "";\n        }\n\n        return this;\n      },\n      locked: function locked() {\n        return !!_locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function fireWith(context, args) {\n        if (!_locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function fire() {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function fired() {\n        return !!_fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn\'t unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function Deferred(func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      ["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],\n          _state = "pending",\n          _promise = {\n        state: function state() {\n          return _state;\n        },\n        always: function always() {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        "catch": function _catch(fn) {\n          return _promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function pipe()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (_i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function then(onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function mightThrow() {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError("Thenable self-resolution");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                _typeof(returned) === "object" || typeof returned === "function") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it\'s otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function promise(obj) {\n          return obj != null ? jQuery.extend(obj, _promise) : _promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        _promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = "resolved" (i.e., fulfilled)\n            // state = "rejected"\n            _state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + "With"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      _promise.promise(deferred); // Call given func if any\n\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function when(singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = _slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function updateFunc(i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    ["catch"](function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function ready(wait) {\n      // Abort if there are pending holds or we\'re already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener("DOMContentLoaded", completed);\n    window.removeEventListener("load", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals "interactive" too soon\n\n\n  if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener("DOMContentLoaded", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener("load", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it\'s a function\n\n\n  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === "object") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function fn(elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function acceptData(owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function cache(owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function set(owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === "string") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function get(owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function access(owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the "read" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === "string" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the "set" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function remove(owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there\'s no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function hasData(owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module\'s maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support "private" and "user" data.\n  //\t4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === "true") {\n      return true;\n    }\n\n    if (data === "false") {\n      return false;\n    }\n\n    if (data === "null") {\n      return null;\n    } // Only convert to a number if it doesn\'t change the string\n\n\n    if (data === +data + "") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === "string") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn\'t changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function hasData(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function data(elem, name, _data) {\n      return dataUser.access(elem, name, _data);\n    },\n    removeData: function removeData(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function _data(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function _removeData(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function data(key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf("data-") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, "hasDataAttrs", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (_typeof(key) === "object") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to "discover" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn\'t exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function removeData(key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function queue(elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || "fx") + "queue";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function dequeue(elem, type) {\n      type = type || "fx";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function next() {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === "inprogress") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === "fx") {\n          queue.unshift("inprogress");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function _queueHooks(elem, type) {\n      var key = type + "queueHooks";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks("once memory").add(function () {\n          dataPriv.remove(elem, [type + "queue", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function queue(type, data) {\n      var setter = 2;\n\n      if (typeof type !== "string") {\n        data = type;\n        type = "fx";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === "fx" && queue[0] !== "inprogress") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function dequeue(type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function clearQueue(type) {\n      return this.queue(type || "fx", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function promise(type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function resolve() {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== "string") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || "fx";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + "queueHooks");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");\n  var cssExpand = ["Top", "Right", "Bottom", "Left"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function isAttached(elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n\n\n  if (documentElement.getRootNode) {\n    isAttached = function isAttached(elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, "display") === "none";\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, "");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, "display");\n    temp.parentNode.removeChild(temp);\n\n    if (display === "none") {\n      display = "block";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === "none") {\n          values[index] = dataPriv.get(elem, "display") || null;\n\n          if (!values[index]) {\n            elem.style.display = "";\n          }\n        }\n\n        if (elem.style.display === "" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== "none") {\n          values[index] = "none"; // Remember what we\'re overwriting\n\n          dataPriv.set(elem, "display", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function show() {\n      return showHide(this, true);\n    },\n    hide: function hide() {\n      return showHide(this);\n    },\n    toggle: function toggle(state) {\n      if (typeof state === "boolean") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement("div")),\n        input = document.createElement("input"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute("type", "radio");\n    input.setAttribute("checked", "checked");\n    input.setAttribute("name", "t");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn\'t clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = "<textarea>x</textarea>";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n\n    div.innerHTML = "<option></option>";\n    support.option = !!div.lastChild;\n  })(); // We have to close these tags to support XHTML (#13200)\n\n\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, "<table>", "</table>"],\n    col: [2, "<table><colgroup>", "</colgroup></table>"],\n    tr: [2, "<table><tbody>", "</tbody></table>"],\n    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],\n    _default: [0, "", ""]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td; // Support: IE <=9 only\n\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, "<select multiple=\'multiple\'>", "</select>"];\n  }\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== "undefined") {\n      ret = context.getElementsByTagName(tag || "*");\n    } else if (typeof context.querySelectorAll !== "undefined") {\n      ret = context.querySelectorAll(tag || "*");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === "object") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement("div")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = "";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = "";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), "script"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || "")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === "focus");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function _on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (_typeof(types) === "object") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== "string") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        _on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === "string") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function fn(event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards\' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function add(elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Only attach events to objects that accept data\n\n      if (!acceptData(elem)) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element\'s event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || "").match(rnothtmlwhite) || [""];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || "").split(".").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(".")\n        }, handleObjIn); // Init the event handler queue if we\'re the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element\'s handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function remove(elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || "").match(rnothtmlwhite) || [""];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || "").split(".").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp("(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it\'s no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, "handle events");\n      }\n    },\n    dispatch: function dispatch(nativeEvent) {\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(nativeEvent),\n          handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event\'s.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function handlers(event, _handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = _handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === "click" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don\'t check non-elements (#13208)\n          // Don\'t process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = _handlers[i]; // Don\'t conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + " ";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < _handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: _handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function addProp(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function set(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function fix(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function setup(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {\n            // dataPriv.set( el, "click", ... )\n            leverageNative(el, "click", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function trigger(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {\n            leverageNative(el, "click");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we\'re currently inside a leveraged native-event stack\n        _default: function _default(event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");\n        }\n      },\n      beforeunload: {\n        postDispatch: function postDispatch(event) {\n          // Support: Firefox 20+\n          // Firefox doesn\'t alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function handler(event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350)\n          if (!saved.length) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = _slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result.value;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved.length) {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger( // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation()\n            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          }); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This "if" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the \'new\' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn\'t have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function preventDefault() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function stopPropagation() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function stopImmediatePropagation() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    "char": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function which(event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: "focusin",\n    blur: "focusout"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function setup() {\n        // Claim the first handler\n        // dataPriv.set( this, "focus", ... )\n        // dataPriv.set( this, "blur", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function trigger() {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: "mouseover",\n    mouseleave: "mouseout",\n    pointerenter: "pointerover",\n    pointerleave: "pointerout"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function handle(event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function on(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn);\n    },\n    one: function one(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn, 1);\n    },\n    off: function off(types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (_typeof(types) === "object") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === "function") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked="checked" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {\n      return jQuery(elem).children("tbody")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || "").slice(0, 5) === "true/") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute("type");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n\n      if (events) {\n        dataPriv.remove(dest, "handle events");\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === "input" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === "input" || nodeName === "textarea") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can\'t cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, "script"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, "script"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || "").toLowerCase() !== "module") {\n                // Optional AJAX dependency, but won\'t run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute("nonce")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function _remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, "script"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function htmlPrefilter(html) {\n      return html;\n    },\n    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, "script");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, "script"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function cleanData(elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove\'s overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function detach(selector) {\n      return _remove(this, selector, true);\n    },\n    remove: function remove(selector) {\n      return _remove(this, selector);\n    },\n    text: function text(value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function append() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function prepend() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function before() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function after() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function empty() {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = "";\n        }\n      }\n\n      return this;\n    },\n    clone: function clone(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function html(value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function replaceWith() {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: "append",\n    prependTo: "prepend",\n    insertBefore: "before",\n    insertAfter: "after",\n    replaceAll: "replaceWith"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");\n\n  var getStyles = function getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var swap = function swap(elem, options, callback) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.call(elem); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join("|"), "i");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they\'re executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";\n      div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== "1%"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn\'t\n\n      div.style.right = "60%";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don\'t get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = "absolute";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn\'t be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement("div"),\n        div = document.createElement("div"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = "content-box";\n    div.cloneNode(true).style.backgroundClip = "";\n    support.clearCloneStyle = div.style.backgroundClip === "content-box";\n    jQuery.extend(support, {\n      boxSizingReliable: function boxSizingReliable() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function pixelBoxStyles() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function pixelPosition() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function reliableMarginLeft() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function scrollboxSize() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      reliableTrDimensions: function reliableTrDimensions() {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement("table");\n          tr = document.createElement("tr");\n          trChild = document.createElement("div");\n          table.style.cssText = "position:absolute;left:-11111px";\n          tr.style.height = "1px";\n          trChild.style.height = "9px";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height) > 3;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css(\'filter\') (IE 9 only, #12537)\n    //   .css(\'--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === "" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the "awesome hack by Dean Edwards"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + "" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we\'ll check on the first run if it\'s really needed.\n    return {\n      get: function get() {\n        if (conditionFn()) {\n          // Hook not needed (or it\'s not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = ["Webkit", "Moz", "ms"],\n      emptyStyle = document.createElement("div").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var _final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (_final) {\n      return _final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except "table", "table-cell", or "table-caption"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: "absolute",\n    visibility: "hidden",\n    display: "block"\n  },\n      cssNormalTransform = {\n    letterSpacing: "0",\n    fontWeight: "400"\n  };\n\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === "width" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? "border" : "content")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === "margin") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we\'re seeking "padding" or "border" or "margin"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles); // For "border" or "margin", add border\n\n        if (box !== "padding") {\n          delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);\n        } // If we get here with a border-box (content + padding + border), we\'re seeking "content" or\n        // "padding" or "margin"\n\n      } else {\n        // For "content", subtract padding\n        if (box === "content") {\n          delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);\n        } // For "content" or "padding", subtract border\n\n\n        if (box !== "margin") {\n          delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can\'t determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it\'s needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = "auto";\n    } // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn\'t suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === "auto" || // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize "" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element\'s box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + "px";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function get(elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, "opacity");\n            return ret === "" ? "1" : ret;\n          }\n        }\n      }\n    },\n    // Don\'t automatically add "px" to these possibly-unitless properties\n    cssNumber: {\n      "animationIterationCount": true,\n      "columnCount": true,\n      "fillOpacity": true,\n      "flexGrow": true,\n      "flexShrink": true,\n      "fontWeight": true,\n      "gridArea": true,\n      "gridColumn": true,\n      "gridColumnEnd": true,\n      "gridColumnStart": true,\n      "gridRow": true,\n      "gridRowEnd": true,\n      "gridRowStart": true,\n      "lineHeight": true,\n      "opacity": true,\n      "order": true,\n      "orphans": true,\n      "widows": true,\n      "zIndex": true,\n      "zoom": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function style(elem, name, value, extra) {\n      // Don\'t set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we\'re working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we\'re working with the right name. We don\'t\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we\'re setting a value\n\n      if (value !== undefined) {\n        type = _typeof(value); // Convert "+=" or "-=" to relative numbers (#7345)\n\n        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = "number";\n        } // Make sure that null and NaN values aren\'t set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // "px" to a few hardcoded values.\n\n\n        if (type === "number" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");\n        } // background-* props affect original clone\'s values\n\n\n        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {\n          style[name] = "inherit";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function css(elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we\'re working with the right name. We don\'t\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && "get" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert "normal" to computed value\n\n\n      if (val === "normal" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === "" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each(["height", "width"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function get(elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, "display")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function set(elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + "px";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: "",\n    padding: "",\n    border: "Width"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function expand(value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === "string" ? value.split(" ") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== "margin") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function css(name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function init(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");\n    },\n    cur: function cur() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function run(percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function get(tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as "10px" are parsed to Float;\n        // complex values such as "rotate(1rad)" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, ""); // Empty strings, null, undefined and "auto" are converted to 0.\n\n        return !result || result === "auto" ? 0 : result;\n      },\n      set: function set(tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function set(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function linear(p) {\n      return p;\n    },\n    swing: function swing(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: "swing"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs["margin" + which] = attrs["padding" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We\'re done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = "width" in props || "height" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, "fxshow"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, "fx");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, "fx").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === "toggle";\n\n        if (value === (hidden ? "hide" : "show")) {\n          // Pretend to be hidden if this is a "show" and\n          // there is still data from a stopped show/hide\n          if (value === "show" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict "overflow" and "display" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, "display");\n      }\n\n      display = jQuery.css(elem, "display");\n\n      if (display === "none") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, "display");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === "inline" || display === "inline-block" && restoreDisplay != null) {\n        if (jQuery.css(elem, "float") === "none") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === "none" ? "" : display;\n            }\n          }\n\n          style.display = "inline-block";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = "hidden";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if ("hidden" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, "fxshow", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` "reverses"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a "hide" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, "fxshow");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && "expand" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won\'t overwrite existing keys.\n        // Reusing \'index\' because we have the correct "name"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don\'t match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function tick() {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won\'t allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there\'s more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function createTween(prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function stop(gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      "*": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function tweener(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = ["*"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function prefilter(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && _typeof(speed) === "object" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== "number") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> "fx"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = "fx";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function fadeTo(speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css("opacity", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function animate(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function doAnimation() {\n        // Operate on a copy of prop so per-property easing won\'t be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, "finish")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function stop(type, clearQueue, gotoEnd) {\n      var stopQueue = function stopQueue(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== "string") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue) {\n        this.queue(type || "fx", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + "queueHooks",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn\'t forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function finish(type) {\n      if (type !== false) {\n        type = type || "fx";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + "queue"],\n            hooks = data[type + "queueHooks"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each(["toggle", "show", "hide"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx("show"),\n    slideUp: genFx("hide"),\n    slideToggle: genFx("toggle"),\n    fadeIn: {\n      opacity: "show"\n    },\n    fadeOut: {\n      opacity: "hide"\n    },\n    fadeToggle: {\n      opacity: "toggle"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || "fx";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement("input"),\n        select = document.createElement("select"),\n        opt = select.appendChild(document.createElement("option"));\n    input.type = "checkbox"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be "on"\n\n    support.checkOn = input.value !== ""; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement("input");\n    input.value = "t";\n    input.type = "radio";\n    support.radioValue = input.value === "t";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function attr(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function removeAttr(name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function attr(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don\'t get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === "undefined") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + "");\n        return value;\n      }\n\n      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function set(elem, value) {\n          if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {\n            var val = elem.value;\n            elem.setAttribute("type", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function set(elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function prop(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function prop(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don\'t get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function get(elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn\'t always return the\n          // correct value when it hasn\'t been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, "tabindex");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      "for": "htmlFor",\n      "class": "className"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule "no-unused-expressions" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function get(elem) {\n        /* eslint no-unused-expressions: "off" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function set(elem) {\n        /* eslint no-unused-expressions: "off" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(" ");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute("class") || "";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === "string") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function addClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(" " + clazz + " ") < 0) {\n                cur += clazz + " ";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute("class", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function removeClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr("class", "");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(" " + clazz + " ") > -1) {\n                cur = cur.replace(" " + clazz + " ", " ");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute("class", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function toggleClass(value, stateVal) {\n      var type = _typeof(value),\n          isValidValue = type === "string" || Array.isArray(value);\n\n      if (typeof stateVal === "boolean" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === "boolean") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, "__className__", className);\n          } // If the element has a class name or if we\'re passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");\n          }\n        }\n      });\n    },\n    hasClass: function hasClass(selector) {\n      var className,\n          elem,\n          i = 0;\n      className = " " + selector + " ";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function val(value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === "string") {\n            return ret.replace(rreturn, "");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? "" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as ""; convert numbers to string\n\n\n        if (val == null) {\n          val = "";\n        } else if (typeof val === "number") {\n          val += "";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? "" : value + "";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function get(elem) {\n          var val = jQuery.find.attr(elem, "value");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function get(elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === "select-one",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn\'t update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don\'t return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don\'t need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function set(elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each(["radio", "checkbox"], function () {\n    jQuery.valHooks[this] = {\n      set: function set(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute("value") === null ? "on" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = "onfocusin" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function stopPropagationCallback(e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function trigger(event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, "type") ? event.type : event,\n          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don\'t do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we\'re not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(".") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(".");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(":") < 0 && "on" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === "object" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(".");\n      event.rnamespace = event.namespace ? new RegExp("(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don\'t do default actions on window, that\'s where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don\'t re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function simulate(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function trigger(type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function triggerHandler(type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn\'t have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: "focusin",\n      blur: "focusout"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function handler(event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function setup() {\n          // Handle: regular nodes (via `this.ownerDocument`), window\n          // (via `this.document`) & document (via `this`).\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function teardown() {\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== "string") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, "text/xml");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName("parsererror").length) {\n      jQuery.error("Invalid XML: " + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + "[" + (_typeof(v) === "object" && v != null ? i : "") + "]", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === "object") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function add(key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);\n    };\n\n    if (a == null) {\n      return "";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the "old" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join("&");\n  };\n\n  jQuery.fn.extend({\n    serialize: function serialize() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function serializeArray() {\n      return this.map(function () {\n        // Can add propHook for "elements" to filter or add form elements\n        var elements = jQuery.prop(this, "elements");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( ":disabled" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, "\\r\\n")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, "\\r\\n")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol "*" can be used\n   * 5) execution will start with transport dataType and THEN continue down to "*" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol "*" can be used\n   * 3) selection will start with transport dataType and THEN go to "*" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = "*/".concat("*"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement("a");\n  originAnchor.href = location.href; // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to "*"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== "string") {\n        func = dataTypeExpression;\n        dataTypeExpression = "*";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === "+") {\n            dataType = dataType.slice(1) || "*";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");\n  } // A special extend for ajax options\n  // that takes "flat" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === "*") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");\n      }\n    } // Check if we\'re dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There\'s only work to do if current dataType is non-auto\n        if (current === "*") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== "*" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + " " + current] || converters["* " + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(" ");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s["throws"]) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: "parsererror",\n                  error: conv ? e : "No conversion from " + prev + " to " + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: "success",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: "GET",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: "application/x-www-form-urlencoded; charset=UTF-8",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        "*": allTypes,\n        text: "text/plain",\n        html: "text/html",\n        xml: "application/xml, text/xml",\n        json: "application/json, text/javascript"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: "responseXML",\n        text: "responseText",\n        json: "responseJSON"\n      },\n      // Data converters\n      // Keys separate source (or catchall "*") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        "* text": String,\n        // Text to html (true = no transformation)\n        "text html": true,\n        // Evaluate text as a json expression\n        "text json": JSON.parse,\n        // Parse text as xml\n        "text xml": jQuery.parseXML\n      },\n      // For options that shouldn\'t be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn\'t be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function ajaxSetup(target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function ajax(url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (_typeof(url) === "object") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks("once memory"),\n          // Status-dependent callbacks\n      _statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = "canceled",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function getResponseHeader(key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + " "];\n          }\n\n          return match == null ? null : match.join(", ");\n        },\n        // Raw string\n        getAllResponseHeaders: function getAllResponseHeaders() {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function setRequestHeader(name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function overrideMimeType(type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function statusCode(map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                _statusCode[code] = [_statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function abort(statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]; // A cross-domain request is in order when the origin doesn\'t match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement("a"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor\'s host property isn\'t correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== "string") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don\'t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger("ajaxStart");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we\'re toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, ""); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === "string")) {\n          cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data; // #9682: remove data so that it\'s not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, "$1");\n          uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change \'%20\' to \'+\' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {\n        s.data = s.data.replace(r20, "+");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader("Content-Type", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = "abort"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, "No Transport");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger("ajaxSend", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort("timeout");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || ""; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Use a noop converter for missing script\n\n\n        if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1) {\n          s.converters["text script"] = function () {};\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader("Last-Modified");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader("etag");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === "HEAD") {\n            statusText = "nocontent"; // if not modified\n          } else if (status === 304) {\n            statusText = "notmodified"; // If we have data, let\'s convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = "error";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + ""; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(_statusCode);\n        _statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger("ajaxComplete", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger("ajaxStop");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function getJSON(url, data, callback) {\n      return jQuery.get(url, data, callback, "json");\n    },\n    getScript: function getScript(url, callback) {\n      return jQuery.get(url, undefined, callback, "script");\n    }\n  });\n  jQuery.each(["get", "post"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n\n    for (i in s.headers) {\n      if (i.toLowerCase() === "content-type") {\n        s.contentType = s.headers[i] || "";\n      }\n    }\n  });\n\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: "GET",\n      dataType: "script",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        "text script": function textScript() {}\n      },\n      dataFilter: function dataFilter(response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function wrapAll(html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function wrapInner(html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function wrap(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function unwrap(selector) {\n      this.parent(selector).not("body").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && "withCredentials" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function send(headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won\'t change header if already provided.\n\n\n          if (!options.crossDomain && !headers["X-Requested-With"]) {\n            headers["X-Requested-With"] = "XMLHttpRequest";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          _callback = function callback(type) {\n            return function () {\n              if (_callback) {\n                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === "abort") {\n                  xhr.abort();\n                } else if (type === "error") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== "number") {\n                    complete(0, "error");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = _callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = _callback("error"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (_callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          _callback = _callback("abort");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn\'t been notified as an error yet\n            if (_callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function abort() {\n          if (_callback) {\n            _callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      "text script": function textScript(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache\'s special case and crossDomain\n\n  jQuery.ajaxPrefilter("script", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = "GET";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport("script", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, _callback2;\n\n      return {\n        send: function send(_, complete) {\n          script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on("load error", _callback2 = function callback(evt) {\n            script.remove();\n            _callback2 = null;\n\n            if (evt) {\n              complete(evt.type === "error" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function abort() {\n          if (_callback2) {\n            _callback2();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: "callback",\n    jsonpCallback: function jsonpCallback() {\n      var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data"); // Handle iff the expected data type is "jsonp" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === "jsonp") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters["script json"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + " was not called");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = "json"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn\'t exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn\'t screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return "script";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument("").body;\n    body.innerHTML = "<form></form><form></form>";\n    return body.childNodes.length === 2;\n  }(); // Argument "data" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== "string") {\n      return [];\n    }\n\n    if (typeof context === "boolean") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(""); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document\'s URL (gh-2965)\n\n        base = context.createElement("base");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(" ");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it\'s a function\n\n\n    if (isFunction(params)) {\n      // We assume that it\'s the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && _typeof(params) === "object") {\n      type = "POST";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If "type" variable is undefined, then "GET" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || "GET",\n        dataType: "html",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE \'Permission Denied\' errors\n        jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets "data", "status", "jqXHR"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets "jqXHR", "status", "error"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  };\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function setOffset(elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, "position"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === "static") {\n        elem.style.position = "relative";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, "top");\n      curCSSLeft = jQuery.css(elem, "left");\n      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if ("using" in options) {\n        options.using.call(elem, props);\n      } else {\n        if (typeof props.top === "number") {\n          props.top += "px";\n        }\n\n        if (typeof props.left === "number") {\n          props.left += "px";\n        }\n\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element\'s border box to the document origin\n    offset: function offset(options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element\'s margin box to its offset parent\'s padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function position() {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, "position") === "fixed") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);\n          parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: "pageXOffset",\n    scrollTop: "pageYOffset"\n  }, function (method, prop) {\n    var top = "pageYOffset" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each(["top", "left"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: "height",\n    Width: "width"\n  }, function (name, type) {\n    jQuery.each({\n      padding: "inner" + name,\n      content: type,\n      "": "outer" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),\n            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function bind(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function unbind(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function delegate(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function undelegate(selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);\n    },\n    hover: function hover(fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  }); // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === "string") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = _slice.call(arguments, 2);\n\n    proxy = function proxy() {\n      return fn.apply(context || this, args.concat(_slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")\n    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n\n  jQuery.trim = function (text) {\n    return text == null ? "" : (text + "").replace(rtrim, "");\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (typeof noGlobal === "undefined") {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?./node_modules/babel-loader/lib??ref--4')},"./node_modules/babel-loader/lib/index.js?!./node_modules/mofron/src/core/namesp.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4!./node_modules/mofron/src/core/namesp.js ***!
  \****************************************************************************************/
/*! no static exports found */function(module,exports){eval('/**\n * @file namespace.js\n * @author simpart\n */\n//const Window = require("./Window.js");\nmodule.exports = {\n  root: [],\n  window: null,\n  "class": {},\n  objkey: {},\n  util: {} //debug  : false\n\n};\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/namesp.js?./node_modules/babel-loader/lib??ref--4')},"./node_modules/babel-loader/lib/index.js?!./node_modules/tetraring4js/src/namesp.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4!./node_modules/tetraring4js/src/namesp.js ***!
  \*****************************************************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  "use strict";\n\n  if (_typeof(module.exports) === "object") {\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error("requires a window with a document");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {\n  "use strict";\n\n  return {\n    arry: {},\n\n    /* array */\n    debg: {},\n\n    /* debug */\n    init: {},\n\n    /* init */\n    load: {},\n\n    /* loader */\n    rest: {},\n\n    /* rest */\n    time: {},\n\n    /* time */\n    url: {}\n    /* url */\n\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/namesp.js?./node_modules/babel-loader/lib??ref--4')},"./node_modules/babel-loader/lib/index.js?!./src/js/conf/namesp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4!./src/js/conf/namesp.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/**\n * @file namesp.js\n * @brief define namespace\n */\nvar mf = __webpack_require__(/*! mofron */ \"./node_modules/mofron/index.js\");\n/**\n * get GET parameter fron url\n */\n\n\nvar getParam = function getParam() {\n  try {\n    var ret = {};\n    var param = location.search.substring(1).split('&');\n\n    for (var loop = 0; loop < param.length; loop++) {\n      var key_srh = param[loop].search(/=/);\n      var key = -1 !== key_srh ? param[loop].slice(0, key_srh) : '';\n      var val = param[loop].slice(param[loop].indexOf('=', 0) + 1);\n\n      if ('' !== key) {\n        ret[key] = decodeURI(val);\n      }\n    }\n\n    return ret;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n/**\n * get hash value from url\n */\n\n\nvar getHash = function getHash() {\n  try {\n    var ret = window.location.hash.split('#')[1];\n    return undefined === ret ? null : ret;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n\nmodule.exports = {\n  //root : new mf.Component(),\n  conf: {\n    GET: getParam(),\n    hash: getHash()\n  }\n};\n/* end of file */\n\n//# sourceURL=webpack:///./src/js/conf/namesp.js?./node_modules/babel-loader/lib??ref--4")},"./node_modules/expose-loader/index.js?$!./node_modules/jquery/dist/jquery.js-exposed":
/*!***********************************************************************************!*\
  !*** ./node_modules/expose-loader?$!./node_modules/jquery/dist/jquery.js-exposed ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["$"] = __webpack_require__(/*! -!./node_modules/babel-loader/lib??ref--4!./jquery.js */ "./node_modules/babel-loader/lib/index.js?!./node_modules/jquery/dist/jquery.js");\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js-exposed?./node_modules/expose-loader?$')},"./node_modules/expose-loader/index.js?app!./src/js/conf/namesp.js-exposed":
/*!************************************************************************!*\
  !*** ./node_modules/expose-loader?app!./src/js/conf/namesp.js-exposed ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["app"] = __webpack_require__(/*! -!./node_modules/babel-loader/lib??ref--4!./namesp.js */ "./node_modules/babel-loader/lib/index.js?!./src/js/conf/namesp.js");\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./src/js/conf/namesp.js-exposed?./node_modules/expose-loader?app')},"./node_modules/expose-loader/index.js?mofron!./node_modules/mofron/src/core/namesp.js-exposed":
/*!********************************************************************************************!*\
  !*** ./node_modules/expose-loader?mofron!./node_modules/mofron/src/core/namesp.js-exposed ***!
  \********************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["mofron"] = __webpack_require__(/*! -!./node_modules/babel-loader/lib??ref--4!./namesp.js */ "./node_modules/babel-loader/lib/index.js?!./node_modules/mofron/src/core/namesp.js");\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/namesp.js-exposed?./node_modules/expose-loader?mofron')},"./node_modules/expose-loader/index.js?ttrg!./node_modules/tetraring4js/src/namesp.js-exposed":
/*!*******************************************************************************************!*\
  !*** ./node_modules/expose-loader?ttrg!./node_modules/tetraring4js/src/namesp.js-exposed ***!
  \*******************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["ttrg"] = __webpack_require__(/*! -!./node_modules/babel-loader/lib??ref--4!./namesp.js */ "./node_modules/babel-loader/lib/index.js?!./node_modules/tetraring4js/src/namesp.js");\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/namesp.js-exposed?./node_modules/expose-loader?ttrg')},"./node_modules/mofron-comp-appbase/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron-comp-appbase/index.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-appbase/index.js\n * @brief  common application component for mofron\n *         it makes easy to build page.\n * @license MIT\n */\nvar Header = __webpack_require__(/*! mofron-comp-appheader */ "./node_modules/mofron-comp-appheader/index.js");\n\nvar Image = __webpack_require__(/*! mofron-comp-image */ "./node_modules/mofron-comp-image/index.js");\n\nvar Synwin = __webpack_require__(/*! mofron-effect-syncwin */ "./node_modules/mofron-effect-syncwin/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   *\n   * @param (mixed) title parameter\n   *                dict: component config list\n   * @param (component) child component\n   * @short title,child\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("AppBase");\n\n      _this.shortForm("title", "child");\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.header(new Header());\n        this.bgwrap(new mofron["class"].Component());\n        var conts = new mofron["class"].Component({\n          width: \'100%\'\n        });\n        this.child([this.header(), this.bgwrap(), conts]);\n        this.childDom(conts.childDom());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set app title (header text)\n     *\n     * @param (mixed) string/mofron-comp-text: app title\n     * @param (mixed) string: path to app logo image\n     *                mofron-comp-image: logo image\n     * @return (mofron-comp-text) app title\n     * @type parameter\n     */\n\n  }, {\n    key: "title",\n    value: function title(prm, img) {\n      try {\n        var ret = this.header().title(prm);\n\n        if (undefined === prm) {\n          return ret;\n        }\n\n        this.header().image(img);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * app header\n     * \n     * @param (mofron-comp-header) header component\n     * @return (mofron-comp-header) header component\n     * @type parameter\n     */\n\n  }, {\n    key: "header",\n    value: function header(prm) {\n      try {\n        return this.innerComp(\'header\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * background wrapper\n     *\n     * @param (component) background wrapper component\n     * @return (component) background wrapper component\n     * @type private\n     */\n\n  }, {\n    key: "bgwrap",\n    value: function bgwrap(prm) {\n      try {\n        if (true === comutl.isinc(prm, "Component")) {\n          prm.style({\n            "position": "relative",\n            "z-index": "-10"\n          });\n        }\n\n        return this.innerComp("bgwrap", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * background component\n     * height is synchronized with window height by auto\n     * \n     * @param (component) background component\n     * @return (component) background component\n     * @type parameter\n     */\n\n  }, {\n    key: "background",\n    value: function background(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          var ret = this.bgwrap().child();\n          return 0 === ret.length ? null : ret[0];\n        }\n        /* setter */\n\n\n        this.bgwrap().child(prm);\n        cmputl.rstyle(prm, {\n          \'position\': \'fixed\'\n        });\n        var off = comutl.getsize(this.header().height());\n        off = null !== off ? \'-\' + off.toPixel() + \'px\' : undefined;\n        prm.config({\n          effect: new Synwin({\n            y_offset: off\n          })\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * height\n     * \n     * @param (string (size)) height size\n     * @param (dict) style option\n     * @return (string) height size\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return comutl.sizesum(this.header().height(), _get(_getPrototypeOf(_class.prototype), "height", this).call(this));\n        }\n        /* setter */\n\n\n        var set_hei = comutl.getsize(comutl.sizediff(prm, this.header().height()));\n\n        _get(_getPrototypeOf(_class.prototype), "height", this).call(this, 0 > set_hei.value() ? prm : set_hei, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter header color\n     * \n     * @param (mixed (color)) string: color name, #hex\n     *                        array: [red, green, blue, alpha]\n     * @param (option) style option\n     * @return (string) color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return this.header().baseColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * background base color setter/getter\n     *\n     * @param (mixed (color)) string: color name, #hex\n     *                        array: [red, green, blue, alpha]\n     * @param (dict) style option\n     * @return (string) color\n     * @type parameter\n     */\n\n  }, {\n    key: "baseColor",\n    value: function baseColor(prm, opt) {\n      try {\n        return cmputl.color(this, \'background\', prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-appbase/index.js?')},"./node_modules/mofron-comp-appheader/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-comp-appheader/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n *  @file  mofron-comp-appheader/index.js\n *  @brief app header component for mofron\n *  @license MIT\n */\nvar Image = __webpack_require__(/*! mofron-comp-image */ "./node_modules/mofron-comp-image/index.js");\n\nvar Header = __webpack_require__(/*! mofron-comp-txtheader */ "./node_modules/mofron-comp-txtheader/index.js");\n\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Link = __webpack_require__(/*! mofron-event-link */ "./node_modules/mofron-event-link/index.js");\n\nvar Synhei = __webpack_require__(/*! mofron-effect-synchei */ "./node_modules/mofron-effect-synchei/index.js");\n\nvar Hrzpos = __webpack_require__(/*! mofron-effect-hrzpos */ "./node_modules/mofron-effect-hrzpos/index.js");\n\nvar Horiz = __webpack_require__(/*! mofron-layout-horizon */ "./node_modules/mofron-layout-horizon/index.js");\n\nvar comutl = mofron.util.common;\nvar ConfArg = mofron["class"].ConfArg;\n\nmodule.exports = /*#__PURE__*/function (_Header) {\n  _inherits(_class, _Header);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) mixed: title config parameter\n   *                dict: component config list\n   * @param (mixed) image config parameter\n   * @param (component) navi config parameter \n   * @short title,image,navi\n   * @type private\n   */\n  function _class(p1, p2, p3) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'AppHeader\');\n\n      _this.shortForm(\'title\', \'image\', \'navi\');\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2, p3);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * init dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.child(this.image(), 0);\n        this.image().event(new Link("./"));\n        this.text().event(new Link("./"));\n        var conts = new mofron["class"].Component({\n          layout: new Horiz()\n        });\n        this.child([conts, this.naviWrap()]);\n        this.styleDom(this.styleDom());\n        this.childDom(conts.childDom());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * header title\n     *\n     * @param (mixed) string: header title\n     *                mofron-comp-text: replace title component of header\n     * @param (key-value) text config\n     * @return (mofron-comp-text) text contents\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(txt, cnf) {\n      try {\n        var ret = _get(_getPrototypeOf(_class.prototype), "text", this).call(this, txt, cnf);\n\n        if (undefined !== txt) {\n          this.text().style({\n            "margin-left": "0.2rem"\n          }, {\n            passive: true\n          });\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * header title, same as text\n     * \n     * @param (mixed) string: header title\n     *                mofron-comp-text: replace title component of header\n     * @param (key-value) text config\n     * @return (mofron-comp-text) text contents\n     * @type parameter\n     */\n\n  }, {\n    key: "title",\n    value: function title(txt, cnf) {\n      try {\n        return this.text(txt, cnf);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter logo image\n     * insert logo image to left side of title\n     *\n     * @param (mixed) string: path to logo image\n     *                mofron-comp-image: replace image component\n     * @param (key-value) image config\n     * @return (mofron-comp-image) logo image\n     * @type parameter\n     */\n\n  }, {\n    key: "image",\n    value: function image(prm, cnf) {\n      try {\n        if (undefined !== cnf) {\n          var add_cnf = true === comutl.isinc(prm, \'Image\') ? prm : this.image();\n          add_cnf.config(cnf);\n        }\n\n        if (\'string\' === typeof prm) {\n          this.image().config({\n            path: prm\n          });\n          return;\n        } else if (true === comutl.isinc(prm, \'Image\')) {\n          prm.config({\n            effect: new Synhei(this)\n          });\n          prm.style({\n            "margin-left": "0.1rem"\n          }, {\n            passive: true\n          });\n        }\n\n        return this.innerComp(\'image\', prm, Image);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter navigate area\n     *\n     * @param (component) navigate component\n     * @return (array) navigate component list\n     * @type parameter\n     */\n\n  }, {\n    key: "navi",\n    value: function navi(prm) {\n      try {\n        return this.naviWrap().child(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * logo image position and size offset\n     * \n     * @param (string (size)) left offset position\n     * @param (string (size)) height offset position\n     * \n     */\n\n  }, {\n    key: "imgpos",\n    value: function imgpos(lft, hei) {\n      try {\n        this.image().style({\n          "margin-left": lft\n        });\n        var syn = this.image().effect({\n          name: "SyncHei"\n        });\n\n        if (true === comutl.isinc(syn, "SyncHei")) {\n          syn.offset(hei);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter url jump target\n     * it jump to this url when user clicks logo or title\n     * set null if you don\'t want jump\n     * \n     * @param (mixed) string: jump url\n     *                null: not jump\n     * @return (string) jump url\n     * @type parameter\n     */\n\n  }, {\n    key: "url",\n    value: function url(prm) {\n      try {\n        var txt_link = this.text().event({\n          name: "Link"\n        });\n        var img_link = this.image().event({\n          name: "Link"\n        });\n\n        if (undefined === prm) {\n          return "" === txt_link.url() ? null : txt_link.url();\n        }\n\n        if (null === prm) {\n          txt_link.config({\n            url: "",\n            suspend: true\n          });\n          img_link.config({\n            url: "",\n            suspend: true\n          });\n        } else {\n          txt_link.url(prm);\n          img_link.url(prm);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter navigate wrapper\n     * \n     * @param (component) wrap component\n     * @return (component) wrap component\n     * @type private\n     */\n\n  }, {\n    key: "naviWrap",\n    value: function naviWrap(prm) {\n      try {\n        if (true === comutl.isinc(prm, \'Component\')) {\n          prm.config({\n            layout: new Horiz(),\n            effect: new Hrzpos("right", "0.2rem")\n          });\n        }\n\n        return this.innerComp(\'naviWrap\', prm, mofron["class"].Component);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Header);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-appheader/index.js?')},"./node_modules/mofron-comp-button/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-comp-button/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  mofron-comp-button/index.js\n * @brief button component for mofron\n * @license MIT\n */\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nvar SynHei = __webpack_require__(/*! mofron-effect-synchei */ "./node_modules/mofron-effect-synchei/index.js");\n\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * constructor\n   * \n   * @param (mixed) string: text parameter\n   *                object: component config\n   * @param (mixed) clickEvent parameter\n   * @short text,clickEvent\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Button\');\n\n      _this.shortForm(\'text\', \'clickEvent\');\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this, \'button\');\n        /* set button text */\n\n\n        this.child(this.text());\n        /* set default config */\n\n        this.height(\'0.25rem\');\n        this.status(true);\n        this.text().effect(new SynHei(this));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button text contents\n     *\n     * @param (mixed) string: button text contents\n     *                mofron-comp-text: button text component\n     * @return (mofron-comp-text) button text\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(txt) {\n      try {\n        if (\'string\' === typeof txt) {\n          this.text().text(txt);\n          return;\n        }\n\n        return this.innerComp(\'text\', txt, Text);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button click event\n     *\n     * @param (function) click event function\n     * @param (mixed) function parameter\n     * @type parameter\n     */\n\n  }, {\n    key: "clickEvent",\n    value: function clickEvent(func, prm) {\n      try {\n        var ev = this.event({\n          name: "Click",\n          tag: arguments.callee.name\n        });\n\n        if (null === ev) {\n          ev = new Click({\n            tag: arguments.callee.name\n          });\n          this.event(ev);\n        }\n\n        ev.listener(func, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button text color\n     * \n     * @param (mixed (color)) string: button text color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) style option\n     * @return (mixed) button text color\n     *                 null: not set yet\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(clr, opt) {\n      try {\n        return this.text().mainColor(clr, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button border color\n     * \n     * @param (mixed (color)) string: button border color, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) style option\n     * @return (mixed) button border color\n     *                 null; not set yet\n     * @type parameter\n     */\n\n  }, {\n    key: "accentColor",\n    value: function accentColor(clr, opt) {\n      try {\n        return cmputl.color(this, \'border-color\', clr, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * change disable mode\n     * change this button to grayout and it will be can not click.\n     *\n     * @type function\n     */\n\n  }, {\n    key: "disabled",\n    value: function disabled() {\n      try {\n        this.status(false);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * change enable mode\n     *\n     * @type function\n     */\n\n  }, {\n    key: "enabled",\n    value: function enabled() {\n      try {\n        this.status(true);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button status\n     *\n     * @param (boolean) change enable/disable mode\n     * @return (boolean) current status\n     * @type parameter\n     */\n\n  }, {\n    key: "status",\n    value: function status(sts) {\n      try {\n        if (undefined === sts) {\n          /* getter */\n          return \'disabled\' === this.childDom().attrs(\'disabled\') ? false : true;\n        }\n        /* setter */\n\n\n        if (\'boolean\' !== typeof sts) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.childDom().attrs({\n          \'disabled\': true === sts ? null : \'disabled\'\n        });\n        this.childDom().style({\n          \'cursor\': true === sts ? \'pointer\' : \'not-allowed\'\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-button/index.js?')},"./node_modules/mofron-comp-dialog/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-comp-dialog/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-dialog/index.js\n * @brief dialog component for mofron\n *        modal dialog, but hide when clicking outside the dialog\n * @author simpart\n */\nvar Modal = __webpack_require__(/*! mofron-comp-modalfil */ "./node_modules/mofron-comp-modalfil/index.js");\n\nvar Frame = __webpack_require__(/*! mofron-comp-ttlframe */ "./node_modules/mofron-comp-ttlframe/index.js");\n\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Button = __webpack_require__(/*! mofron-comp-button */ "./node_modules/mofron-comp-button/index.js");\n\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nvar ClkFcs = __webpack_require__(/*! mofron-event-clkfocus */ "./node_modules/mofron-event-clkfocus/index.js");\n\nvar vsClick = __webpack_require__(/*! mofron-event-visiclick */ "./node_modules/mofron-event-visiclick/index.js");\n\nvar HrzPos = __webpack_require__(/*! mofron-effect-hrzpos */ "./node_modules/mofron-effect-hrzpos/index.js");\n\nvar VrtPos = __webpack_require__(/*! mofron-effect-vrtpos */ "./node_modules/mofron-effect-vrtpos/index.js");\n\nvar SyncHei = __webpack_require__(/*! mofron-effect-synchei */ "./node_modules/mofron-effect-synchei/index.js");\n\nvar SyncWid = __webpack_require__(/*! mofron-effect-syncwid */ "./node_modules/mofron-effect-syncwid/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) title parameter\n   *                object: component option\n   * @short title\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Dialog\');\n\n      _this.shortForm(\'title\');\n\n      _this.confmng().add("buttonEvent", {\n        type: "event",\n        list: true\n      });\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        /* init inner comp */\n        this.frame(new Frame());\n        this.btnWrap(new mofron["class"].Component());\n        this.modalfil(new Modal());\n\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n        /* set close button */\n\n\n        this.closeComp(new Text({\n          style: new mofron["class"].ConfArg({\n            "font-family": "auto"\n          }, {\n            locked: true\n          }),\n          text: \'&times;\',\n          mainColor: [120, 120, 120]\n        }));\n        this.frame().header().child(this.closeComp());\n        /* set frame contents */\n\n        this.modalfil().child(this.frame());\n        var conts = new mofron["class"].Component({\n          effect: new SyncWid(this.frame())\n        });\n        this.frame().child([conts, this.btnWrap()]);\n        /* set modal */\n\n        this.child([this.modalfil()]);\n        /* update target dom */\n\n        this.childDom(conts.childDom());\n        this.styleDom(this.frame().childDom());\n        /* default size */\n\n        this.size(\'4rem\', \'3rem\');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set button event\n     * \n     * @type private\n     */\n\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "beforeRender", this).call(this);\n        /* set button event */\n\n\n        var btn = this.button();\n        var bevt = this.buttonEvent();\n\n        if (0 < bevt.length && 0 < btn.length) {\n          for (var bidx in btn) {\n            for (var eidx in bevt) {\n              btn[bidx].clickEvent(bevt[eidx][0], bevt[eidx][1]);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dialog title\n     * \n     * @param (mixed) string: title text\n     *                mofron-comp-text: title text component\n     * @return (mofron-comp-text) title text component\n     * @type parameter\n     */\n\n  }, {\n    key: "title",\n    value: function title(prm) {\n      try {\n        var ret = this.frame().text(prm);\n\n        if (undefined !== prm && null === this.frame().text().style("margin-left")) {\n          this.frame().text().style({\n            "margin-left": "0.2rem"\n          });\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button wrapper\n     * \n     * @param (component) replace button wrapper\n     * @return (component) buttom wrapper component\n     * @type private\n     */\n\n  }, {\n    key: "btnWrap",\n    value: function btnWrap(prm) {\n      try {\n        if (true === comutl.iscmp(prm)) {\n          prm.config({\n            style: {\n              "position": "absolute",\n              "display": "none"\n            },\n            effect: [new VrtPos(\'bottom\', \'0.3rem\'), new HrzPos(\'center\')]\n          });\n        }\n\n        return this.innerComp(\'btnWrap\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * buttom component\n     * \n     * @param (mixed) string: button text\n     *                mofron-comp-button: dialog button component\n     * @return (mofron-comp-button) dialog button component\n     * @type parameter\n     */\n\n  }, {\n    key: "button",\n    value: function button(prm, opt) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return this.btnWrap().child();\n        }\n        /* setter */\n\n\n        this.btnWrap().style({\n          "display": "flex"\n        });\n\n        if (true === Array.isArray(prm)) {\n          for (var bidx in prm) {\n            this.button(prm[bidx], opt);\n          }\n\n          return;\n        }\n\n        if (\'string\' === typeof prm) {\n          prm = new Button({\n            text: prm,\n            width: "1rem"\n          });\n        }\n\n        if (0 !== this.button().length) {\n          prm.style({\n            \'margin-left\': \'0.2rem\'\n          });\n        }\n\n        if (undefined !== opt) {\n          prm.config(opt);\n        }\n\n        this.btnWrap().child(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * button event\n     *\n     * @param (function) button event\n     * @param (mixed) event parameter\n     * @return (array) [[event,param], ...]\n     * @type parameter\n     */\n\n  }, {\n    key: "buttonEvent",\n    value: function buttonEvent(fnc, prm) {\n      try {\n        return this.confmng("buttonEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * close component in header\n     * \n     * @param (component) dialog close component\n     * @reutrn (component) dialog close component\n     * @type parameter\n     */\n\n  }, {\n    key: "closeComp",\n    value: function closeComp(prm) {\n      try {\n        if (true === comutl.iscmp(prm)) {\n          var vsclk = new vsClick(\'disable\', this);\n          prm.config({\n            event: new vsClick(\'disable\', this),\n            effect: [new SyncHei(this.frame().header()), new HrzPos(\'right\', \'0.1rem\')]\n          });\n        }\n\n        return this.innerComp(\'closeComp\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dialog frame\n     * \n     * @param (mofron-comp-frame) dialog frame component\n     * @return (mofron-comp-frame) dialog frame component\n     * @type parameter\n     */\n\n  }, {\n    key: "frame",\n    value: function frame(prm) {\n      try {\n        var ret = this.innerComp(\'frame\', prm);\n\n        if (undefined !== prm) {\n          var fcs = function fcs(fcs1, fcs2, fcs3) {\n            try {\n              if (false === fcs2) {\n                fcs3.visible(false);\n              }\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          };\n\n          prm.config({\n            style: {\n              "position": "relative",\n              "display": "none"\n            },\n            header: new mofron["class"].PullConf({\n              height: \'0.4rem\'\n            }),\n            mainColor: [230, 230, 230],\n            baseColor: \'white\',\n            event: new ClkFcs({\n              listener: new mofron["class"].ConfArg(fcs, this),\n              pointer: false,\n              tag: "Dialog",\n              suspend: true\n            }),\n            effect: [new HrzPos(\'center\'), new VrtPos(\'center\')]\n          });\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * modalfilter component\n     * \n     * @param (mofron-comp-modalfil) modal filter component\n     * @return (mofron-comp-modalfil) modal filter component\n     * @type private\n     */\n\n  }, {\n    key: "modalfil",\n    value: function modalfil(prm) {\n      try {\n        return this.innerComp(\'modalfil\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * frame header base color\n     * \n     * @param (mixed) string: color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return this.frame().header().baseColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * modal base color\n     * \n     * @param (mixed) string: color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @type parameter\n     */\n\n  }, {\n    key: "accentColor",\n    value: function accentColor(prm, opt) {\n      try {\n        return this.modalfil().baseColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set effect to frame component\n     * @type private\n     */\n\n  }, {\n    key: "effect",\n    value: function effect(prm) {\n      try {\n        return this.frame().effect(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dialog height\n     * \n     * @param (string (size)) dialog height\n     *                        undefined: call as getter\n     * @param (dict) set size option\n     * @return (string (size)) dialog height\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        return this.frame().height(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dialog header height\n     * \n     * @param (string(size)) header height\n     *                       undefined: call as getter\n     * @param (dict) set size option\n     * @return (string(size)) dialog header height\n     * @type parameter\n     */\n\n  }, {\n    key: "headerHeight",\n    value: function headerHeight(prm, opt) {\n      try {\n        return this.frame().header().height(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dialog width\n     * \n     * @param (string (size)) dialog width\n     *                        undefined: call as getter\n     * @return (string (size)) dialog height\n     * @type parameter\n     */\n\n  }, {\n    key: "width",\n    value: function width(prm, opt) {\n      try {\n        return this.frame().width(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * modal filter, dialog frame visible\n     * \n     * @type private\n     */\n\n  }, {\n    key: "visible",\n    value: function visible(flg, cb) {\n      try {\n        if (undefined === flg) {\n          /* getter */\n          return this.modalfil().visible();\n        }\n        /* setter */\n\n\n        var dlg = this;\n        var fcs = this.frame().event({\n          name: "ClkFocus",\n          tag: "Dialog"\n        });\n\n        if (true === flg) {\n          this.modalfil().visible(flg, function () {\n            dlg.frame().visible(flg, cb);\n            fcs.status(flg);\n          });\n        } else {\n          this.frame().visible(flg, function () {\n            dlg.modalfil().visible(flg, cb);\n            fcs.status(flg);\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-dialog/index.js?')},"./node_modules/mofron-comp-dropdown/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-comp-dropdown/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-dropdown/index.js\n * @brief  dropdown component for mofron\n * @license MIT\n */\nvar FormItem = __webpack_require__(/*! mofron-comp-formitem */ "./node_modules/mofron-comp-formitem/index.js");\n\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar onCommon = __webpack_require__(/*! mofron-event-oncommon */ "./node_modules/mofron-event-oncommon/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_FormItem) {\n  _inherits(_class, _FormItem);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize dropdown component\n   * \n   * @param (mixed) \'text\' parameter\n   *                key-value: component config\n   * @short text\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("DropDown");\n\n      _this.shortForm("text");\n      /* init config */\n\n\n      _this.confmng().add("select", {\n        type: "number",\n        init: 0\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        var sel = new mofron["class"].Dom("select", this);\n        this.childDom().child(sel);\n        this.childDom(sel);\n        /* init change event */\n\n        var cevt = function cevt(p1, p2, p3) {\n          try {\n            var chg_evt = p1.changeEvent();\n\n            for (var cidx in chg_evt) {\n              chg_evt[cidx].exec(p1, p1.select());\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        this.event(new onCommon(cevt, "onchange"));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set select index\n     *\n     * @type private \n     */\n\n  }, {\n    key: "afterRender",\n    value: function afterRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "afterRender", this).call(this);\n\n        this.select(null === this.select() ? 0 : this.confmng("select"));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * select text list setter/getter\n     *\n     * @param (mixed) string:  select text contents\n     *                array: select text contents list\n     *                undefined: call as getter\n     * @return (array) select text contents [string,..]\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          var ret = [];\n          var chd = this.childDom().child();\n\n          for (var cidx in chd) {\n            ret.push(chd[cidx].text);\n          }\n\n          return 0 === ret.length ? null : ret;\n        }\n        /* setter */\n\n\n        if (true === Array.isArray(prm)) {\n          for (var pidx in prm) {\n            this.text(prm[pidx]);\n          }\n\n          return;\n        } else if ("string" === typeof prm) {\n          this.childDom().child(new mofron["class"].Dom({\n            tag: "option",\n            component: this,\n            text: prm\n          }));\n        } else {\n          throw new Error("invalid parameter");\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * select index setter/getter\n     *\n     * @param (number) selected index\n     *                 undefined: call as getter\n     * @return (mixed) number: selected index\n     *                 null: not selected\n     * @type parameter\n     */\n\n  }, {\n    key: "select",\n    value: function select(prm) {\n      try {\n        var opts = this.childDom().child();\n\n        if (undefined === prm) {\n          /* getter */\n          if (false === this.isExists()) {\n            return this.confmng("select");\n          } else {\n            for (var oidx in opts) {\n              if (true === opts[oidx].props("selected")) {\n                return parseInt(oidx);\n              }\n            }\n          }\n\n          return null;\n        }\n        /* setter */\n\n\n        if (false === this.isExists()) {\n          this.confmng("select", prm);\n        } else {\n          if (undefined === opts[prm]) {\n            throw new Error("invalid parameter");\n          }\n\n          opts[prm].props({\n            "selected": true\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * item value\n     *\n     * @param (number) the same as select parameter\n     * @return (mixed) the same as select parameter\n     * @type parameter\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.select(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * clear item value\n     *\n     * @type function\n     */\n\n  }, {\n    key: "clear",\n    value: function clear() {\n      try {\n        this.select(0);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(FormItem);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-dropdown/index.js?')},"./node_modules/mofron-comp-formitem/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-comp-formitem/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-formitem/index.js\n * @brief  base component for form item.\n *         this component has some function for form item.\n *         extending this class makes it easier to develop form item components.\n * @attention it needs to overwrite at extending class since some functions is an interface.\n * @license MIT\n */\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar onCommon = __webpack_require__(/*! mofron-event-oncommon */ "./node_modules/mofron-event-oncommon/index.js");\n\nvar comutl = mofron.util.common;\nvar ConfArg = mofron["class"].ConfArg;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: component config\n   * @short label\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'FormItem\');\n\n      _this.shortForm(\'label\');\n      /* init config */\n\n\n      _this.confmng().add(\'required\', {\n        type: \'boolean\',\n        init: false\n      });\n\n      _this.confmng().add("focusEvent", {\n        type: \'event\',\n        list: true\n      });\n\n      _this.confmng().add(\'changeEvent\', {\n        type: \'event\',\n        list: true\n      });\n\n      _this.confmng().add(\'sendKey\', {\n        type: \'string\'\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n        /* label */\n\n\n        this.child(this.label());\n        /* set focus event */\n\n        var itm = this;\n        this.event([new onCommon(function () {\n          var evt = itm.focusEvent();\n\n          for (var eidx in evt) {\n            evt[eidx].exec(itm, true);\n          }\n        }, "onfocus"), new onCommon(function () {\n          var evt = itm.focusEvent();\n\n          for (var eidx in evt) {\n            evt[eidx].exec(itm, false);\n          }\n        }, "onblur")]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set focus status\n     *\n     * @type private\n     */\n\n  }, {\n    key: "afterRender",\n    value: function afterRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "afterRender", this).call(this);\n\n        this.focus(this.focus());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * form item label setter/getter\n     *\n     * @param (mixed) string: label text\n     *                mofron-comp-text: text component for label\n     *                undefined: call as getter\n     * @return (mofron-comp-text) text component for label\n     * @type parameter\n     */\n\n  }, {\n    key: "label",\n    value: function label(prm) {\n      try {\n        if (true === comutl.isinc(prm, \'Text\')) {\n          prm.config({\n            text: \'\',\n            visible: false\n          });\n        } else if (\'string\' === typeof prm) {\n          this.label().config({\n            text: prm,\n            style: {\n              \'display\': null\n            }\n          });\n          return;\n        }\n\n        return this.innerComp(\'label\', prm, Text);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * horizontal config setter/getter\n     * \n     * @param (boolean) true: horizontal placing (form item is placed next to a label)\n     *                  false: normal placing (form item is placed under a label)\n     *                  undefined: call as getter\n     * @return (boolean) placing config\n     * @type parameter\n     */\n\n  }, {\n    key: "horizon",\n    value: function horizon(prm) {\n      try {\n        if (undefined === prm) {\n          return \'flex\' === this.rootDom()[0].style(\'display\') ? true : false;\n        }\n        /* setter */\n\n\n        this.rootDom()[0].style({\n          \'display\': true === prm ? \'flex\' : null\n        }, true);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * config for required flag setter/getter\n     * it become required item in form if this flag is true\n     * \n     * @param (boolean) true: required item (An error is detected if data is sent when empty this item data)\n     *                  false: not required item\n     *                  undefined: call as getter\n     * @return (boolean) required flag\n     * @type parameter\n     */\n\n  }, {\n    key: "required",\n    value: function required(flg) {\n      try {\n        return this.confmng(\'required\', flg);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * item value\n     * interface for getter/setter of formitem\n     * \n     * @param (mixed) item value\n     * @return (mixed) item value\n     * @type private\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      console.warn(\'not implements\');\n    }\n    /**\n     * check item value about valid or invalid\n     * \n     * @return (mixed) string: error reason\n     *                 null: no error\n     * @type private\n     */\n\n  }, {\n    key: "checkValue",\n    value: function checkValue() {\n      try {\n        if (true === this.required()) {\n          if (null === this.value()) {\n            return \'\' === this.label().text() ? \'empty value\' : this.label().text() + \' is required\';\n          }\n        }\n\n        return null;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * focus status setter/getter\n     * \n     * @param (boolean) true: focus this item\n     *                  false: defocus this item\n     *                  undefined: call as getter\n     * @return (boolean) focus status\n     * @type parameter\n     */\n\n  }, {\n    key: "focus",\n    value: function focus(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return document.activeElement === this.childDom().id() ? true : false;\n        }\n        /* setter */\n\n\n        if (true === this.isExists()) {\n          if (true === prm) {\n            this.childDom().getRawDom().focus();\n          } else {\n            this.childDom().getRawDom().blur();\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * focus event function setter/getter\n     * \n     * @param (function) event function\n     *                   undefined: call as getter\n     * @param (mixed) function parameter\n     * @return (array) event list\n     * @type parameter\n     */\n\n  }, {\n    key: "focusEvent",\n    value: function focusEvent(fnc, prm) {\n      try {\n        return this.confmng("focusEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * change event function setter/getter\n     *\n     * @param (function) change event\n     *                   undefined: call as getter\n     * @param (mix) event parameter\n     * @return (array) event list\n     * @type private\n     */\n\n  }, {\n    key: "changeEvent",\n    value: function changeEvent(fnc, prm) {\n      try {\n        return this.confmng(\'changeEvent\', fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * item status setter/getter\n     * \n     * @param (boolean) true: change enable mode [default]\n     *                  false: change disable mode\n     *                  undefined: call as getter\n     * @return (boolean) current item status\n     * @type parameter\n     */\n\n  }, {\n    key: "status",\n    value: function status(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return \'disabled\' === this.childDom().attrs(\'disabled\') ? true : false;\n        }\n        /* setter */\n\n\n        this.childDom().attrs({\n          \'disabled\': true === prm ? \'disabled\' : null\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * enable form item\n     * \n     * @type function\n     */\n\n  }, {\n    key: "enabled",\n    value: function enabled() {\n      try {\n        return this.status(true);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * disable form item\n     *\n     * @type function\n     */\n\n  }, {\n    key: "disabled",\n    value: function disabled() {\n      try {\n        return this.status(false);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * a key of POST data setter/getter\n     * \n     * @param (string) send key\n     *                 undefined: call as getter\n     * @return (string) send key\n     * @type parameter\n     */\n\n  }, {\n    key: "sendKey",\n    value: function sendKey(prm) {\n      try {\n        return this.confmng(\'sendKey\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * clear item value\n     *\n     * @type private\n     */\n\n  }, {\n    key: "clear",\n    value: function clear() {\n      console.warn(\'not implements\');\n    }\n    /**\n     * item height setter/getter\n     * \n     * @param (string (size)) item height (if horizon function is false and visible function is true, height will be bisected.)\n     *                        undefined: call as getter\n     * @param (key-value) style option\n     * @return (mixed) string(size): item height\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          if (false === this.horizon() && (true === this.label().visible() || false === this.childDom().isPushed() && "none" !== this.label().style("display"))) {\n            return comutl.sizesum(this.label().height(), _get(_getPrototypeOf(_class.prototype), "height", this).call(this));\n          }\n\n          return _get(_getPrototypeOf(_class.prototype), "height", this).call(this);\n        }\n        /* setter */\n\n\n        var set_siz = comutl.getsize(prm);\n\n        if (null == set_siz) {\n          return;\n        }\n\n        if (false === this.horizon() && true === this.label().visible()) {\n          _get(_getPrototypeOf(_class.prototype), "height", this).call(this, comutl.roundup(set_siz.value() / 2) + set_siz.type(), opt);\n        } else {\n          _get(_getPrototypeOf(_class.prototype), "height", this).call(this, set_siz, opt);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-formitem/index.js?')},"./node_modules/mofron-comp-frame/index.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron-comp-frame/index.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-frame/index.js\n * @brief  frame component for mofron\n * @feature default size is 1rem × 1rem\n *          frame size is includes border size\n * @license MIT\n */\nvar Radius = __webpack_require__(/*! mofron-effect-radius */ "./node_modules/mofron-effect-radius/index.js");\n\nvar Shadow = __webpack_require__(/*! mofron-effect-shadow */ "./node_modules/mofron-effect-shadow/index.js");\n\nvar Border = __webpack_require__(/*! mofron-effect-border */ "./node_modules/mofron-effect-border/index.js");\n\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize frame component\n   * \n   * @param (mixed) width parameter\n   *                key-value: component option\n   * @param (string (size)) height parameter\n   * @short width,height\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Frame");\n\n      _this.shortForm("width", "height");\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n        /* configure border style */\n\n\n        this.effect([new Border({\n          color: [190, 190, 190],\n          tag: "Frame"\n        }), new Radius("0rem"), new Shadow("0rem")]);\n        this.childDom().style().listener("border-width", function (p1, p2, p3) {\n          try {\n            var o_bdr = comutl.sizesum(p2["border-width"], p2["border-width"]);\n            p3.size(comutl.sizesum(cmputl.size(p3, "width"), o_bdr), comutl.sizesum(cmputl.size(p3, "height"), o_bdr));\n          } catch (e) {}\n        }, this);\n        this.size("1rem", "1rem");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * background color\n     * \n     * @param (mixed (color)) string: background color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) style option\n     * @return (string) background color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return cmputl.color(this, "background", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border color\n     * \n     * @param (mixed (color)) string: border color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @return (mixed (color)) border color\n     * @type parameter\n     */\n\n  }, {\n    key: "accentColor",\n    value: function accentColor(prm, opt) {\n      try {\n        this.effect({\n          name: "Shadow"\n        }).color(prm);\n        return this.effect({\n          name: "Border"\n        }).color(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * radius effect\n     *\n     * @param (string (size)) radius effect value\n     * @return (string (size)) radius effect value\n     * @type parameter\n     */\n\n  }, {\n    key: "radius",\n    value: function radius(prm) {\n      try {\n        return this.effect({\n          name: "Radius"\n        }).value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * shadow effect\n     *\n     * @param (string (size)) shadow value\n     * @return (string (size)) shadow value\n     * @type parameter\n     */\n\n  }, {\n    key: "shadow",\n    value: function shadow(prm) {\n      try {\n        return this.effect({\n          name: "Shadow"\n        }).value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border width setter\n     * \n     * @param (string(size)) top border width\n     * @param (string(size)) right border width\n     * @param (string(size)) bottom border width\n     * @param (string(size)) left border width\n     * @type parameter\n     */\n\n  }, {\n    key: "borderWidth",\n    value: function borderWidth(top, right, bottom, left) {\n      try {\n        this.style({\n          "border-width": null\n        }, {\n          lock: true\n        });\n        this.style({\n          "border-top-width": top,\n          "border-right-width": right,\n          "border-bottom-width": bottom,\n          "border-left-width": left\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * frame width\n     * \n     * @param (string (size)) frame width\n     * @param (key-value) style option\n     * @return (string (size)) frame width\n     * @type parameter\n     */\n\n  }, {\n    key: "width",\n    value: function width(prm, opt) {\n      try {\n        return this.frmsiz("width", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * frame height\n     * \n     * @param (string (size)) frame height\n     * @param (key-value) style option\n     * @return (string (size)) frame height\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        return this.frmsiz("height", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set frame size\n     * \n     * @param (string) size target (width,height)\n     * @type private\n     */\n\n  }, {\n    key: "frmsiz",\n    value: function frmsiz(tgt, val, opt) {\n      try {\n        if ("width" !== tgt && "height" !== tgt) {\n          throw new Error("invalid parameter");\n        }\n\n        var bdr_siz = this.effect({\n          name: "Border",\n          tag: "Frame"\n        }).width();\n        bdr_siz = comutl.sizesum(bdr_siz, bdr_siz);\n\n        if (undefined === val) {\n          /* getter */\n          return comutl.sizesum(_get(_getPrototypeOf(_class.prototype), tgt, this).call(this), bdr_siz);\n        }\n        /* setter */\n\n\n        _get(_getPrototypeOf(_class.prototype), tgt, this).call(this, comutl.sizesum(val, null === bdr_siz ? null : "-" + bdr_siz));\n      } catch (e) {\n        return _get(_getPrototypeOf(_class.prototype), tgt, this).call(this, val);\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-frame/index.js?')},"./node_modules/mofron-comp-header/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-comp-header/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-header/index.js\n * @brief  header component for mofron\n *         This component for placing at the top of the page etc. and displaying the site title etc.\n * @feature A header\'s child components are placed horizontally since header has a horizon layout.\n * @attention it maybe needs a \'false\' config at bind parameter that used as a child component.\n * @license MIT\n */\nvar Horizon = __webpack_require__(/*! mofron-layout-horizon */ "./node_modules/mofron-layout-horizon/index.js");\n\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * constructor\n   * \n   * @param (mixed) child parameter\n   *                key-value: component config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n      /* init config */\n\n      _this.name("Header");\n\n      _this.confmng().add("wrap", {\n        type: "Dom"\n      });\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        var wrap = new mofron["class"].Component();\n        this.child(wrap);\n        this.childDom(wrap.childDom());\n        this.layout(new Horizon());\n        /* border config */\n\n        this.style({\n          "border-bottom-style": "solid",\n          "border-bottom-width": "0.01rem"\n        });\n        this.size("100%", "0.5rem");\n        this.bind(true);\n        this.mainColor([211, 211, 211]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * header height\n     * \n     * @param (string (size)) header height (default is "0.5rem")\n     * @param (option) style option\n     * @return (string (size)) header height\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(val, opt) {\n      try {\n        if (undefined === val) {\n          return this.rootDom()[0].style("height");\n        }\n\n        this.rootDom()[0].style({\n          height: val\n        }, opt);\n        this.getTree().getChild()[0].height(val, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * binding header \n     * \n     * @param (boolean) true: header position is fixed. display header even if user scrolls. (default)\n     *                  false: header position is not fixed.\n     * @return (boolean) binding config\n     * @type parameter\n     */\n\n  }, {\n    key: "bind",\n    value: function bind(flg) {\n      try {\n        if (undefined === flg) {\n          /* getter */\n          return \'fixed\' === this.style(\'position\') ? true : false;\n        }\n        /* setter */\n\n\n        if (\'boolean\' !== typeof flg) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        if (true === flg) {\n          this.style({\n            \'position\': \'fixed\',\n            \'z-index\': 999\n          });\n        } else {\n          this.style({\n            position: null\n          }, \'fixed\' === this.style(\'position\') ? false : true);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border bottom color\n     *\n     * @param (mixed (color)) string: border bottom color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) stye option\n     * @return (string) border bottom color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return cmputl.color(this, "border-bottom-color", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-header/index.js?')},"./node_modules/mofron-comp-image/index.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron-comp-image/index.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-image/index.js\n * @brief image component for mofron\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize image component\n   *\n   * @param (mixed) path parameter\n   *                key-value: component option\n   * @short path\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Image");\n\n      _this.shortForm("path");\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   *\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this, \'img\');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * image path\n     *\n     * @param (string) path to image\n     * @return (string) path to image\n     * @type parameter\n     */\n\n  }, {\n    key: "path",\n    value: function path(prm) {\n      try {\n        return this.value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * base64 image value\n     *\n     * @param (number) base64 image value\n     * @return (number) base64 image value\n     * @type parameter\n     */\n\n  }, {\n    key: "base64",\n    value: function base64(prm) {\n      try {\n        return this.value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * src value of dom attribute\n     * \n     * @param (string) path to image file\n     * @return (string) path to image file\n     * @type parameter\n     */\n\n  }, {\n    key: "src",\n    value: function src(prm) {\n      try {\n        return this.value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * src value of dom attribute\n     * \n     * @param (mixed) string: path to image\n     *                number: base64 value\n     * @return (mixed) src value of dom attribute\n     * @type private\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return this.target().attr(\'src\');\n        }\n        /* setter */\n\n\n        if (\'string\' !== typeof prm && \'number\' !== typeof prm) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.childDom().attrs({\n          src: prm\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-image/index.js?')},"./node_modules/mofron-comp-menu/index.js":
/*!************************************************!*\
  !*** ./node_modules/mofron-comp-menu/index.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-menu/index.js\n * @brief menu component for mofron \n * @feature configure the displayed contents when users click the menu by "contents" parameter\n *          "horizon" parameter is config that is horizontal menu item or vertical menu item\n * @license MIT\n */\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nvar Relat = __webpack_require__(/*! mofron-layout-relative */ "./node_modules/mofron-layout-relative/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize menu component\n   *\n   * @param (mixed) item parameter\n   *                object: component option\n   * @short item\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Menu");\n\n      _this.shortForm("item");\n      /* init config */\n\n\n      _this.confmng().add("item", {\n        type: "Component",\n        list: true\n      });\n\n      _this.confmng().add("reselect", {\n        type: "boolean",\n        init: false\n      });\n\n      _this.confmng().add("select", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("selectEvent", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("mainColor", {\n        type: "color"\n      });\n\n      _this.confmng().add("baseColor", {\n        type: "color"\n      });\n\n      _this.confmng().add("accentColor", {\n        type: "color"\n      });\n\n      _this.confmng().add("mainColor_opt", {\n        type: "object"\n      });\n\n      _this.confmng().add("baseColor_opt", {\n        type: "object"\n      });\n\n      _this.confmng().add("accentColor_opt", {\n        type: "object"\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   *\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.layout(new Relat({\n          value: "0px",\n          tag: "Menu"\n        }));\n        /* set select event */\n\n        var sel_evt = function sel_evt(s1, s2, s3) {\n          try {\n            var itm = s1.item();\n\n            for (var iidx in itm) {\n              if (false === comutl.isinc(itm[iidx], "MenuItem")) {\n                continue;\n              }\n\n              itm[iidx].select(iidx == s2 ? true : false);\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        this.selectEvent(sel_evt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * init size\n     *\n     * @type private\n     */\n\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "beforeRender", this).call(this);\n        /* set color */\n\n\n        var itm = this.item();\n\n        for (var iidx in itm) {\n          if (null !== this.mainColor()) {\n            itm[iidx].mainColor(this.mainColor(), null === this.confmng("mainColor_opt") ? undefined : this.confmng("mainColor_opt"));\n          }\n\n          if (null !== this.baseColor()) {\n            itm[iidx].baseColor(this.baseColor(), null === this.confmng("baseColor_opt") ? undefined : this.confmng("baseColor_opt"));\n          }\n\n          if (null !== this.accentColor()) {\n            itm[iidx].accentColor(this.accentColor(), null === this.confmng("accentColor_opt") ? undefined : this.confmng("accentColor_opt"));\n          }\n        }\n        /* init size */\n\n\n        this.initSize("width", true);\n        this.initSize("height", false);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * initialize size\n     * \n     * @param (string) size type ("width"/"height")\n     * @param (boolean) horizon type\n     * @type private\n     */\n\n  }, {\n    key: "initSize",\n    value: function initSize(prm, hrz) {\n      try {\n        var siz = comutl.getsize(this[prm]());\n        var itm = this.item();\n\n        if (0 === itm.length) {\n          console.warn("there is no items");\n          return;\n        }\n\n        if (null !== siz) {\n          if (hrz === this.horizon() && 0 !== itm.length) {\n            siz.value(siz.value() / itm.length);\n          }\n\n          for (var sidx in itm) {\n            itm[sidx][prm](siz.toString());\n          }\n        } else {\n          /* size config is null, set value from items */\n          if (hrz === this.horizon() && 0 !== itm.length) {\n            var set_siz = null;\n\n            for (var _sidx in itm) {\n              set_siz = comutl.sizesum(set_siz, itm[_sidx][prm]());\n            }\n          } else {\n            this[prm](itm[0][prm]());\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * selected initialize menu item\n     * add contents switch\n     *\n     * @type private\n     */\n\n  }, {\n    key: "afterRender",\n    value: function afterRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "afterRender", this).call(this);\n        /* defalut selected */\n\n\n        if (undefined !== this.item()[this.select()]) {\n          this.item()[this.select()].eventDom().getRawDom().click();\n          var evt = this.selectEvent();\n\n          for (var eidx in evt) {\n            evt[eidx][0](this, this.select(), evt[eidx][1]);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set/unset horizontal mode\n     * menu item is added in the horizontal direction if p1 setted true\n     *\n     * @param (boolean) set/unset horizontal mode\n     * @return (boolean) horizontal mode status\n     * @type parameter\n     */\n\n  }, {\n    key: "horizon",\n    value: function horizon(flg) {\n      try {\n        if (undefined === flg) {\n          /* getter */\n          return \'flex\' === this.style(\'display\') ? true : false;\n        }\n        /* setter */\n\n\n        this.style({\n          \'display\': true === flg ? \'flex\' : null\n        });\n        var relat = this.layout({\n          name: "Relative",\n          tag: "Menu"\n        });\n\n        if (null === relat) {\n          return;\n        }\n\n        relat.type(true === flg ? "left" : "top");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * select menu item\n     *\n     * @param (number) select menu item index\n     * @return (number) selected menu item index\n     * @type parameter\n     */\n\n  }, {\n    key: "select",\n    value: function select(idx) {\n      try {\n        if (undefined === idx) {\n          /* getter */\n          return this.confmng("select");\n        }\n        /* setter */\n\n\n        if (true === this.reselect() || idx !== this.select()) {\n          this.confmng("select", idx);\n          var evt = this.selectEvent();\n\n          for (var eidx in evt) {\n            evt[eidx][0](this, idx, evt[eidx][1]);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * reselect flag setter/getter\n     * \n     * @param (boolean) true: call event when items are duplicates selected\n     *                  false: ignored when items are duplicates selected [default]\n     * @return (boolean) reselect flag\n     * @type parameter\n     */\n\n  }, {\n    key: "reselect",\n    value: function reselect(prm) {\n      try {\n        return this.confmng("reselect", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * select event\n     *\n     * @param (function) select event function\n     * @param (mixed) select event parameter\n     * @return (array) select event [[function, parameter], ...]\n     * @type parameter\n     */\n\n  }, {\n    key: "selectEvent",\n    value: function selectEvent(fnc, prm) {\n      try {\n        return this.confmng("selectEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * menu item\n     *\n     * @param (mixed) component: menu items component\n     *                array: menu items list\n     * @return (array) menu items list\n     * @type parameter\n     */\n\n  }, {\n    key: "item",\n    value: function item(prm, opt) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return this.confmng("item", prm);\n        }\n        /* setter */\n\n\n        if (true === Array.isArray(prm)) {\n          for (var pidx in prm) {\n            this.item(prm[pidx], opt);\n          }\n\n          return;\n        }\n\n        var menu = this;\n\n        var clk = function clk(cp1, cp2, cp3) {\n          try {\n            var itm = menu.item();\n\n            for (var iidx in itm) {\n              if (cp1.id() === itm[iidx].id()) {\n                menu.select(parseInt(iidx));\n              }\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        prm.config({\n          event: new Click(clk)\n        });\n\n        if (undefined !== opt) {\n          prm.config(opt);\n        }\n\n        this.child(prm);\n        this.confmng("item", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * offset position of menu item\n     * \n     * @param (string(size)) offset value\n     * @return (string(size)) offset value\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        var relat = this.layout({\n          name: "Relative",\n          tag: "Menu"\n        });\n        return null !== relat ? relat.value(prm) : null;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * main color of items\n     *\n     * @param (mixed) string: menu item color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @return (string) menu item main color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        this.confmng("mainColor_opt", opt);\n        return this.confmng("mainColor", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * base color of items\n     *\n     * @param (mixed) string: color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @return (string) menu item base color\n     * @type parameter\n     */\n\n  }, {\n    key: "baseColor",\n    value: function baseColor(prm, opt) {\n      try {\n        this.confmng("baseColor_opt", opt);\n        return this.confmng("baseColor", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * accent color of items\n     *\n     * @param (mixed) string: color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @return (string) menu item accent color\n     * @type parameter\n     */\n\n  }, {\n    key: "accentColor",\n    value: function accentColor(prm, opt) {\n      try {\n        this.confmng("accentColor_opt", opt);\n        return this.confmng("accentColor", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-menu/index.js?')},"./node_modules/mofron-comp-modalfil/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-comp-modalfil/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-modalfil/index.js\n * @brief modal filter component for mofron\n *        apply a dim filter to the entire screen as when displaying a modal window\n * @feature modal windows can be easily implemented by adding child components to this component\n *          it is possible to make the back look like frosted glass (blur)\n * @attention default visible is false\n *            this component must be positioned to root for enabling the "blur" function\n *            other components that are the same hierarchy from this component are added [mofron-effect-blur](https://github.com/mofron/mofron-effect-blur.git).\n * @license MIT\n */\nvar Blur = __webpack_require__(/*! mofron-effect-blur */ "./node_modules/mofron-effect-blur/index.js");\n\nvar SyncWin = __webpack_require__(/*! mofron-effect-syncwin */ "./node_modules/mofron-effect-syncwin/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   *\n   * @param (mixed) blur prameter\n   *                key-value: component config\n   * @short blur\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("ModalFil");\n\n      _this.shortForm("blur");\n      /* init config */\n\n\n      _this.confmng().add("blur", {\n        type: "size",\n        init: "0rem"\n      });\n\n      _this.confmng().add("speed", {\n        type: "number",\n        init: 0\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.effect(new SyncWin());\n        this.style({\n          \'position\': \'fixed\',\n          \'z-index\': \'9999\',\n          \'top\': \'0rem\',\n          \'left\': \'0rem\',\n          \'display\': \'none\'\n        });\n        /* set default color */\n\n        this.baseColor([240, 240, 240, 0.5]);\n        this.styleDom().style().listener(\'display\', this.switchBlur, this);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set blur effect\n     * \n     * @type private\n     */\n\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "beforeRender", this).call(this);\n\n        if (null === this.parent() || "0rem" === this.blur()) {\n          return;\n        }\n\n        var pchd = this.parent().child();\n\n        for (var pc in pchd) {\n          if (this.id() !== pchd[pc].id()) {\n            pchd[pc].effect([new Blur({\n              value: this.blur(),\n              tag: "ModalFil",\n              speed: this.speed(),\n              eid: -1\n            }), new Blur({\n              value: "0rem",\n              tag: "ModalFil",\n              speed: this.speed(),\n              eid: -1\n            })]);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set backgrond color\n     *\n     * @param (mixed (color)) string: background color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) style option\n     * @return (string) backgrond color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return this.baseColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set backgrond color\n     *\n     * @param (mixed (color)) string: background color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (key-value) style option\n     * @return (string) backgrond color\n     * @type parameter\n     */\n\n  }, {\n    key: "baseColor",\n    value: function baseColor(prm, opt) {\n      try {\n        var p_prm = undefined;\n\n        if (undefined !== prm) {\n          p_prm = comutl.getcolor(prm);\n          var rgba = p_prm.rgba();\n\n          if (1 === rgba[3] && (false === Array.isArray(prm) || undefined === prm[3])) {\n            p_prm.rgba(rgba[0], rgba[1], rgba[2], 0.5);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), "baseColor", this).call(this, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * blur value\n     *\n     * @param (string (size)) blur value\n     * @param (number) blur speed (ms)\n     * @return (string) blur value\n     * @type parameter\n     */\n\n  }, {\n    key: "blur",\n    value: function blur(val, spd) {\n      try {\n        if (undefined !== spd) {\n          this.speed(spd);\n        }\n\n        return this.confmng("blur", val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * blur speed\n     * \n     * @param (number) blur speed (ms)\n     * @return (number) blur speed (ms)\n     * @type parameter\n     */\n\n  }, {\n    key: "speed",\n    value: function speed(prm) {\n      try {\n        return this.confmng("speed", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * switch blur effect\n     * \n     * @param (mixed) after style value (string/null)\n     * @param (mixed) before style value (string/null)\n     * @type private\n     */\n\n  }, {\n    key: "switchBlur",\n    value: function switchBlur(af, bf, cmp) {\n      try {\n        var pchd = cmp.parent().child();\n\n        for (var pc in pchd) {\n          if (cmp.id() !== pchd[pc].id()) {\n            var opt = {\n              name: "Blur",\n              tag: "ModalFil",\n              value: "none" === af ? "0rem" : cmp.blur()\n            };\n            var eff = pchd[pc].effect(opt);\n\n            if (true === comutl.isinc(eff, "Blur")) {\n              eff.execute();\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-modalfil/index.js?')},"./node_modules/mofron-comp-slidemenu/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-comp-slidemenu/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-slidemenu/index.js\n * @brief slidemenu component for mofron\n * @license MIT\n */\nvar Menu = __webpack_require__(/*! mofron-comp-menu */ "./node_modules/mofron-comp-menu/index.js");\n\nvar Border = __webpack_require__(/*! mofron-effect-border */ "./node_modules/mofron-effect-border/index.js");\n\nvar Focus = __webpack_require__(/*! mofron-event-clkfocus */ "./node_modules/mofron-event-clkfocus/index.js");\n\nvar Position = __webpack_require__(/*! mofron-effect-position */ "./node_modules/mofron-effect-position/index.js");\n\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_Menu) {\n  _inherits(_class, _Menu);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) item parameter\n   *                dict: component config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("SlideMenu");\n      /* init config */\n\n\n      _this.confmng().add("position", {\n        type: "string",\n        select: ["left", "right"],\n        init: "left"\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   *\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n        /* focus event */\n\n\n        var fcs = function fcs(f1, f2) {\n          try {\n            f1.visible(false);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n        /* set default config */\n\n\n        this.config({\n          style: {\n            "position": "fixed",\n            "top": "0rem",\n            "z-index": "999"\n          },\n          event: new Focus({\n            tag: "SlideMenu",\n            listener: fcs,\n            pointer: false\n          }),\n          effect: [new Border(), new Position({\n            tag: "SlideMenu",\n            value: "0rem",\n            eid: 0\n          }), new Position({\n            tag: "SlideMenu",\n            eid: 1\n          })],\n          visible: false\n        });\n        /* display event */\n\n        var disp = function disp(d1, d2, d3) {\n          if ("none" !== d2[0]) {\n            setTimeout(function () {\n              d3.event({\n                name: "ClkFocus",\n                tag: "SlideMenu"\n              }).status(true);\n            }, 50);\n          } else {\n            setTimeout(function () {\n              d3.event({\n                name: "ClkFocus",\n                tag: "SlideMenu"\n              }).status(false);\n            }, 50);\n          }\n        };\n\n        this.styleDom().style().listener("display", disp, this);\n        /* add select event */\n\n        var sel = function sel(s1, s2) {\n          try {\n            s1.visible(false);\n            setTimeout(function () {\n              s1.event({\n                name: "ClkFocus",\n                tag: "SlideMenu"\n              }).status(false);\n            }, 50);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        this.selectEvent(sel);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * init menu position\n     * \n     * @type private\n     */\n\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "beforeRender", this).call(this);\n        /* set initial position */\n\n\n        var pcnf = this.confmng("position");\n\n        if ("left" === pcnf) {\n          this.style({\n            "left": "-" + this.width()\n          });\n        } else {\n          this.style({\n            "right": "-" + this.width()\n          });\n        }\n        /* set position value */\n\n\n        this.effect({\n          name: "Position",\n          tag: "SlideMenu",\n          eid: 1\n        }).value("-" + this.width());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set height\n     * \n     * @type private\n     */\n\n  }, {\n    key: "afterRender",\n    value: function afterRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "afterRender", this).call(this);\n\n        cmputl.size(this, "height", "100%");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * menu position setter/getter\n     * \n     * @param (string) left: slides from the left side [default]\n     *                 right: slides from the right side\n     * @return (string) menu position\n     * @type parameter\n     */\n\n  }, {\n    key: "position",\n    value: function position(prm) {\n      try {\n        var ret = this.confmng("position", prm);\n\n        if (undefined !== prm) {\n          this.effect({\n            name: "Position",\n            tag: "SlideMenu",\n            eid: 0\n          }).direction(prm);\n          this.effect({\n            name: "Position",\n            tag: "SlideMenu",\n            eid: 1\n          }).direction(prm);\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * menu panel setter/getter\n     * \n     * @param (mixed(color)) string: background color name, #hex\n     *                       array: [red, green, blue, (alpha)]\n     * @param (dict) style option\n     * @type parameter\n     */\n\n  }, {\n    key: "baseColor",\n    value: function baseColor(prm, opt) {\n      try {\n        return cmputl.color(this, "background", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Menu);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-slidemenu/index.js?')},"./node_modules/mofron-comp-text/index.js":
/*!************************************************!*\
  !*** ./node_modules/mofron-comp-text/index.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   mofron-comp-text/index.js\n * @brief  text component for mofron\n * @license MIT\n */\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nvar Font = __webpack_require__(/*! mofron-effect-font */ "./node_modules/mofron-effect-font/index.js");\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * constructor\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: component config\n   * @short text\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Text\');\n\n      _this.shortForm(\'text\');\n      /* init config */\n\n\n      _this.confmng().add("heiWeight", {\n        init: 1.5,\n        type: "number"\n      });\n\n      _this.confmng().add("weight", {\n        type: "number",\n        select: [100, 200, 300, 400, 500, 600, 700, 800, 900]\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.effect(new Font({\n          tag: "Text",\n          suspend: true\n        }));\n        this.text(\'\'); // default text\n\n        this.size("0.16rem"); // default size\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text setter/getter\n     * \n     * @param (mixed) string: text value\n     *                undefined: call as getter\n     * @return (string) text value\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(val) {\n      try {\n        return this.childDom().text(val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text getter\n     * \n     * @return (string) text value\n     * @type function\n     */\n\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        return this.text();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text size setter/getter\n     *\n     * @param (mixed) string (size): text size\n     *                undefined: call as getter\n     * @param (key-value) style option [not required]\n     * @return (mixed) string: text size (default is "0.16rem")\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "size",\n    value: function size(val, opt) {\n      try {\n        return cmputl.size(this, "font-size", val, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text height setter/getter\n     * \n     * @param (mixed) string (size): text size\n     *                undefined: call as getter\n     * @param (key-value) style option [not required]\n     * @return (mixed) string: text height (default is "0.24rem")\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        var siz = comutl.getsize(undefined === prm ? this.size() : prm);\n        var siz_buf = null;\n\n        if (\'rem\' === siz.type() || \'px\' === siz.type()) {\n          if (undefined === prm) {\n            siz_buf = siz.value() * this.heiWeight();\n          } else {\n            siz_buf = siz.value() / this.heiWeight();\n          }\n\n          siz_buf = comutl.roundup(siz_buf) + siz.type();\n        } else {\n          siz_buf = siz.toString();\n        }\n\n        if (undefined === prm) {\n          /* gettter */\n          return siz_buf;\n        }\n\n        this.size(siz_buf, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * height weight setter/getter\n     * this value to make \'height\' parameter and real dom size the same\n     * it needs to adjust depending on font difference.\n     * \n     * @param (mixed) number: height weight rate\n     *                undefined: call as getter\n     * @return (number) height weight rate\n     * @type private\n     */\n\n  }, {\n    key: "heiWeight",\n    value: function heiWeight(prm) {\n      try {\n        return this.confmng("heiWeight", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text color setter/getter\n     * \n     * @param (mixed (color)) string: color name, #hex\n     *                array: [red, green, blue, (alpha)]\n     * @param (key-value) style option [not required]\n     * @return (mixed) string: text color\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(val, opt) {\n      try {\n        return cmputl.color(this, \'color\', val, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text font setter/getter\n     * \n     * @param (mixed) string: font name\n     *                undefined: call as getter\n     * @param (string) path to font file [not required]\n     * @return (mixed) array: font name\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "font",\n    value: function font(fnm, pth) {\n      try {\n        var font = this.effect({\n          name: "Font",\n          tag: "Text"\n        });\n\n        if (undefined === fnm) {\n          /* getter */\n          return font.fname();\n        }\n        /* setter */\n\n\n        font.suspend(false);\n\n        if ("string" === typeof fnm) {\n          font.fname(fnm);\n        } else if (true === Array.isArray(fnm) && 2 === fnm.length) {\n          font.fname(fnm[0], fnm[1]);\n        } else {\n          throw new Error("invalid parameter");\n        }\n\n        font.path(pth);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * character spacing setter/getter\n     *\n     * @param (mixed) string(size): spacing size\n     *                undefined: call as getter\n     * @param (key-value) style option [not required]\n     * @return (mixed) string: spacing size\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "space",\n    value: function space(val, opt) {\n      try {\n        return cmputl.size(this, \'letter-spacing\', val, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text thickness setter/getter\n     *\n     * @param (mixed) number: thickness value [100-900]\n     *                null: delete thickness\n     *                undefined: call as getter\n     * @param (key-value) style option [not required]\n     * @return (number) thickness value\n     * @type parameter\n     */\n\n  }, {\n    key: "weight",\n    value: function weight(val, opt) {\n      try {\n        if (undefined === val) {\n          /* getter */\n          return this.style("font-weight");\n        }\n        /* setter */\n\n\n        this.style({\n          \'font-weight\': val\n        }, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-text/index.js?')},"./node_modules/mofron-comp-ttlframe/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-comp-ttlframe/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-ttlframe/index.js\n * @brief title frame component\n * @author simpart\n */\nvar Frame = __webpack_require__(/*! mofron-comp-frame */ "./node_modules/mofron-comp-frame/index.js");\n\nvar Header = __webpack_require__(/*! mofron-comp-txtheader */ "./node_modules/mofron-comp-txtheader/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Frame) {\n  _inherits(_class, _Frame);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) text paramter\n   *                object: component option\n   * @param (component) child parameter\n   * @pmap text,child\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'TtlFrame\');\n\n      _this.shortForm(\'text\', \'child\');\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private \n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        this.header(new Header({\n          height: "0.4rem"\n        }));\n\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.child(this.header());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * header component\n     * \n     * @param (mofron-comp-txtheader) header component\n     * @return (mofron-comp-txtheader) header component\n     * @type parameter\n     */\n\n  }, {\n    key: "header",\n    value: function header(prm) {\n      try {\n        if (undefined !== prm) {\n          prm.config({\n            bind: false\n          });\n        }\n\n        return this.innerComp(\'header\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * title text contents\n     * \n     * @param (mixed) string: title text\n     *                mofron-comp-text: text component\n     * @param (dict) text config\n     * @return (mofron-comp-text) text component\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(prm, cnf) {\n      try {\n        return this.header().text(prm, cnf);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * title text contents\n     * same as text parameter\n     * \n     * @param (mixed) string: title text\n     *                mofron-comp-text: text component\n     * @param (string (size)) margin left size\n     * @return (mofron-comp-text) text component\n     * @type parameter\n     */\n\n  }, {\n    key: "title",\n    value: function title(prm, lft) {\n      try {\n        return this.text(prm, {\n          style: {\n            "margin-left": lft\n          }\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * header background color\n     * \n     * @param (mixed (color)) string: color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @param (option) style option\n     * @return (string) header background color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return this.header().baseColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Frame);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-ttlframe/index.js?')},"./node_modules/mofron-comp-txtframe/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-comp-txtframe/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-comp-txtframe/index.js\n * @brief text frame component for mofron\n *        text contents in the frame component.\n * @feature text is automatically centered\n *          center position can select vertical or horizonal by center parameter\n * @license MIT\n */\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Frame = __webpack_require__(/*! mofron-comp-frame */ "./node_modules/mofron-comp-frame/index.js");\n\nvar Vrtpos = __webpack_require__(/*! mofron-effect-vrtpos */ "./node_modules/mofron-effect-vrtpos/index.js");\n\nvar Hrzpos = __webpack_require__(/*! mofron-effect-hrzpos */ "./node_modules/mofron-effect-hrzpos/index.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_Frame) {\n  _inherits(_class, _Frame);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) text parameter\n   *                key-value: component config\n   * @short text\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("TxtFrame");\n\n      _this.shortForm("text");\n      /* init config */\n\n\n      _this.confmng().add("text", {\n        type: "Text"\n      });\n\n      _this.confmng().add("xCenter", {\n        type: "boolean",\n        init: true\n      });\n\n      _this.confmng().add("yCenter", {\n        type: "boolean",\n        init: true\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.style({\n          "display": "grid"\n        });\n        /* set text component */\n\n        this.text(new Text());\n        this.child(this.text());\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set center config\n     * \n     * @type private\n     */\n\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "beforeRender", this).call(this);\n\n        this.centerConf();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text contents setter/getter\n     *\n     * @param (mixed) string: contents text\n     *                mofron-comp-text: contents component\n     *                undefined: call as getter\n     * @return (mofron-comp-text) contents component\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(prm, cnf) {\n      try {\n        if ("string" === typeof prm) {\n          this.text().text(prm);\n          this.text().config(cnf);\n          return;\n        }\n\n        return this.innerComp("text", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * center position of text contents setter/getter\n     *\n     * @param (boolean) horizonal center position flag\n     *                  undefined: call as getter\n     * @param (boolean) vertical center position flag\n     *                  undefined: call as getter\n     * @return (array) center position flags\n     * @type parameter\n     */\n\n  }, {\n    key: "center",\n    value: function center(x, y) {\n      try {\n        return [this.xCenter(x), this.yCenter(y)];\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * horizonal center position of text contents setter/getter\n     *\n     * @param (boolean) true: text is centered horizontally (default)\n     *                  false: text is not centered\n     * @return (boolean) center position flag\n     * @type parameter\n     */\n\n  }, {\n    key: "xCenter",\n    value: function xCenter(prm) {\n      try {\n        return this.confmng("xCenter", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * vertical center position of text contents\n     *\n     * @param (boolean) true: text is centered vertically (default)\n     *                  false: text is not centered\n     * @return (boolean) center position flag\n     * @type parameter\n     */\n\n  }, {\n    key: "yCenter",\n    value: function yCenter(prm) {\n      try {\n        return this.confmng("yCenter", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set center config\n     * \n     * @type private\n     */\n\n  }, {\n    key: "centerConf",\n    value: function centerConf() {\n      try {\n        var cent = this.center();\n        var chd = this.child();\n\n        for (var cidx in chd) {\n          /* set horizonal center */\n          if (true === cent[0]) {\n            if (false === this.isExists()) {\n              chd[cidx].effect(new Hrzpos({\n                type: "center",\n                tag: "TxtFrame"\n              }));\n            } else {\n              chd[cidx].effect({\n                name: "HrzPos",\n                tag: "TxtFrame"\n              }).execute();\n            }\n          }\n          /* set vertical center */\n\n\n          if (true === cent[1]) {\n            if (false === this.isExists()) {\n              chd[cidx].effect(new Vrtpos({\n                type: "center"\n              }));\n            } else {\n              chd[cidx].effect({\n                name: "VrtPos",\n                tag: "TxtFrame"\n              }).execute();\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text color setter/getter\n     * \n     * @param (mixed (color)) string: color name, #hex\n     *                        array: [red, green, blue, alpha]\n     * @param (option) style option\n     * @return (string) text color\n     * @type parameter\n     */\n\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      try {\n        return this.text().mainColor(prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Frame);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-txtframe/index.js?')},"./node_modules/mofron-comp-txtheader/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-comp-txtheader/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  mofron-comp-txtheader/index.js\n * @brief text header component\n *        text in this component is positioned centrally in vertical in automatically. \n * @license MIT\n */\nvar Header = __webpack_require__(/*! mofron-comp-header */ "./node_modules/mofron-comp-header/index.js");\n\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Synhei = __webpack_require__(/*! mofron-effect-synchei */ "./node_modules/mofron-effect-synchei/index.js");\n\nvar cmputl = mofron.util.component;\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_Header) {\n  _inherits(_class, _Header);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize component\n   * \n   * @param (mixed) text parameter\n   *                key-value: component option\n   * @short text\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'TxtHeader\');\n\n      _this.shortForm(\'text\');\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * initialize dom contents\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "initDomConts",\n    value: function initDomConts() {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "initDomConts", this).call(this);\n\n        this.style({\n          \'align-items\': \'center\'\n        });\n        this.child(this.text());\n        this.text().effect(new Synhei(this));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter text\n     *\n     * @param (mixed) string: text contents\n     *                mofron-comp-text: update text component\n     * @param (key-value) text config\n     * @return (mofron-comp-text) text contents\n     * @type parameter\n     */\n\n  }, {\n    key: "text",\n    value: function text(txt, cnf) {\n      try {\n        if (undefined !== cnf) {\n          if (true === comutl.isinc(txt, "Text")) {\n            txt.config(cnf);\n          } else {\n            this.text().config(cnf);\n          }\n        }\n\n        if (\'string\' === typeof txt) {\n          this.text().text(txt);\n          return;\n        }\n\n        return this.innerComp(\'text\', txt, Text);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text position and size offset\n     * \n     * @param (string (size)) left offset position\n     * @param (string (size)) height offset position\n     * \n     */\n\n  }, {\n    key: "txtpos",\n    value: function txtpos(lft, hei) {\n      try {\n        this.text().style({\n          "margin-left": lft\n        });\n        var syn = this.text().effect({\n          name: "SyncHei"\n        });\n\n        if (true === comutl.isinc(syn, "SyncHei")) {\n          syn.offset(hei);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Header);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-comp-txtheader/index.js?')},"./node_modules/mofron-effect-blur/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-effect-blur/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-blur/index.js\n * @brief blur effect for mofron\n *        this effect makes the component to blurring.\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize blur effect\n   *\n   * @param (mixed) \'value\' parameter\n   *                key-value: effect config\n   * @short value\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Blur\');\n\n      _this.shortForm(\'value\');\n      /* init config */\n\n\n      _this.confmng().add("value", {\n        type: "size",\n        init: "0.05rem"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * enalbe blur effect\n   * \n   * @param (component) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt) {\n      try {\n        tgt.style({\n          \'filter\': \'blur(\' + this.value() + \')\'\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * blur size setter/getter\n     * \n     * @param (string) blur size (css value)\n     * @return (string) blur size\n     * @type parameter\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-blur/index.js?')},"./node_modules/mofron-effect-border/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-effect-border/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-border/index.js\n * @brief border effect for mofron\n *        set border style to target component\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   * \n   * @param (mixed) width parameter\n   *                key-value: effect config\n   * @param (mixed) color parameter\n   * @short width,color\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name('Border');\n\n      _this.shortForm('width', 'color');\n      /* init config */\n\n\n      _this.confmng().add('width', {\n        type: 'size',\n        init: \"0.01rem\"\n      });\n\n      _this.confmng().add('style', {\n        type: 'string',\n        init: 'solid',\n        select: ['none', 'hidden', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset', 'dashed', 'dotted']\n      });\n\n      _this.confmng().add('position', {\n        type: 'string',\n        init: 'all',\n        select: ['all', 'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']\n      });\n\n      _this.confmng().add('color', {\n        type: 'color',\n        init: [90, 90, 90]\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * effect config\n   * \n   * @param (component) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: \"contents\",\n    value: function contents(cmp) {\n      try {\n        var set_style = {};\n        var pos = 'all' === this.position() ? 'border-' : 'border-' + this.position() + '-';\n        set_style[pos + 'width'] = this.width().toString();\n        set_style[pos + 'style'] = this.style();\n        set_style[pos + 'color'] = this.color().toString();\n        cmp.style(set_style);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border width\n     * \n     * @param (string) css value of border width\n     * @return (string) css value of border width\n     * @type parameter\n     */\n\n  }, {\n    key: \"width\",\n    value: function width(prm) {\n      try {\n        return this.confmng('width', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter border style\n     *\n     * @param (string) css value of border style (default is 'solid')\n     *                 ('none', 'hidden', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset', 'dashed', 'dotted')\n     * @return (string) css value of border style\n     * @type parameter\n     */\n\n  }, {\n    key: \"style\",\n    value: function style(prm) {\n      try {\n        return this.confmng('style', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border position\n     * \n     * @param (string) border target position (default is 'all')\n     *                 ('all', 'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right')\n     * @return (string) css value of border type\n     * @type parameter\n     */\n\n  }, {\n    key: \"position\",\n    value: function position(prm) {\n      try {\n        return this.confmng('position', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * border color\n     * \n     * @param (mixed (color)) string: color name, #hex\n     *                        array: [red, green, blue, (alpha)]\n     * @return (mixed (color)) border color\n     * @type parameter\n     */\n\n  }, {\n    key: \"color\",\n    value: function color(prm) {\n      try {\n        return this.confmng('color', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron[\"class\"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-border/index.js?")},"./node_modules/mofron-effect-fade/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-effect-fade/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-fade/index.js\n * @brief fade effect for mofron\n * @author simpart\n */\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize fade effect\n   * \n   * @param (mixed) boolean: value parameter\n   *                object: effect config\n   * @param (number) speed parameter\n   * @short value,speed\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Fade\');\n\n      _this.confmng().add("value", {\n        type: "boolean",\n        init: true\n      });\n\n      _this.shortForm("value", "speed");\n      /* init config */\n\n\n      _this.speed(700);\n      /* opacity setting */\n\n\n      _this.beforeEvent(function (bf_eff) {\n        try {\n          var stval = {\n            \'opacity\': true === bf_eff.value() ? 0 : 1\n          };\n          cmputl.rstyle(bf_eff.component(), stval);\n        } catch (e) {\n          console.error(e.stack);\n          throw e;\n        }\n      });\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * effect contents\n   * \n   * @param (component) effect target component object\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        cmputl.rstyle(cmp, {\n          \'opacity\': true === this.value() ? 1 : 0\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * fade type value\n     * \n     * @param (boolean) true: fade-in effect\n     *                  false: fade-out effect\n     * @return (boolean) fade type\n     * @type parameter\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-fade/index.js?')},"./node_modules/mofron-effect-font/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-effect-font/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-font/index.js\n * @brief set text font for mofron-comp-text component\n *        format configure for each file automatically if you use local font\n * @attention this effect is private, this function is included in text component. so you don\'t need to use directly\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   * \n   * @param (mixed) fname parameter\n   *                key-value: effect config\n   * @param (string) path parameter\n   * @short fname,path\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Font");\n\n      _this.shortForm("fname", "path");\n      /* init config */\n\n\n      _this.confmng().add("fname", {\n        type: "array"\n      });\n\n      _this.confmng().add("path", {\n        type: "string"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * font name setter/getter\n   *\n   * @param (mixed) string: primary font name\n   *                undefined: call as getter\n   * @param (string) secondary font name (not required)\n   * @return (array) font name [primary, secondary]\n   *                 null: not set\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "fname",\n    value: function fname(p1, p2) {\n      try {\n        if (0 === arguments.length) {\n          /* getter */\n          return this.confmng("fname");\n        }\n        /* setter */\n\n\n        if ("string" !== typeof p1 || undefined !== p2 && "string" !== typeof p2) {\n          throw new Error("invalid parameter");\n        }\n\n        var set_val = [undefined, undefined];\n        set_val[0] = -1 !== p1.indexOf(" ") ? "\'" + p1 + "\'" : p1;\n\n        if ("string" === typeof p2) {\n          set_val[1] = -1 !== p2.indexOf(" ") ? "\'" + p2 + "\'" : p2;\n        }\n\n        this.confmng("fname", set_val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter path to font\n     * \n     * @param (mixed) string: path to font\n     *                undefined: call as getter\n     * @return (string) path to font\n     *                  null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "path",\n    value: function path(prm) {\n      try {\n        return this.confmng("path", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter path to font, same as path config\n     * \n     * @param (mixed) string: path to font\n     *                undefined: call as getter\n     * @return (string) path to font\n     *                  null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "src",\n    value: function src(prm) {\n      try {\n        return this.confmng("path", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set font-face setting in style tag\n     * \n     * @param (string) font-family value\n     * @type private\n     */\n\n  }, {\n    key: "addFontFace",\n    value: function addFontFace(fnm) {\n      try {\n        /* format */\n        var pth_spt = this.path().split(\'.\');\n        var format = \'\';\n\n        if (\'woff\' === pth_spt[pth_spt.length - 1]) {\n          format = "format(\'woff\')";\n        } else if (\'ttf\' === pth_spt[pth_spt.length - 1]) {\n          format = "format(\'truetype\')";\n        } else if (\'otf\' === pth_spt[pth_spt.length - 1]) {\n          format = "format(\'opentype\')";\n        } else if (\'eot\' === pth_spt[pth_spt.length - 1]) {\n          format = "format(\'embedded-opentype\')";\n        } else if (\'svg\' === pth_spt[pth_spt.length - 1] || \'svgz\' === pth_spt[pth_spt.length - 1]) {\n          format = "format(\'svg\')";\n        }\n\n        var val = "@font-face {";\n        val += "font-family:" + fnm + ",";\n        val += "src:" + "url(\'" + this.path() + "\') " + format + "}";\n        comutl.addhead("style", {\n          type: "text/css",\n          test: "test"\n        }, val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set text font\n     *\n     * @param (mofron.class.Component) component object\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var fname = this.fname();\n\n        if (null === fname) {\n          throw new Error("could not find font name config");\n        }\n\n        var set_fnt = undefined === fname[1] ? fname[0] : fname[0] + \',\' + fname[1];\n\n        if (null !== this.path()) {\n          this.addFontFace(set_fnt);\n        }\n\n        cmp.style({\n          \'font-family\': set_fnt\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-font/index.js?')},"./node_modules/mofron-effect-hrzpos/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-effect-hrzpos/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-hrzpos/index.js\n * @brief horizonal position effect for mofron component\n *        the component is positioned specified parameter that is \'center\' or \'left\' and \'right\'.\n * @license MIT\n */\nvar cmputl = mofron.util.component;\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   * \n   * @param (mixed) type parameter\n   *                key-value: effect config\n   * @param (string) offset parameter\n   * @short type,offset\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'HrzPos\');\n\n      _this.shortForm(\'type\', \'offset\');\n      /* init config */\n\n\n      _this.confmng().add("offset", {\n        type: "size"\n      });\n\n      _this.confmng().add("type", {\n        type: "string",\n        init: "center",\n        select: ["center", "left", "right"]\n      });\n      /* set config */\n\n\n      _this.innerTgt(false);\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * effect contents\n   * \n   * @param (mofron.class.Component) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var rdom = cmp.rootDom();\n\n        for (var ridx in rdom) {\n          if (true === comutl.isinc(cmp, "Text")) {\n            /* set text component position */\n            this.txtpos(rdom[ridx]);\n            continue;\n          }\n          /* set other component position */\n\n\n          var cmp_pos = rdom[ridx].style("position");\n\n          if ("center" === this.type()) {\n            if ("fixed" === cmp_pos || "absolute" === cmp_pos) {\n              this.lftpos(rdom[ridx]);\n            } else {\n              rdom[ridx].style({\n                "display": "block"\n              });\n              this.mgnpos(rdom[ridx]);\n            }\n          } else {\n            if ("relative" === cmp_pos) {\n              this.mgnpos(rdom[ridx]);\n            } else if ("absolute" === cmp_pos || "fixed" === cmp_pos) {\n              this.lftpos(rdom[ridx]);\n            } else {\n              if (null !== cmp.parent()) {\n                rdom[ridx].style({\n                  "position": "relative"\n                });\n                this.mgnpos(rdom[ridx]);\n              } else {\n                rdom[ridx].style({\n                  "position": "absolute"\n                });\n                this.lftpos(rdom[ridx]);\n              }\n            }\n          }\n\n          if ("flex" === rdom[ridx].parent().style("display") || "flex" === cmputl.dispbuff(rdom[ridx].parent())) {\n            break;\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * text component position\n     * \n     * @param (mofron.class.Dom) dom objedt\n     * @type private\n     */\n\n  }, {\n    key: "txtpos",\n    value: function txtpos(dom) {\n      try {\n        if (null !== dom.parent() && ("flex" === dom.parent().style("display") || "flex" === cmputl.dispbuff(dom.parent()))) {\n          this.mgnpos(dom);\n        } else if ("absolute" === dom.style("position") || "flex" === dom.style("position")) {\n          this.lftpos(dom);\n        } else {\n          dom.style({\n            \'text-align\': this.type()\n          });\n\n          if (null !== this.offset()) {\n            dom.style({\n              "position": "relative"\n            });\n\n            if ("right" !== this.type()) {\n              dom.style({\n                "left": this.offset()\n              });\n            } else {\n              dom.style({\n                "right": this.offset()\n              });\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set margin position\n     * \n     * @param (mofron.class.Dom) dom object\n     * @type private\n     */\n\n  }, {\n    key: "mgnpos",\n    value: function mgnpos(dom) {\n      try {\n        var off = this.offset();\n\n        if (\'center\' === this.type()) {\n          dom.style({\n            "margin-right": "auto",\n            "margin-left": "auto"\n          });\n\n          if (null !== off) {\n            dom.style({\n              "position": "relative",\n              "left": off\n            });\n          }\n        } else if (\'left\' === this.type()) {\n          dom.style({\n            "margin-right": "auto",\n            "margin-left": "0rem"\n          });\n\n          if (null !== off) {\n            dom.style({\n              "margin-left": off\n            });\n          }\n        } else {\n          dom.style({\n            "margin-right": "0rem",\n            "margin-left": "auto"\n          });\n\n          if (null !== off) {\n            dom.style({\n              "margin-right": off\n            });\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set left position\n     *\n     * @param (mofron.class.Dom) dom object\n     * @type private\n     */\n\n  }, {\n    key: "lftpos",\n    value: function lftpos(dom) {\n      try {\n        var off = this.offset();\n\n        if (\'center\' === this.type()) {\n          dom.style({\n            "left": "50%"\n          });\n\n          if (null === off || "%" !== comutl.sizetype(off)) {\n            dom.style({\n              "transform": "translateX(-50%)"\n            }, {\n              bpref: true\n            });\n          } else {\n            dom.style({\n              "transform": "translateX(" + comutl.sizesum("-50%", off) + ")"\n            }, {\n              bpref: true\n            });\n          }\n        } else if (\'left\' === this.type()) {\n          dom.style({\n            "left": null !== off ? off : "0rem"\n          });\n        } else if (\'right\' === this.type()) {\n          dom.style({\n            "right": null !== off ? off : "0rem"\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * position type setter/getter\n     * \n     * @param (string) set position type (\'center\',\'left\',\'right\')\n     *                 undefind: call as getter\n     * @return (string) position type\n     * @type parameter\n     */\n\n  }, {\n    key: "type",\n    value: function type(prm) {\n      try {\n        return this.confmng("type", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * position offset setter/getter\n     * \n     * @param (string(size)) position offset size\n     *                       undefined: call as getter\n     * @return (mixed) string(size): position offset size\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        return this.confmng("offset", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-hrzpos/index.js?')},"./node_modules/mofron-effect-position/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mofron-effect-position/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-position/index.js\n * @brief position effect for mofron\n *        it makes easy to move the component position by the animation.\n * @feature default animation speed is 300ms\n * @attention it may not work well if "position" was configured incorrectly.\n *            "position" is disabled if the target component was already set "position" style.\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   *\n   * @param (mixed) string: directionconfig  parameter\n   *                        dict: effect config list\n   * @param (string(size)) value parameter\n   * @short dirction,value\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Position");\n\n      _this.shortForm("direction", "value");\n\n      _this.speed(300);\n      /* init config */\n\n\n      _this.confmng().add("position", {\n        type: "string",\n        select: ["absolute", "fixed", "inherit", "initial", "relative", "static", "sticky", "unset"],\n        init: "relative"\n      });\n\n      _this.confmng().add("direction", {\n        type: "string",\n        select: ["top", "left", "bottom", "right"],\n        init: "left"\n      });\n\n      _this.confmng().add("value", {\n        type: "size"\n      });\n\n      _this.beforeEvent(function (eff) {\n        try {\n          eff.component().style({\n            "position": eff.position()\n          }, {\n            passive: true\n          });\n        } catch (e) {\n          console.error(e.stack);\n          throw e;\n        }\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * effect contents\n   * set end position\n   * \n   * @param (object) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var tp = {};\n        tp[this.direction()] = this.value();\n        cmp.style(tp);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * position type setter/getter\n     * value of "position" style\n     *\n     * @param (string) position type, the default is "relative"\n     *                 ["absolute"/"fixed"/"inherit"/"initial"/"relative"/"static"/"sticky"/"unset"]\n     * @return (string) position type\n     * @type parameter\n     */\n\n  }, {\n    key: "position",\n    value: function position(prm) {\n      try {\n        return this.confmng("position", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * direction type\n     *\n     * @param (string) direction type, the default is "left"\n     *                 ["top"/"left"/"bottom"/"right"]\n     * @return (string) direction type\n     * @type parameter\n     */\n\n  }, {\n    key: "direction",\n    value: function direction(prm) {\n      try {\n        return this.confmng("direction", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * position value\n     * component position is moved by this value size\n     * \n     * @param (string) begin position value, default is "0rem"\n     * @param (string) end position value, default is "0rem"\n     * @return (string) position value\n     * @type parameter\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-position/index.js?')},"./node_modules/mofron-effect-radius/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-effect-radius/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-radius/index.js\n * @brief radius effect for mofron\n *        this effect makes the components of outside rounded style\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize radius effect\n   *\n   * @param (mixed) value parameter\n   *                key-value: effect config\n   * @short value\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Radius\');\n\n      _this.shortForm(\'value\');\n      /* init config */\n\n\n      _this.confmng().add("value", {\n        type: "size",\n        init: "0.5rem"\n      });\n\n      _this.confmng().add("position", {\n        list: true,\n        select: ["top-left", "top-right", "bottom-left", "bottom-right"]\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * radius size\n   *\n   * @param (string (size)) radius size\n   * @return (string (size)) radius size\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * radius target position\n     * each position will be targeted if nothing is set \n     * \n     * @param (mixed) array: position list\n     *                string: target position ("top-left","top-right","bottom-left","bottom-right")\n     * @return (array) position list\n     * @type parameter\n     */\n\n  }, {\n    key: "position",\n    value: function position(prm) {\n      try {\n        return this.confmng(\'position\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * effect contents\n     * \n     * @param (component) target component\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var pos = this.position();\n        var val = this.value().toString();\n\n        if (0 === pos.length) {\n          cmp.style({\n            \'border-radius\': val\n          }, {\n            bpref: true\n          });\n        } else {\n          var set_sty = {};\n\n          for (var tidx in pos) {\n            set_sty[\'border-\' + pos[tidx] + \'-radius\'] = val;\n          }\n\n          cmp.style(set_sty, {\n            bpref: true\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-radius/index.js?')},"./node_modules/mofron-effect-shadow/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-effect-shadow/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file shadow.js\n * @brief shadow effect for mofron\n *        this effect makes the component has a shadow.\n * @feature the size changes according to the value of the \'value\' parameter.\n *          the blur percentage changes according to the value of the \'blur\' parameter.\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   *\n   * @param (mixed) value parameter\n   *                key-value: effect config\n   * @param color parameter\n   * @short value,color\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Shadow\');\n\n      _this.shortForm(\'value\', \'color\');\n      /* init config */\n\n\n      _this.confmng().add("value", {\n        type: "size",\n        init: "0.015rem"\n      });\n\n      _this.confmng().add("blur", {\n        type: "size",\n        init: "0rem"\n      });\n\n      _this.confmng().add(\'color\', {\n        type: "color",\n        init: [190, 190, 190]\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * shadow size\n   *\n   * @param (string (size)) shadow size (css value)\n   * @return (string (size)) shadow size (css value)\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * blur size value\n     * \n     * @param (string (size)) blur size value\n     * @return (string (size)) blur size value\n     * @type parameter\n     */\n\n  }, {\n    key: "blur",\n    value: function blur(prm) {\n      try {\n        return this.confmng("blur", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * shadow color\n     *\n     * @param (string (size)) shadow color (css value)\n     * @return (string (size)) shadow color (css value)\n     * @type parameter\n     */\n\n  }, {\n    key: "color",\n    value: function color(prm) {\n      try {\n        return this.confmng("color", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * effect contents\n     * \n     * @param (component) target componet\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var str_val = this.value().toString();\n        var sum_val = comutl.sizesum(str_val, comutl.sizesum(str_val, str_val));\n        var set_val = {\n          "box-shadow": sum_val + \' \' + sum_val + \' \' + this.blur().toString() + \' \' + \'0rem \' + this.color().toString()\n        };\n        cmp.style(set_val, {\n          bpref: true\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-shadow/index.js?')},"./node_modules/mofron-effect-synchei/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-effect-synchei/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-synchei/index.js\n * @brief synchronize height of target component and height of effect component\n *        this effect resizes height of a target component when the height of the target component changed.\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * constructor\n   * \n   * @param (mixed) string: targetComp parameter\n   *                key-value: effect config\n   * @param (string) offset parameter\n   * @short targetComp,offset\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n      /* init config */\n\n      _this.confmng().add(\'targetComp\', {\n        type: \'Component\'\n      });\n\n      _this.confmng().add(\'offset\', {\n        type: \'size\'\n      });\n\n      _this.name(\'SyncHei\');\n\n      _this.shortForm(\'targetComp\', \'offset\');\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * setter/getter for height listen target component\n   * it triggers this effect when height of target component was changed.\n   *\n   * @param (mofron.class.Component) target component\n   *                                 undefined: call as getter\n   * @return (mixed) mofron.class.Component: target component\n   *                 null: not set\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "targetComp",\n    value: function targetComp(prm) {\n      try {\n        var ret = this.confmng(\'targetComp\', prm);\n\n        if (undefined !== prm) {\n          var syn_fnc = function syn_fnc(p1, p2, sync) {\n            try {\n              sync.execute();\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          };\n\n          prm.styleDom().style().listener(\'height\', syn_fnc, this);\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * offset value setter/getter\n     * this value is used for height adjustment\n     *\n     * @param (string(size)) offset value (default is \'0rem\')\n     *                       undefined: call as getter\n     * @return (string) offset value\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        return this.confmng(\'offset\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * synchronize height size\n     *\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        if (null === this.targetComp()) {\n          this.targetComp(this.component().parent());\n        }\n\n        cmp.height(comutl.sizesum(this.targetComp().height(), this.offset()));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-synchei/index.js?')},"./node_modules/mofron-effect-syncwid/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-effect-syncwid/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-syncwid/index.js\n * @brief synchronize width of target component and width of effect component\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   *\n   * @param (mixed) targetComp config parameter\n   *                dict: effect config list\n   * @param (string(size)) offset config parameter\n   * @short targetComp,offset\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.shortForm(\'targetComp\', \'offset\');\n\n      _this.name(\'SyncWid\');\n      /* init config */\n\n\n      _this.confmng().add("targetComp", {\n        type: "Component"\n      });\n\n      _this.confmng().add("offset", {\n        type: "size"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * setter/getter for width listen target component \n   * it triggers this effect when width of target component was changed.\n   *\n   * @param (Component) target component\n   *                    undefined: call as getter\n   * @return (mixed) Component: target component\n   *                 null: not set\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "targetComp",\n    value: function targetComp(prm) {\n      try {\n        var ret = this.confmng("targetComp", prm);\n\n        if (undefined !== prm) {\n          var syn_fnc = function syn_fnc(p1, p2, sync) {\n            try {\n              sync.execute();\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          };\n\n          prm.styleDom().style().listener(\'width\', syn_fnc, this);\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * offset value setter/getter\n     * this value is used for width adjustment\n     *\n     * @param (string(size)) offset value (default is \'0rem\')\n     *                       undefined: call as getter\n     * @return (mixed) string: offset value\n     *                 null: not set\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        return this.confmng(\'offset\', prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * effect contents\n     * \n     * @param (mofron.class.Component) effect target component\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        if (null === this.targetComp()) {\n          this.targetComp(this.component().parent());\n        }\n\n        cmp.width(comutl.sizesum(this.targetComp().width(), this.offset()));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-syncwid/index.js?')},"./node_modules/mofron-effect-syncwin/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-effect-syncwin/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-syncwin/index.js\n * @brief synchronize component with window\n *        target component size is changed even if the window size is changed.\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   * \n   * @param (mixed) valid config parameter\n   *                dict: effect config list\n   * @param (mixed) offset config parameter\n   * @short valid,offset\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'SyncWin\');\n\n      _this.shortForm(\'valid\', \'offset\');\n      /* init config */\n\n\n      _this.confmng().add("x_valid", {\n        type: "boolean",\n        init: true\n      });\n\n      _this.confmng().add("y_valid", {\n        type: "boolean",\n        init: true\n      });\n\n      _this.confmng().add("x_offset", {\n        type: "size"\n      });\n\n      _this.confmng().add("y_offset", {\n        type: "size"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * enable synchronize window size\n   * \n   * @param (component) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt) {\n      try {\n        var off = this.offset();\n        off[0] = null === off[0] ? undefined : comutl.getsize(off[0]).toPixel() + \'px\';\n        off[1] = null === off[1] ? undefined : comutl.getsize(off[1]).toPixel() + \'px\';\n\n        if (true === this.valid()[0]) {\n          /* set horizon size */\n          try {\n            tgt.width(comutl.sizesum(window.innerWidth + \'px\', off[0]));\n          } catch (e) {\n            tgt.width(window.innerWidth + \'px\');\n          }\n        }\n\n        if (true === this.valid()[1]) {\n          /* set vertical size */\n          try {\n            tgt.height(comutl.sizesum(window.innerHeight + \'px\', off[1]));\n          } catch (e) {\n            tgt.height(window.innerHeight + \'px\');\n          }\n        }\n\n        if (false === this.isInited()) {\n          var fnc = function fnc(eff) {\n            try {\n              eff.execute();\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          };\n\n          mofron.window.resizeEvent(fnc, this);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set x,y valid flag\n     * \n     * @param (boolean) valid flag for horizon\n     * @param (boolean) valid flag for vertical\n     * @return (array) [x-flag, y-flag ]\n     * @type pararmeter\n     */\n\n  }, {\n    key: "valid",\n    value: function valid(x, y) {\n      try {\n        if (undefined === x) {\n          /* getter */\n          return [this.x_valid(), this.y_valid()];\n        }\n        /* setter */\n\n\n        this.x_valid(x);\n        this.y_valid(y);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * horizonal valid flag setter/getter\n     * \n     * @param (boolean) true: enabled horizonal sync [default]\n     *                  false: disabled horizonal sync\n     *                  undefined: call as getter\n     * @return (boolean) horizonal valid flag\n     * @type parameter\n     */\n\n  }, {\n    key: "x_valid",\n    value: function x_valid(prm) {\n      try {\n        return this.confmng("x_valid", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * vertical valid flag setter/getter\n     * \n     * @param (boolean) true: enabled vertical sync [default]\n     *                  false: disabled vertical sync\n     *                  undefined: call as getter\n     * @return (boolean) vertival valid flag\n     * @type parameter\n     */\n\n  }, {\n    key: "y_valid",\n    value: function y_valid(prm) {\n      try {\n        return this.confmng("y_valid", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * setter/getter offset size\n     * \n     * @param (string (size)) horizonal offset size\n     * @param (string (size)) vertical offset size\n     * @return (array) [horizon offset size, vertical offset size]\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(x, y) {\n      try {\n        if (undefined === x) {\n          /* getter */\n          return [this.x_offset(), this.y_offset()];\n        }\n        /* setter */\n\n\n        this.x_offset(x);\n        this.y_offset(y);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * horizonal offset size setter/getter\n     * \n     * @param (string(size)) horizonal offset size\n     * @return (string(size)) horizonal offset size\n     * @type parameter\n     */\n\n  }, {\n    key: "x_offset",\n    value: function x_offset(prm) {\n      try {\n        return this.confmng("x_offset", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * vertical offset size setter/getter\n     * \n     * @param (string(size)) vertical offset size\n     * @return (string(size)) vertical offset size\n     * @type parameter\n     */\n\n  }, {\n    key: "y_offset",\n    value: function y_offset(prm) {\n      try {\n        return this.confmng("y_offset", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-syncwin/index.js?')},"./node_modules/mofron-effect-synwwid/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-effect-synwwid/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-synwwid/index.js\n * @brief effect for synchronize component width with window\n * @license MIT\n */\nvar Syncwin = __webpack_require__(/*! mofron-effect-syncwin */ "./node_modules/mofron-effect-syncwin/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Syncwin) {\n  _inherits(_class, _Syncwin);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize effect\n   * \n   * @param (mixed) offset parameter\n   *                effect config\n   * @short x_offset\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Synwwid\');\n\n      _this.shortForm(\'x_offset\');\n\n      _this.valid(true, false);\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  return _class;\n}(Syncwin);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-synwwid/index.js?')},"./node_modules/mofron-effect-vrtpos/index.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron-effect-vrtpos/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-effect-vrtpos/index.js\n * @brief vertical position effect for mofron component\n *        the component is positioned specified parameter that is \'center\' or \'top\' and \'bottom\'.\n * @license MIT\n */\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Effect) {\n  _inherits(_class, _mofron$class$Effect);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize vertical position effect\n   *\n   * @param (mixed) type config parameter\n   *                key-value: effect config list\n   * @param offset config parameter\n   * @short type,offset\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("VrtPos");\n\n      _this.shortForm("type", "offset");\n      /* init config */\n\n\n      _this.confmng().add("type", {\n        type: "string",\n        select: ["top", "center", "bottom"],\n        init: "center"\n      });\n\n      _this.confmng().add("offset", {\n        type: "size"\n      });\n      /* set config */\n\n\n      _this.innerTgt(false);\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * effet contents\n   * \n   * @param (mofron.class.Component) effect target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(cmp) {\n      try {\n        var rdom = cmp.rootDom();\n\n        for (var ridx in rdom) {\n          if (true === comutl.isinc(cmp, "Text")) {\n            this.txtpos(rdom[ridx]);\n            return;\n          } else if ("absolute" === rdom[ridx].style("position") || "relative" === rdom[ridx].style("position") || "fixed" === rdom[ridx].style("position")) {\n            this.toppos(rdom[ridx]);\n          } else if ("flex" === rdom[ridx].parent().style("display") || "flex" === cmputl.dispbuff(rdom[ridx])) {\n            this.mgnpos(rdom[ridx]);\n          } else {\n            rdom[ridx].style({\n              "position": "relative"\n            }, {\n              passive: true\n            });\n            this.toppos(rdom[ridx]);\n          }\n\n          if ("flex" !== rdom[ridx].parent().style("display")) {\n            break;\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set text component position\n     * \n     * @param (mofron.class.Dom) dom object\n     * @type private\n     */\n\n  }, {\n    key: "txtpos",\n    value: function txtpos(dom) {\n      try {\n        var off = this.offset();\n        var pnt = dom.parent();\n\n        if (null !== pnt) {\n          var pnt_disp = "none" === pnt.style("display") ? cmputl.dispbuff(pnt) : pnt.style("display");\n\n          if ("flex" === pnt_disp || \'grid\' === pnt_disp) {\n            if ("center" === this.type()) {\n              pnt.style({\n                "align-items": "center"\n              });\n            } else if ("bottom" === this.type()) {\n              pnt.style({\n                "align-items": "flex-end"\n              });\n            }\n\n            if (null !== off) {\n              dom.style({\n                "position": "relative"\n              }, {\n                passive: true\n              });\n              dom.style({\n                "top": off\n              });\n            }\n\n            return;\n          }\n        }\n\n        dom.style({\n          "position": "relative"\n        }, {\n          passive: true\n        });\n        this.toppos(dom);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set position by top value\n     * \n     * @param (mofron.class.Dom) effect target component\n     * @type private\n     */\n\n  }, {\n    key: "toppos",\n    value: function toppos(dom) {\n      try {\n        var off = this.offset();\n\n        if ("center" === this.type()) {\n          dom.style({\n            "top": "50%"\n          });\n          dom.style({\n            "transform": "translateY(-50%)"\n          }, {\n            bpref: true\n          });\n\n          if (null !== off) {\n            dom.style({\n              "margin-top": off\n            });\n          }\n        } else if ("top" === this.type()) {\n          dom.style({\n            "top": null !== off ? off : "0rem"\n          });\n        } else {\n          dom.style({\n            "bottom": null !== off ? off : "0rem"\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set position by margin value\n     * \n     * @param (mofron.class.Dom) dom object\n     * @type private\n     */\n\n  }, {\n    key: "mgnpos",\n    value: function mgnpos(dom) {\n      try {\n        var off = this.offset();\n\n        if ("center" === this.type()) {\n          dom.style({\n            "margin-top": "auto",\n            "margin-bottom": "auto"\n          });\n\n          if (null !== off) {\n            dom.style({\n              "position": "relative"\n            }, {\n              passive: true\n            });\n            dom.style({\n              "top": off\n            });\n          }\n        } else if ("top" === this.type()) {\n          dom.style({\n            "margin-top": null !== off ? off : "0rem",\n            "margin-bottom": "auto"\n          });\n        } else {\n          dom.style({\n            "margin-top": "auto",\n            "margin-bottom": null !== off ? off : "0rem"\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * position type setter/getter\n     *\n     * @param (string) position type (center,top,bottom)\n     *                 undefined: call as getter\n     * @return (string) position type\n     * @type parameter\n     */\n\n  }, {\n    key: "type",\n    value: function type(prm) {\n      try {\n        return this.confmng("type", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * offset size setter/getter\n     *\n     * @param (string(size)) offset size\n     *                       undefined: call as getter\n     * @return (mofron.class.Size) offset size\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        return this.confmng("offset", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Effect);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-effect-vrtpos/index.js?')},"./node_modules/mofron-event-click/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-event-click/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-click/index.js\n * @brief click event for mofron component\n *        it executes an event function when the component is clicked\n * ## event function parameter\n *  - component: event target component object\n *  - object: MouseEvent object of addEventListener\n *  - mixed: user specified parameter\n * @license MIT\n */\nvar Common = __webpack_require__(/*! mofron-event-common */ "./node_modules/mofron-event-common/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Common) {\n  _inherits(_class, _Common);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize click event\n   * \n   * @param (mixed) listener parameter\n   *                key-value: event config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Click");\n\n      _this.shortForm("listener");\n      /* init config */\n\n\n      _this.confmng().add("pointer", {\n        type: "boolean",\n        init: true\n      });\n\n      _this.type("click");\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * add click event to target component.\n   * \n   * @param (component) event target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt) {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "contents", this).call(this, tgt);\n\n        if (true === this.pointer()) {\n          this.component().style({\n            \'cursor\': \'pointer\'\n          }, {\n            passive: true\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * mouse cursor style\n     *\n     * @param (boolean) true: mouse-in cursor is pointer [default]\n     *                  false: mouse-in coursor is default\n     * @return (boolean) mouse-in cursor style\n     * @type parameter\n     */\n\n  }, {\n    key: "pointer",\n    value: function pointer(flg) {\n      try {\n        return this.confmng("pointer", flg);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Common);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-click/index.js?')},"./node_modules/mofron-event-clicktap/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-event-clicktap/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-clicktap/index.js\n * @brief click and tap event for mofron\n *        set click event or tap event according to access device\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nvar Tap = __webpack_require__(/*! mofron-event-tap */ "./node_modules/mofron-event-tap/index.js");\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Event) {\n  _inherits(_class, _mofron$class$Event);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize event\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: event config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("ClickTap");\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(dom) {\n      try {\n        var lis = this.listener();\n        var clk_evt = new Click();\n        var tap_evt = new Tap();\n\n        for (var lidx in lis) {\n          clk_evt.listener(lis[lidx][0], lis[lidx][0]);\n          tap_evt.listener(lis[lidx][0], lis[lidx][0]);\n        }\n\n        var dev = comutl.accdev();\n\n        if ("mobile" === dev || "tablet" === dev) {\n          tap_evt.taponly(false);\n          this.component().event(tap_evt);\n        } else {\n          this.component().event(clk_evt);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Event);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-clicktap/index.js?')},"./node_modules/mofron-event-clkfocus/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-event-clkfocus/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-clkfocus/index.js\n * @brief click focus event for mofron\n * ## event function parameter\n *  - component: event target component object\n *  - boolean: focus flag\n *  - mixed: user specified parameter\n * @feature this event notify when enable focus by clicking component and disable focus by clicking the other than that.\n * @attention not supported focus event by tab key\n * @license MIT\n */\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Click) {\n  _inherits(_class, _Click);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize event\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: event config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'ClkFocus\');\n      /* init config */\n\n\n      _this.confmng().add("clickFlag", {\n        type: "boolean",\n        init: false\n      });\n\n      _this.confmng().add("status", {\n        type: "boolean",\n        init: false\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * event contents for target component\n   * \n   * @param (mofron.class.Dom) target dom object\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt_dom) {\n      try {\n        if (true === this.pointer()) {\n          tgt_dom.component().style({\n            "cursor": "pointer"\n          });\n        }\n\n        var evt = this;\n        tgt_dom.getRawDom().addEventListener(\'click\', function () {\n          try {\n            evt.clickFlag(true);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        }, false);\n\n        var win_clk = function win_clk() {\n          try {\n            if (true === evt.status() && false === evt.clickFlag()) {\n              evt.execListener(false);\n              evt.status(false);\n            } else if (false === evt.status() && true === evt.clickFlag()) {\n              evt.execListener(true);\n              evt.status(true);\n            }\n\n            evt.clickFlag(false);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        mofron.window.event(new Click(win_clk));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * flag for target clicked\n     *\n     * @param (boolean) click flag\n     * @return (boolean) click flag\n     * @type private\n     */\n\n  }, {\n    key: "clickFlag",\n    value: function clickFlag(prm) {\n      try {\n        return this.confmng("clickFlag", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * focus status flag setter/getter\n     *\n     * @param (boolean) focus status flag\n     *                  undefined: call as getter\n     * @return (boolean) focus status flag\n     * @type function\n     */\n\n  }, {\n    key: "status",\n    value: function status(prm) {\n      try {\n        return this.confmng("status", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Click);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-clkfocus/index.js?')},"./node_modules/mofron-event-common/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron-event-common/index.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-common/index.js\n * @brief common event for mofron\n *        set addEventListener of target object\n *        it is possible to use addEventListener() for general by setting the parameter of the type method.\n * ## event function parameter\n *  - component: event target component object\n *  - object: event object of addEventListener\n *  - mixed: user specified parameter\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Event) {\n  _inherits(_class, _mofron$class$Event);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize common event\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: event config\n   * @short listener,type\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Common");\n\n      _this.shortForm("listener", "type");\n      /* init config */\n\n\n      _this.confmng().add("type", {\n        type: "string"\n      });\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * event type\n   * \n   * @param (string) event type\n   * @return (string) event type\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "type",\n    value: function type(prm) {\n      try {\n        return this.confmng("type", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * event contents\n     * \n     * @param (mofron.class.Dom) event target dom\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(tgt_dom) {\n      try {\n        var evt_obj = this;\n        tgt_dom.getRawDom().addEventListener(this.type(), function (e) {\n          try {\n            evt_obj.execListener(e);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        }, false);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Event);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-common/index.js?')},"./node_modules/mofron-event-link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron-event-link/index.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-link/index.js\n * @brief enable link to target component\n * ## event function parameter\n *  - component: event target component object\n *  - event: "click" event object by addEventListener\n *  - mixed: user specified parameter\n * @license MIT\n */\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Click) {\n  _inherits(_class, _Click);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize event\n   * \n   * @param (mixed) url parameter\n   *                key-value: event config\n   * @param (boolean) newtab parameter\n   * @short url,newtab\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Link");\n\n      _this.shortForm("url", "newtab");\n\n      _this.confmng().add("url", {\n        type: "string",\n        init: "./"\n      });\n\n      _this.confmng().add("newtab", {\n        type: "boolean",\n        init: false\n      });\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * event contents\n   * set url jump event to click handler\n   * \n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt_dom) {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "contents", this).call(this, tgt_dom);\n\n        var link = this;\n        this.listener(function () {\n          try {\n            if (true === link.newtab()) {\n              window.open(link.url(), \'_blank\');\n            } else {\n              window.location.href = link.url();\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        }, this);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * jump url\n     *\n     * @param (string) jump url (default is \'./\')\n     * @type parameter\n     */\n\n  }, {\n    key: "url",\n    value: function url(prm) {\n      try {\n        return this.confmng("url", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * newtab flag\n     * \n     * @param (boolean) true: jump to url by newtab (default)\n     *                  false: jump to url by current tab\n     * @type parameter\n     */\n\n  }, {\n    key: "newtab",\n    value: function newtab(prm) {\n      try {\n        return this.confmng("newtab", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Click);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-link/index.js?')},"./node_modules/mofron-event-oncommon/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-event-oncommon/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-oncommon/index.js\n * @brief on-event common module for mofron\n * ## event function parameter\n *  - component: event target component object\n *  - object: event object (depend on \'ename\' parameter)\n *  - mixed: user specified parameter\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Event) {\n  _inherits(_class, _mofron$class$Event);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize event\n   * \n   * @param mixed: listener config parameter\n   *        key-value: event config list\n   * @param string: ename config parameter\n   * @short listener,ename\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'OnCommon\');\n\n      _this.shortForm("listener", "ename");\n      /* init config */\n\n\n      _this.confmng().add("ename", {\n        type: "string"\n      });\n      /* add config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * event name setter/getter\n   * \n   * @param (string) event name\n   *                 undefined: call as getter\n   * @return (string) event name\n   * @type parameter\n   */\n\n\n  _createClass(_class, [{\n    key: "ename",\n    value: function ename(prm) {\n      try {\n        return this.confmng("ename", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * event contents\n     * \n     * @param (mofron.class.Dom) event target dom\n     * @type private\n     */\n\n  }, {\n    key: "contents",\n    value: function contents(tgt_dom) {\n      try {\n        var ename = this.ename();\n\n        if (null === ename || undefined === tgt_dom.getRawDom()[ename]) {\n          throw new Error(\'invalid event name : \' + ename);\n        }\n\n        var evt_obj = this;\n        var evt_buff = tgt_dom.getRawDom()[ename];\n\n        tgt_dom.getRawDom()[ename] = function (ev) {\n          try {\n            if ("function" === typeof evt_buff) {\n              evt_buff(ev);\n            }\n\n            evt_obj.execListener(ev);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Event);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-oncommon/index.js?')},"./node_modules/mofron-event-tap/index.js":
/*!************************************************!*\
  !*** ./node_modules/mofron-event-tap/index.js ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-tap/index.js\n * @brief tap event for mofron\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Event) {\n  _inherits(_class, _mofron$class$Event);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize event\n   * \n   * @param (mixed) short-form parameter\n   *                key-value: event config\n   * @type private\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Tap");\n      /* init config */\n\n\n      _this.confmng().add("taponly", {\n        type: "boolean"\n      });\n\n      var dev = comutl.accdev();\n\n      if (\'mobile\' === dev || \'tablet\' === dev) {\n        _this.confmng("taponly", true);\n      } else {\n        _this.confmng("taponly", false);\n      }\n      /* set config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * event contents\n   * \n   * @param (mofron.class.dom) target dom object\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(dom) {\n      try {\n        var evt_obj = this;\n\n        var touch = function touch(e) {\n          try {\n            if (true === evt_obj.taponly()) {\n              e.preventDefault();\n            }\n\n            var tlist = e.changedTouches;\n\n            for (var tidx = 0; tidx < tlist.length; tidx++) {\n              if (dom.id() === tlist[tidx].target.id) {\n                evt_obj.execListener(e);\n                break;\n              }\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        document.addEventListener("touchstart", touch, {\n          passive: false\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * tap only flag\n     * \n     * @param (boolean) true: ignore click,mouse event\n     *                  false: nothing to do\n     * @return (boolean) flag status\n     * @type parameter\n     */\n\n  }, {\n    key: "taponly",\n    value: function taponly(prm) {\n      try {\n        return this.confmng("taponly", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Event);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-tap/index.js?')},"./node_modules/mofron-event-visiclick/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mofron-event-visiclick/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-event-visiclick/index.js\n * @brief visible switch click event for mofron\n * @license MIT\n */\nvar Click = __webpack_require__(/*! mofron-event-click */ "./node_modules/mofron-event-click/index.js");\n\nmodule.exports = /*#__PURE__*/function (_Click) {\n  _inherits(_class, _Click);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initilize event\n   *\n   * @param (mixed) dict: event option\n   *                string: visible mode\n   * @param (Component) target component\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'VisiClick\');\n\n      _this.shortForm(\'mode\', \'tgtComp\');\n      /* init config */\n\n\n      _this.confmng().add("callback", {\n        type: "function"\n      });\n\n      _this.confmng().add("tgtComp", {\n        type: "Component"\n      });\n\n      _this.confmng().add("mode", {\n        type: "string",\n        init: "switch"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * add click event to target component.\n   *\n   * @param (component) event target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(tgt_dom) {\n      var _this2 = this;\n\n      try {\n        _get(_getPrototypeOf(_class.prototype), "contents", this).call(this, tgt_dom);\n\n        this.listener(function (tgt, ev, vs) {\n          try {\n            if (\'enable\' === vs.mode()) {\n              vs.tgtComp().visible(true, _this2.callback());\n            } else if (\'disable\' === vs.mode()) {\n              vs.tgtComp().visible(false, _this2.callback());\n            } else if (\'destroy\' === vs.mode()) {\n              vs.tgtComp().destroy(_this2.tgtParam());\n            } else if (\'switch\' === vs.mode()) {\n              vs.tgtComp().visible(!vs.tgtComp().visible(), _this2.callback());\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        }, this);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * target component setter/getter\n     *\n     * @param (mixed) Component: set visible target component\n     *                undefined: call as getter\n     * @return (Component) visible target component\n     * @type parameter\n     */\n\n  }, {\n    key: "tgtComp",\n    value: function tgtComp(prm) {\n      try {\n        var ret = this.confmng("tgtComp", prm);\n        return null === ret ? this.component() : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * callback function for switch\n     * \n     * @param (function) callback function\n     *                   undefined: call as getter\n     * @return (function) callback function\n     * @type parameter\n     */\n\n  }, {\n    key: "callback",\n    value: function callback(prm) {\n      try {\n        var ret = this.confmng("callback", prm);\n        return null === ret ? undefined : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * visible mode setter/getter\n     *\n     * @param (string) visible mode (\'enable\', \'disable\', \'switch\')\n     *                 undefined: call as getter\n     * @return (string) visible mode\n     * @type parameter\n     */\n\n  }, {\n    key: "mode",\n    value: function mode(prm) {\n      try {\n        return this.confmng("mode", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Click);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-event-visiclick/index.js?')},"./node_modules/mofron-layout-grid/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron-layout-grid/index.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-layout-grid/index.js\n * @brief grid layout for mofron\n *        it makes component size to a specified size, and positions by horizontal.\n *        when it positioned at the horizontal end, it turns back on the left side and positions under its.\n * @attention please specify either the ratio parameter or the width parameter\n *            it gives priority to ratio parameter if users specified both\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Layout) {\n  _inherits(_class, _mofron$class$Layout);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize layout\n   * \n   * @param (mixed) ratio parameter\n   *                key-value: layout config\n   * @short ratio\n   * @type private\n   */\n  function _class(p1) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Grid");\n\n      _this.shortForm("ratio");\n      /* init config */\n\n\n      _this.confmng().add("ratio", {\n        type: "array",\n        init: [25, 25, 25, 25]\n      });\n\n      _this.confmng().add("width", {\n        type: "array"\n      });\n\n      _this.confmng().add("height", {\n        type: "size"\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * layout contents\n   * \n   * @param (number) child index\n   * @param (component) layout target component\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(idx, tgt) {\n      try {\n        var wid = this.width();\n\n        if (0 === idx) {\n          this.component().style({\n            "display": "flex",\n            "flex-wrap": "wrap"\n          });\n\n          if (null !== wid) {\n            var cmp_wid = null;\n\n            for (var widx in wid) {\n              cmp_wid = comutl.sizesum(cmp_wid, wid[widx]);\n            }\n\n            this.component().width(cmp_wid);\n          }\n        }\n        /* set width */\n\n\n        if (null !== this.width()) {\n          tgt.width(this.width()[idx % this.width().length]);\n        } else {\n          tgt.width(this.ratio()[idx % this.ratio().length] + \'%\');\n        }\n        /* set height */\n\n\n        if (null !== this.height()) {\n          tgt.height(this.height());\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * units width ratio of grid\n     * \n     * @param (array) units width ratio [number,number,..]\n     * @return (array) units width ratio\n     * @attention parameter sum should be 100\n     * @type parameter\n     */\n\n  }, {\n    key: "ratio",\n    value: function ratio(prm) {\n      try {\n        var ret = this.confmng("ratio", prm);\n\n        if (undefined !== prm) {\n          for (var pidx in prm) {\n            if ("number" !== typeof prm[pidx]) {\n              throw new Error("invalid parameter");\n            }\n          }\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * width size for grid target\n     * \n     * @param (array) width size for grid target [string,string,..]\n     * @return (array) width size for grid target\n     * @type parameter\n     */\n\n  }, {\n    key: "width",\n    value: function width(prm) {\n      try {\n        var ret = this.confmng("size", prm);\n\n        if (undefined !== prm) {\n          for (var pidx in prm) {\n            comutl.getsize(prm[pidx]);\n          }\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * height size for grid target\n     *\n     * @param (string (size)) height size for grid target\n     * @return (string (size)) height size for grid target\n     * @type parameter\n     */\n\n  }, {\n    key: "height",\n    value: function height(prm) {\n      try {\n        return this.confmng("height", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Layout);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-layout-grid/index.js?')},"./node_modules/mofron-layout-horizon/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron-layout-horizon/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-layout-horizon/index.js\n * @brief horizon layout for mofron\n *        target component of children is positioned horizontally.\n * @license MIT\n */\nmodule.exports = /*#__PURE__*/function (_mofron$class$Layout) {\n  _inherits(_class, _mofron$class$Layout);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize layout\n   * \n   * @type private\n   */\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Horizon\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * set horizon style\n   *\n   * @type private\n   */\n\n\n  _createClass(_class, [{\n    key: "execute",\n    value: function execute() {\n      try {\n        this.component().style(_defineProperty({\n          \'display\': \'-webkit-flex\'\n        }, "display", \'flex\'));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Layout);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-layout-horizon/index.js?')},"./node_modules/mofron-layout-relative/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mofron-layout-relative/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file mofron-layout-relative/index.js\n * @brief relative layout of mofron\n * @feature components are placed offset by \'relative\' style value\n * @license MIT\n */\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Layout) {\n  _inherits(_class, _mofron$class$Layout);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize layout\n   *\n   * @param (mixed) type config parameter\n   *                key-value: layout config list\n   * @param (string(size)) value config parameter\n   * @short type,value\n   * @type private\n   */\n  function _class(p1, p2) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Relative");\n\n      _this.shortForm("type", "value");\n      /* init config */\n\n\n      _this.confmng().add("type", {\n        type: "string",\n        select: ["top", "right", "bottom", "left"],\n        init: "top"\n      });\n\n      _this.confmng().add("value", {\n        type: "size",\n        init: "0rem"\n      });\n\n      _this.confmng().add("multiple", {\n        type: "boolean",\n        init: true\n      });\n      /* set config */\n\n\n      if (0 < arguments.length) {\n        _this.config(p1, p2);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * layout contents\n   * \n   * @param (number) component index\n   * @param (component) target component\n   * @type private \n   */\n\n\n  _createClass(_class, [{\n    key: "contents",\n    value: function contents(idx, tgt) {\n      try {\n        var setmgn = {};\n        setmgn[\'position\'] = \'relative\';\n        var val = comutl.getsize(this.value());\n\n        if (true === this.multiple()) {\n          var ival = comutl.flo2int(val.value());\n\n          if (0 === ival[1]) {\n            setmgn[this.type()] = ival[0] * (idx + 1) + val.type();\n          } else {\n            setmgn[this.type()] = ival[0] * (idx + 1) / ival[1] + val.type();\n          }\n        } else {\n          setmgn[this.type()] = this.value();\n        }\n\n        tgt.rootDom()[0].style(setmgn); //cmputl.rstyle(this.component(), setmgn);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * direction type\n     * \n     * @param (string) direction type ["top"/"right"/"bottom"/"left"]\n     * @return (string) direction type\n     * @type parameter\n     */\n\n  }, {\n    key: "type",\n    value: function type(prm) {\n      try {\n        return this.confmng("type", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * offset value\n     *\n     * @param (string(size)) offset value\n     * @return (string(size)) offset value\n     * @type parameter\n     */\n\n  }, {\n    key: "offset",\n    value: function offset(prm) {\n      try {\n        return this.value(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * same as \'offset\'\n     *\n     * @param (string) same as \'offset\' parameter\n     * @return (string) same as \'offset\' return\n     * @type parameter\n     */\n\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * multiples value flag\n     *\n     * @param (boolean) true: offset value is multiples values to the component index\n     *                  false: offset value not multiples\n     * @return (boolean) multiple flag\n     * @type parameter\n     */\n\n  }, {\n    key: "multiple",\n    value: function multiple(prm) {\n      try {\n        return this.confmng("multiple", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Layout);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron-layout-relative/index.js?')},"./node_modules/mofron/index.js":
/*!**************************************!*\
  !*** ./node_modules/mofron/index.js ***!
  \**************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('__webpack_require__(/*! expose-loader?mofron!./src/core/namesp.js */ "./node_modules/expose-loader/index.js?mofron!./node_modules/mofron/src/core/namesp.js-exposed");\n/* util functions */\n\n\n__webpack_require__(/*! ./src/util/common.js */ "./node_modules/mofron/src/util/common.js");\n\n__webpack_require__(/*! ./src/util/component.js */ "./node_modules/mofron/src/util/component.js");\n\n__webpack_require__(/*! ./src/util/effect.js */ "./node_modules/mofron/src/util/effect.js");\n\nmofron["class"].ConfArg = __webpack_require__(/*! ./src/type/ConfArg.js */ "./node_modules/mofron/src/type/ConfArg.js");\nmofron["class"].PullConf = __webpack_require__(/*! ./src/type/PullConf.js */ "./node_modules/mofron/src/type/PullConf.js");\nmofron["class"].EventFrame = __webpack_require__(/*! ./src/type/EventFrame.js */ "./node_modules/mofron/src/type/EventFrame.js");\nmofron["class"].Dom = __webpack_require__(/*! ./src/core/dom/Dom.js */ "./node_modules/mofron/src/core/dom/Dom.js");\nmofron["class"].Component = __webpack_require__(/*! ./src/tag/Component.js */ "./node_modules/mofron/src/tag/Component.js");\nmofron["class"].Layout = __webpack_require__(/*! ./src/tag/Layout.js */ "./node_modules/mofron/src/tag/Layout.js");\nmofron["class"].Effect = __webpack_require__(/*! ./src/tag/Effect.js */ "./node_modules/mofron/src/tag/Effect.js");\nmofron["class"].Event = __webpack_require__(/*! ./src/tag/Event.js */ "./node_modules/mofron/src/tag/Event.js");\nmofron["class"].Color = __webpack_require__(/*! ./src/type/Color.js */ "./node_modules/mofron/src/type/Color.js");\nmofron["class"].Size = __webpack_require__(/*! ./src/type/size/Size.js */ "./node_modules/mofron/src/type/size/Size.js");\nmofron["class"].Pixel = __webpack_require__(/*! ./src/type/size/Pixel.js */ "./node_modules/mofron/src/type/size/Pixel.js");\nmofron["class"].Rem = __webpack_require__(/*! ./src/type/size/Rem.js */ "./node_modules/mofron/src/type/size/Rem.js");\n\nvar Window = __webpack_require__(/*! ./src/core/Window.js */ "./node_modules/mofron/src/core/Window.js");\n\nmofron.window = new Window();\n\nvar Document = __webpack_require__(/*! ./src/core/Document.js */ "./node_modules/mofron/src/core/Document.js");\n\nmofron.document = new Document();\nmodule.exports = mofron;\n\n//# sourceURL=webpack:///./node_modules/mofron/index.js?')},"./node_modules/mofron/src/core/Base.js":
/*!**********************************************!*\
  !*** ./node_modules/mofron/src/core/Base.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @file  Base.js\n * @brief basement class of mofron\n * @author simpart\n */\nvar comutl = mofron.util.common;\n\nvar ConfManager = __webpack_require__(/*! ./ConfManager.js */ "./node_modules/mofron/src/core/ConfManager.js");\n\nvar genid = function genid() {\n  try {\n    var ret_id = \'_\' + new Date().getTime() + \'-\';\n    var loop = 0;\n    var val = 0;\n\n    for (loop = 0; loop < 8; loop++) {\n      val = Math.random() * 16 | 0;\n      ret_id += (loop == 12 ? 4 : loop == 16 ? val & 3 | 8 : val).toString(16);\n    }\n\n    return ret_id;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n\n    try {\n      this.m_confmng = new ConfManager();\n      this.confmng().add("name", {\n        list: true,\n        type: "string",\n        target: "private"\n      });\n      this.confmng().add("id", {\n        type: "string",\n        target: "private",\n        init: genid()\n      });\n      this.confmng().add("objkey", {\n        type: "string",\n        target: "private"\n      });\n      this.confmng().add("data", {\n        type: "key-value",\n        target: "private"\n      });\n      this.confmng().add("shortForm", {\n        type: "array",\n        target: "private",\n        init: []\n      });\n      this.name("Base");\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n\n  _createClass(_class, [{\n    key: "confmng",\n    value: function confmng(key, val, val2) {\n      try {\n        if (undefined === key) {\n          return this.m_confmng;\n        }\n\n        return this.m_confmng.conf(key, val, val2);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * component name setter / getter\n     *\n     * @param (string) component name\n     * @return (string) component name\n     * @note parameter syntax\n     */\n\n  }, {\n    key: "name",\n    value: function name(prm) {\n      try {\n        var ret = this.confmng("name", prm);\n        return undefined !== ret ? ret[ret.length - 1] : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "id",\n    value: function id() {\n      try {\n        return this.confmng().get("id");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "objkey",\n    value: function objkey(key) {\n      try {\n        if (undefined !== key) {\n          mofron.objkey[key] = this;\n        }\n\n        return this.confmng("objkey", key);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "data",\n    value: function data(key, val) {\n      try {\n        if ("string" !== typeof key) {\n          throw new Error("invalid parameter");\n        }\n\n        var dat = this.confmng().get("data");\n\n        if (undefined === val) {\n          /* getter */\n          return undefined === dat[key] ? null : dat[key];\n        }\n        /* setter */\n\n\n        dat[key] = val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "shortForm",\n    value: function shortForm() {\n      try {\n        if (0 === arguments.length) {\n          return this.confmng().get("shortForm");\n        }\n\n        var val = [];\n\n        for (var aidx in arguments) {\n          val.push(arguments[aidx]);\n        }\n\n        this.confmng("shortForm", val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /*** config method ***/\n\n  }, {\n    key: "config",\n    value: function config() {\n      try {\n        /* get argument */\n        if (0 === arguments.length) {\n          /* getter */\n          return this.confmng().get();\n        }\n\n        var arg = new mofron["class"].ConfArg();\n        arg.param(arguments);\n        /* setter */\n\n        if (1 < arg.param().length || !("object" === _typeof(arguments[0]) && false === Array.isArray(arguments[0]) && false === comutl.isinc(arguments[0], "Base"))) {\n          /* short form */\n          arg.exec(this, this.shortForm());\n        } else {\n          /* config */\n          for (var cf_idx in arguments[0]) {\n            if ("function" !== typeof this[cf_idx]) {\n              console.warn("invalid function: " + cf_idx);\n              continue;\n            }\n\n            if (true !== comutl.isinc(arguments[0][cf_idx], "ConfArg")) {\n              this[cf_idx](arguments[0][cf_idx]);\n            } else {\n              arguments[0][cf_idx].exec(this, cf_idx);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}();\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/Base.js?')},"./node_modules/mofron/src/core/ConfManager.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron/src/core/ConfManager.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @file ConfManager.js\n * @brief config manager for mofron modules. it suply accessor functions to object.\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n\n    try {\n      this.m_conf = {};\n      this.m_opt = {};\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n\n  _createClass(_class, [{\n    key: "conf",\n    value: function conf(key, val, val2) {\n      try {\n        if ("string" !== typeof key) {\n          throw new Error("invalid parameter");\n        }\n\n        return undefined === val ? this.get(key) : this.set(key, val, val2);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "add",\n    value: function add(key, opt) {\n      try {\n        if ("object" !== _typeof(opt) || true === Array.isArray(opt) || true === comutl.isinc(opt, "Base")) {\n          throw new Error("invalid parameter");\n        }\n\n        this.m_opt[key] = opt;\n\n        if ("key-value" === opt.type) {\n          this.m_conf[key] = {};\n          return;\n        } else if (true === opt.list) {\n          this.m_conf[key] = [];\n          return;\n        }\n\n        if (undefined !== opt.init) {\n          this.set(key, opt.init);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "get",\n    value: function get(key) {\n      try {\n        if (undefined === key) {\n          /* get all config */\n          return this.m_conf;\n        } else if ("string" !== typeof key) {\n          throw new Error("invalid parameter");\n        }\n        /* return config */\n\n\n        return undefined !== this.m_conf[key] ? this.m_conf[key] : null;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "chkValue",\n    value: function chkValue(key, val, val2) {\n      try {\n        var opt = this.m_opt[key];\n\n        if (undefined === opt || undefined === opt.type) {\n          throw new Error("could not find :" + key);\n        }\n\n        if ("color" === opt.type) {\n          var clr = comutl.getcolor(val);\n          return null === clr ? clr : clr.toString();\n        } else if ("size" === opt.type) {\n          comutl.getsize(val);\n          return val;\n        } else if ("event" === opt.type) {\n          if ("function" !== typeof val) {\n            throw new Error(\'invalid parameter\');\n          }\n\n          return [val, val2];\n        } else if ("array" === opt.type) {\n          if (false === Array.isArray(val)) {\n            throw new Error(\'invalid parameter\');\n          }\n        } else if ("key-value" === opt.type) {\n          if ("object" !== _typeof(val) || true === Array.isArray(val) || true === comutl.isinc(val, "Base")) {\n            throw new Error(\'invalid parameter\');\n          }\n        } else if (true === comutl.isinc(val, \'Base\')) {\n          if (false === comutl.isinc(val, opt.type)) {\n            throw new Error(\'invalid parameter\');\n          }\n        } else if (opt.type !== _typeof(val)) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        return val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "set",\n    value: function set(key, val, val2) {\n      try {\n        if ("string" !== typeof key || undefined === this.m_opt[key]) {\n          throw new Error("invalid parameter");\n        }\n\n        if (true === this.m_opt[key].list && true === Array.isArray(val) && "array" !== this.m_opt[key].type) {\n          for (var vidx in val) {\n            this.set(key, val[vidx]);\n          }\n\n          return;\n        }\n\n        var set_val = this.chkValue(key, val, val2);\n\n        if (true === this.m_opt[key].list) {\n          this.m_conf[key].push(set_val);\n        } else if ("key-value" === this.m_opt[key].type) {\n          for (var _vidx in val) {\n            this.m_conf[key][_vidx] = val[_vidx];\n          }\n        } else {\n          if (true === Array.isArray(this.m_opt[key].select)) {\n            var exs = false;\n\n            for (var sidx in this.m_opt[key].select) {\n              if (set_val === this.m_opt[key].select[sidx]) {\n                exs = true;\n                break;\n              }\n            }\n\n            if (false === exs) {\n              throw new Error("invald parameter");\n            }\n          }\n\n          this.m_conf[key] = set_val;\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "delete",\n    value: function _delete(key) {\n      try {\n        if ("string" !== typeof key) {\n          throw new Error("invalid parameter");\n        }\n\n        delete this.m_conf[key];\n        this.add(key, this.m_opt[key]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}();\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/ConfManager.js?')},"./node_modules/mofron/src/core/Document.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron/src/core/Document.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Window.js\n * @brief mofron window class\n */\nvar Base = __webpack_require__(/*! ./Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nvar comutl = __webpack_require__(/*! ./../util/common.js */ "./node_modules/mofron/src/util/common.js");\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Document\');\n\n      _this.confmng().add("event", {\n        type: "Event",\n        list: true\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "getRawDom",\n    value: function getRawDom() {\n      return document;\n    }\n  }, {\n    key: "event",\n    value: function event(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return this.confmng("event");\n        }\n        /* setter */\n\n\n        this.confmng("event", prm); //prm.component(this);\n\n        prm.contents(this);\n        prm.isInited(true);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/Document.js?')},"./node_modules/mofron/src/core/ModConf.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron/src/core/ModConf.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file ModConf.js\n * @brief module config interface for mofron component\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ./Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  function _class(po) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, po);\n\n      _this.name(\'ModConf\');\n      /* init config */\n\n\n      _this.confmng().add("component", {\n        type: "Component"\n      });\n\n      _this.confmng().add("tag", {\n        type: "string"\n      });\n\n      _this.confmng().add("isInited", {\n        type: "boolean",\n        init: false\n      });\n\n      _this.confmng().add("suspend", {\n        type: "boolean",\n        init: false\n      });\n\n      _this.confmng().add("innerTgt", {\n        type: "boolean",\n        init: true\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "component",\n    value: function component(prm) {\n      try {\n        return this.confmng("component", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "execute",\n    value: function execute() {\n      console.warn(\'not implement\');\n    }\n  }, {\n    key: "contents",\n    value: function contents(p1) {\n      console.warn(\'not implement\');\n    }\n  }, {\n    key: "tag",\n    value: function tag(prm) {\n      try {\n        return this.confmng("tag", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isInited",\n    value: function isInited(prm) {\n      try {\n        return this.confmng("isInited", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "suspend",\n    value: function suspend(prm) {\n      try {\n        return this.confmng("suspend", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "innerTgt",\n    value: function innerTgt(prm) {\n      try {\n        return this.confmng("innerTgt", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/ModConf.js?')},"./node_modules/mofron/src/core/Window.js":
/*!************************************************!*\
  !*** ./node_modules/mofron/src/core/Window.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Window.js\n * @brief mofron window class\n */\n//const Base   = require("./Base.js");\n//const Component = require("../tag/Component.js");\nvar comutl = __webpack_require__(/*! ./../util/common.js */ "./node_modules/mofron/src/util/common.js");\n\nmodule.exports = /*#__PURE__*/function (_mofron$class$Compone) {\n  _inherits(_class, _mofron$class$Compone);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Window\');\n\n      _this.confmng().add("landscapeEvent", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("portraitEvent", {\n        type: "event",\n        list: true\n      }); //this.confmng().add("event", { type: "Event", list: true });\n\n\n      _this.initOrientation();\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "isPortrait",\n    value: function isPortrait() {\n      try {\n        return window.innerHeight > window.innerWidth ? true : false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isLandscape",\n    value: function isLandscape() {\n      try {\n        return window.innerHeight < window.innerWidth ? true : false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "resizeEvent",\n    value: function resizeEvent(func, prm, tlag) {\n      try {\n        var que_buf = null;\n        var param = prm;\n        var time_lag = undefined === tlag ? 200 : tlag;\n\n        if (\'function\' !== typeof func || \'number\' !== typeof time_lag) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        window.addEventListener(\'resize\', function () {\n          try {\n            clearTimeout(que_buf);\n            que_buf = setTimeout(func, time_lag, param);\n          } catch (e) {\n            console.error(e.stack);\n            throw new Error();\n          }\n        }, false);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "initOrientation",\n    value: function initOrientation() {\n      try {\n        if (undefined !== screen.orientation && null === screen.orientation.onchange) {\n          screen.orientation.onchange = this.orientationHandler;\n        } else if (null === screen.onmozorientationchange) {\n          screen.onmozorientationchange = this.orientationHandler;\n        } else if (null === screen.onmsorientationchange) {\n          screen.onmsorientationchange = this.orientationHandler;\n        } else {\n          window.addEventListener("orientationchange", this.orientationHandler);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "orientationHandler",\n    value: function orientationHandler(evt) {\n      try {\n        var ef = null;\n\n        if ("landscape-primary" === screen.mozOrientation || "landscape-secondary" === screen.mozOrientation || "landscape-primary" === screen.orientation.type || "landscape-secondary" === screen.orientation.type) {\n          /* landscape event */\n          if ("function" === typeof this["landscapeEvent"]) {\n            ef = this.landscapeEvent();\n          }\n        } else if ("portrait-primary" === screen.mozOrientation || "portrait-secondary" === screen.mozOrientation || "portrait-primary" === screen.orientation.type || "portrait-secondary" === screen.orientation.type) {\n          /* vertical event */\n          if ("function" === typeof this["portraitEvent"]) {\n            ef = this.portraitEvent();\n          }\n        } else {\n          if (window.innerHeight < window.innerWidth) {\n            /* landscape event */\n            if ("function" === typeof this["landscapeEvent"]) {\n              ef = this.landscapeEvent();\n            }\n          } else {\n            /* portrait event */\n            if ("function" === typeof this["portraitEvent"]) {\n              ef = this.portraitEvent();\n            }\n          }\n        }\n\n        for (var eidx in ef) {\n          ef[eidx].exec(this, evt);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "landscapeEvent",\n    value: function landscapeEvent(fnc, prm) {\n      try {\n        return this.confmng("landscapeEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "portraitEvent",\n    value: function portraitEvent(fnc, prm) {\n      try {\n        return this.confmng("portraitEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "eventDom",\n    value: function eventDom() {\n      return this;\n    }\n  }, {\n    key: "getRawDom",\n    value: function getRawDom() {\n      return window;\n    }\n  }, {\n    key: "event",\n    value: function event(prm) {\n      try {\n        var ret = _get(_getPrototypeOf(_class.prototype), "event", this).call(this, prm);\n\n        if (undefined === prm) {\n          return ret;\n        }\n\n        if (true === comutl.isinc(prm, "Event")) {\n          prm.execute();\n        } else if (true === Array.isArray(prm)) {\n          for (var pidx in prm) {\n            prm[pidx].execute();\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(mofron["class"].Component);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/Window.js?')},"./node_modules/mofron/src/core/dom/Attrs.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/Attrs.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Attrs.js\n * @author simpart\n */\nvar DomConf = __webpack_require__(/*! ./DomConf.js */ "./node_modules/mofron/src/core/dom/DomConf.js");\n\nmodule.exports = /*#__PURE__*/function (_DomConf) {\n  _inherits(_class, _DomConf);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   * @param tgt : (object) target adom object\n   */\n  function _class(tgt) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, tgt);\n\n      _this.name(\'Attrs\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * set style\n   *\n   * @param key : (string) style key\n   * @param val : (string) style value\n   */\n\n\n  _createClass(_class, [{\n    key: "domSet",\n    value: function domSet(key, val) {\n      try {\n        this.dom().getRawDom().setAttribute(key, val);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domRem",\n    value: function domRem(key) {\n      try {\n        this.dom().getRawDom().removeAttribute(key);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get attribute value from rawdom\n     *\n     * @param key : (string) style key\n     * @return (object) style contents\n     * @return (string) style contents value\n     */\n\n  }, {\n    key: "domGet",\n    value: function domGet(key) {\n      try {\n        return this.dom().getRawDom().getAttribute(key);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        var ret = \'\';\n        var conts = this.get();\n\n        for (var cidx in conts) {\n          ret += null === conts[cidx] ? cidx : cidx + \'="\' + conts[cidx] + \'"\';\n          ret += " ";\n        }\n\n        return "" === ret ? "" : ret.substring(0, ret.length - 1);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(DomConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/Attrs.js?')},"./node_modules/mofron/src/core/dom/Class.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/Class.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Class.js\n * @author simpart\n */\nvar DomConf = __webpack_require__(/*! ./DomConf.js */ "./node_modules/mofron/src/core/dom/DomConf.js");\n\nmodule.exports = /*#__PURE__*/function (_DomConf) {\n  _inherits(_class, _DomConf);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   * @param tgt : (object) target adom object\n   */\n  function _class(tgt) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, tgt);\n\n      _this.name(\'Class\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "set",\n    value: function set(prm, opt) {\n      try {\n        if (!("string" === typeof prm || true === Array.isArray(prm))) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        var set_prm = {};\n\n        if ("string" === typeof prm) {\n          set_prm[prm] = "";\n        } else {\n          for (var pidx in prm) {\n            if ("string" !== typeof prm[pidx]) {\n              throw new Error("invalid parameter");\n            }\n\n            set_prm[prm[pidx]] = "";\n          }\n        }\n\n        _get(_getPrototypeOf(_class.prototype), "set", this).call(this, set_prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "get",\n    value: function get() {\n      try {\n        var ret = [];\n\n        var cls = _get(_getPrototypeOf(_class.prototype), "get", this).call(this);\n\n        for (var cidx in cls) {\n          ret.push(cidx);\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set class name to rowdom\n     *\n     * @param key : (string) style key\n     * @param val : (string) style value\n     */\n\n  }, {\n    key: "domSet",\n    value: function domSet(key, val) {\n      try {\n        this.dom().getRawDom().classList.add(key);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domRem",\n    value: function domRem(key) {\n      try {\n        this.dom().getRawDom().classList.remove(key);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get class name from rawdom\n     *\n     * @return (object) style contents\n     * @return (string) style contents value\n     */\n\n  }, {\n    key: "domGet",\n    value: function domGet() {\n      try {\n        var clnm = this.dom().getRawDom().className;\n\n        if (undefined === clnm || null === clnm || \'\' === clnm) {\n          return null;\n        }\n\n        return clnm.split(\' \');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        var ret = \'\';\n        var conts = this.get();\n\n        for (var idx in conts) {\n          ret += conts[idx] + " ";\n        }\n\n        return \'\' === ret ? \'\' : \'class="\' + ret.substring(0, ret.length - 1) + \'"\';\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(DomConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/Class.js?')},"./node_modules/mofron/src/core/dom/Dom.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/Dom.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Dom.js\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nvar Class = __webpack_require__(/*! ./Class.js */ "./node_modules/mofron/src/core/dom/Class.js");\n\nvar Style = __webpack_require__(/*! ./Style.js */ "./node_modules/mofron/src/core/dom/Style.js");\n\nvar Attrs = __webpack_require__(/*! ./Attrs.js */ "./node_modules/mofron/src/core/dom/Attrs.js");\n\nvar Props = __webpack_require__(/*! ./Props.js */ "./node_modules/mofron/src/core/dom/Props.js");\n\nvar Tree = __webpack_require__(/*! ../tree/Tree.js */ "./node_modules/mofron/src/core/tree/Tree.js");\n\nvar IDX_CLASS = 0;\nvar IDX_STYLE = 1;\nvar IDX_ATTRS = 2;\nvar IDX_PROPS = 3;\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   */\n  function _class(tc, cmp) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Dom\');\n\n      _this.confmng().add("tag", {\n        type: "string"\n      });\n\n      _this.confmng().add("component", {\n        type: "Component"\n      });\n\n      _this.confmng().add("text", {\n        type: "string",\n        init: ""\n      });\n\n      _this.confmng().add("dummy", {\n        type: "boolean",\n        init: false\n      });\n\n      _this.m_tree = new Tree(_assertThisInitialized(_this));\n      _this.m_rawdom = null;\n      _this.m_conf = [new Class(_assertThisInitialized(_this)), new Style(_assertThisInitialized(_this)), new Attrs(_assertThisInitialized(_this)), new Props(_assertThisInitialized(_this))];\n\n      if ("string" === typeof tc) {\n        _this.tag(tc);\n\n        _this.component(cmp);\n      } else if (undefined !== tc) {\n        _this.config(tc);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * tag name setter / getter\n   *\n   * @param tg : (string) tag name (option)\n   * @return (string) tag name\n   */\n\n\n  _createClass(_class, [{\n    key: "tag",\n    value: function tag(tg) {\n      try {\n        return this.confmng("tag", tg);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * component getter / setter\n     * \n     * @param cmp (object) mofron.Component\n     * @return (object) mofron.Component\n     */\n\n  }, {\n    key: "component",\n    value: function component(cmp) {\n      try {\n        return this.confmng("component", cmp);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "getTree",\n    value: function getTree() {\n      try {\n        return this.m_tree;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "child",\n    value: function child(chd, idx) {\n      try {\n        if (undefined === chd) {\n          /* getter */\n          return this.m_tree.getChild();\n        }\n        /* setter */\n\n\n        this.m_tree.addChild(chd, idx);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "parent",\n    value: function parent(prm) {\n      try {\n        return this.m_tree.parent(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "conf",\n    value: function conf(kv, opt, idx) {\n      try {\n        var cnf = this.m_conf[idx];\n\n        if (undefined === kv) {\n          /* get style object */\n          return cnf;\n        } else if (\'string\' === typeof kv) {\n          /* get style value of the key */\n          return cnf.get(kv);\n        }\n        /* setter */\n\n\n        cnf.set(kv, opt);\n        this.value(null);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * style setter / getter\n     *\n     * @param kv : (object) key-value object\n     * @param opt: (object) option\n     * @return (string) : value of style\n     * @return (object) : style object\n     */\n\n  }, {\n    key: "style",\n    value: function style(kv, opt) {\n      try {\n        if (undefined !== opt && true === opt.bpref) {\n          for (var key in kv) {\n            kv["webkit-" + key] = kv[key];\n            kv["-moz-" + key] = kv[key];\n            kv["-o-" + key] = kv[key];\n            kv["-ms-" + key] = kv[key];\n          }\n        }\n\n        return this.conf(kv, opt, IDX_STYLE);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * tag attribute setter / getter\n     *\n     * @param kv  : (object/string) key-value object / key of attribute\n     * @param val : (object) value of attribute\n     * @return\n     */\n\n  }, {\n    key: "attrs",\n    value: function attrs(kv, opt) {\n      try {\n        return this.conf(kv, opt, IDX_ATTRS);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dom property setter / getter\n     * \n     * @param kv  : (object/string) key-value object / key of\n     * @param val : (object)  value of property\n     */\n\n  }, {\n    key: "props",\n    value: function props(kv, opt) {\n      try {\n        return this.conf(kv, opt, IDX_PROPS);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * tag class name setter / getter\n     * \n     * @param name : (string) class name\n     */\n\n  }, {\n    key: "class",\n    value: function _class(prm, opt) {\n      try {\n        if (undefined === prm) {\n          return this.conf("class", opt, IDX_CLASS);\n        }\n\n        this.conf("string" === typeof prm ? [prm] : prm, opt, IDX_CLASS);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * tag contents text setter / getter\n     * \n     * @param cnt : (string) tag contents (option)\n     * @return (string) tag contents\n     */\n\n  }, {\n    key: "text",\n    value: function text(prm) {\n      try {\n        var ret = this.confmng("text", prm);\n\n        if (undefined !== prm && true === this.isPushed()) {\n          this.getRawDom().innerHTML = prm;\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dom string getter\n     *\n     * @return (string) dom string\n     */\n\n  }, {\n    key: "value",\n    value: function value() {\n      try {\n        var chd = this.child();\n        var chd_ret = \'\';\n\n        for (var cidx in chd) {\n          chd_ret += chd[cidx].value();\n        }\n\n        if (true === this.dummy()) {\n          return chd_ret;\n        }\n\n        var ret = \'<\' + this.tag() + \' \';\n        /* set id attribute */\n\n        ret += \'id="\' + this.id() + \'" \';\n        /* set dom config */\n\n        var cnf = this.m_conf;\n        var cnf_val = null;\n\n        for (var idx in cnf) {\n          var _cnf_val = cnf[idx].toString();\n\n          if ("" !== _cnf_val) {\n            ret += _cnf_val + " ";\n          }\n        }\n\n        ret += \'>\';\n        /* set tag contents */\n\n        ret += this.text();\n        /* check single */\n\n        if (true === is_single(this.tag())) {\n          return ret;\n        }\n        /* set child value */\n\n\n        ret += chd_ret;\n        return ret + \'</\' + this.tag() + \'>\';\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * draw dom to target dom\n     * \n     * @param (key-value) push option\n     *     target   : push target object\n     *     child    : child flag\n     *     position : position of insertAdjacentHTML parameter\n     */\n\n  }, {\n    key: "push",\n    value: function push(opt) {\n      try {\n        if (true === mofron.ssr) {\n          return;\n        } else if (undefined === opt) {\n          throw new Error("invalid parameter");\n        }\n\n        if (true !== opt.child) {\n          opt.target.insertAdjacentHTML(undefined === opt.position ? \'beforeend\' : opt.position, this.value());\n        }\n\n        var props = this.props().get();\n\n        if (true === this.dummy()) {\n          this.m_rawdom = null !== this.parent() ? this.parent().getRawDom() : null;\n        } else {\n          if (null !== this.parent()) {\n            this.m_rawdom = this.parent().getRawDom().querySelector("#" + this.id());\n          } else {\n            this.m_rawdom = document.body.querySelector("#" + this.id());\n          }\n        }\n\n        this.props(props); // set property\n\n        /* notify push to children */\n\n        var chd = this.child();\n\n        for (var cidx in chd) {\n          chd[cidx].push({\n            target: this.m_rawdom,\n            child: true\n          });\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get adom status\n     *\n     * @return (boolean) true : this adom had pushed\n     * @return (boolean) false : this adom had not pushed\n     */\n\n  }, {\n    key: "isPushed",\n    value: function isPushed() {\n      try {\n        return null === this.m_rawdom ? false : true;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get pushed dom object from blowser\n     *\n     * @return (object) raw dom object\n     */\n\n  }, {\n    key: "getRawDom",\n    value: function getRawDom() {\n      try {\n        if (false === this.isPushed()) {\n          throw new Error(\'this dom is not pushed yet\');\n        }\n\n        return this.m_rawdom;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      try {\n        /* remove this object from parent dom */\n        if (true === this.isPushed()) {\n          this.getRawDom().remove();\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "dummy",\n    value: function dummy(prm) {\n      try {\n        return this.confmng("dummy", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n\nvar is_single = function is_single(prm) {\n  try {\n    if ("br" === prm || "hr" === prm || "input" === prm || "img" === prm) {\n      return true;\n    }\n\n    return false;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/Dom.js?')},"./node_modules/mofron/src/core/dom/DomConf.js":
/*!*****************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/DomConf.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file DomConf.js\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  function _class(dom) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("DomConf");\n\n      _this.confmng().add("lock", {\n        type: "key-value"\n      });\n\n      _this.confmng().add("dom", {\n        type: "Dom"\n      });\n\n      _this.confmng().add("listener", {\n        type: "array",\n        list: true\n      });\n\n      _this.dom(dom);\n\n      _this.m_conts = {};\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "dom",\n    value: function dom(prm) {\n      try {\n        return this.confmng("dom", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "lock",\n    value: function lock(key, val) {\n      try {\n        var lock = this.confmng().get("lock");\n\n        if (undefined === val) {\n          /* getter */\n          return undefined === lock[key] ? false : lock[key];\n        }\n        /* setter */\n\n\n        if ("boolean" !== typeof val) {\n          throw new Error("invalid parameter");\n        }\n\n        lock[key] = val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "chkval",\n    value: function chkval(kv) {\n      try {\n        if (!("object" === _typeof(kv) && false === Array.isArray(kv) && false === comutl.isinc(kv, "Base"))) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        for (var key in kv) {\n          if (null !== kv[key] && "object" === _typeof(kv[key])) {\n            throw new Error("invalid parameter");\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "set",\n    value: function set(kv, opt) {\n      try {\n        this.chkval(kv);\n        var p_opt = undefined === opt ? {} : opt;\n        var lis = [];\n\n        for (var key in kv) {\n          var old_kv = {};\n          var new_kv = {};\n          old_kv[key] = undefined === this.m_conts[key] ? null : this.m_conts[key];\n          new_kv[key] = kv[key];\n\n          if (null === kv[key]) {\n            /* delete config */\n            this.rem(key);\n            lis = this.listener(key);\n\n            for (var lidx in lis) {\n              lis[lidx][0](this.dom(), [new_kv[key], old_kv[key]], lis[lidx][1]);\n            }\n\n            if (true === p_opt.lock) {\n              this.lock(key, true);\n            }\n\n            continue;\n          }\n          /* setter */\n\n\n          if (true === p_opt.passive) {\n            if (null === this.get(key)) {\n              this.m_conts[key] = kv[key];\n            } else {\n              continue;\n            }\n          } else if (true === p_opt.forced) {\n            this.m_conts[key] = kv[key];\n            this.lock(key, false);\n          } else {\n            if (true === this.lock(key)) {\n              continue;\n            }\n\n            this.m_conts[key] = kv[key];\n          }\n\n          if (true === p_opt.lock) {\n            this.lock(key, true);\n          }\n\n          if (true === this.dom().isPushed()) {\n            /* target dom is already rendered */\n            this.domSet(key, kv[key]);\n          }\n\n          lis = this.listener(key);\n\n          for (var lidx2 in lis) {\n            lis[lidx2][0](this.dom(), [new_kv[key], old_kv[key]], lis[lidx2][1]);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "get",\n    value: function get(key) {\n      try {\n        if (false === this.dom().isPushed()) {\n          if (undefined === key) {\n            return this.m_conts;\n          }\n\n          return undefined === this.m_conts[key] ? null : this.m_conts[key];\n        } else {\n          /* target is already rendered */\n          return undefined == this.domGet(key) ? null : this.domGet(key);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "rem",\n    value: function rem(key) {\n      try {\n        if (undefined !== this.m_conts[key]) {\n          delete this.m_conts[key];\n        }\n\n        if (true === this.dom().isPushed()) {\n          /* target dom is already rendered */\n          this.domRem(key);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domRem",\n    value: function domRem(key) {\n      try {\n        console.warn(\'not implement\');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domSet",\n    value: function domSet(key, val) {\n      try {\n        console.warn(\'not implement\');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domGet",\n    value: function domGet(key) {\n      try {\n        console.warn(\'not implement\');\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "listener",\n    value: function listener(key, fnc, prm) {\n      try {\n        if (undefined === fnc) {\n          /* getter */\n          var lis = this.confmng("listener");\n\n          if (undefined === key) {\n            return lis;\n          }\n\n          var ret = [];\n\n          for (var lidx in lis) {\n            if (key === lis[lidx][0]) {\n              ret.push([lis[lidx][1], lis[lidx][2]]);\n            }\n          }\n\n          return ret;\n        }\n\n        if ("string" !== typeof key || "function" !== typeof fnc) {\n          throw new Error("invalid parameter");\n        }\n\n        this.confmng("listener", [key, fnc, prm]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/DomConf.js?')},"./node_modules/mofron/src/core/dom/Props.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/Props.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Props.js\n * @author simpart\n */\nvar DomConf = __webpack_require__(/*! ./DomConf.js */ "./node_modules/mofron/src/core/dom/DomConf.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_DomConf) {\n  _inherits(_class, _DomConf);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   * @param tgt : (object) target dom object\n   */\n  function _class(tgt) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, tgt);\n\n      _this.name(\'Prop\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "chkval",\n    value: function chkval(kv) {\n      try {\n        if (!("object" === _typeof(kv) && false === Array.isArray(kv) && false === comutl.isinc(kv, "Base"))) {\n          throw new Error(\'invalid parameter\');\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * set property\n     *\n     * @param key : (string) property key\n     * @param val : (string) property value\n     */\n\n  }, {\n    key: "domSet",\n    value: function domSet(key, val) {\n      try {\n        if (undefined === this.dom().getRawDom()[key]) {\n          throw new Error(key + \' is unknown property\');\n        }\n\n        this.dom().getRawDom()[key] = val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domRem",\n    value: function domRem(key) {\n      try {\n        if (undefined === this.dom().getRawDom()[key]) {\n          return;\n        }\n\n        delete this.dom().getRawDom()[key];\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get property value from rawdom\n     *\n     * @param key : (string) property key\n     * @return (string) property value\n     */\n\n  }, {\n    key: "domGet",\n    value: function domGet(key) {\n      try {\n        var ret = this.dom().getRawDom()[key];\n        return "" === ret ? undefined : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        return "";\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(DomConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/Props.js?')},"./node_modules/mofron/src/core/dom/Style.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/core/dom/Style.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Style.js\n * @author simpart\n */\nvar DomConf = __webpack_require__(/*! ./DomConf.js */ "./node_modules/mofron/src/core/dom/DomConf.js");\n\nmodule.exports = /*#__PURE__*/function (_DomConf) {\n  _inherits(_class, _DomConf);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   */\n  function _class(tgt) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, tgt);\n\n      _this.name(\'Style\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * set style\n   *\n   * @param key : (string) style key\n   * @param val : (string) style value\n   */\n\n\n  _createClass(_class, [{\n    key: "domSet",\n    value: function domSet(key, val) {\n      try {\n        this.dom().getRawDom().style[getcamel(key)] = val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get style value from rawdom\n     *\n     * @param key : (string) style key\n     * @return (object) style contents\n     * @return (string) style contents value\n     */\n\n  }, {\n    key: "domGet",\n    value: function domGet(key) {\n      try {\n        if (undefined === key) {\n          return this.dom().getRawDom().style;\n        }\n\n        var val = this.dom().getRawDom().style[getcamel(key)];\n        return undefined === val || "" === val ? null : val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "domRem",\n    value: function domRem(key) {\n      try {\n        this.dom().getRawDom().style[getcamel(key)] = "";\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        var ret = \'\';\n        var conts = this.get();\n\n        for (var cidx in conts) {\n          ret += cidx + \':\' + conts[cidx] + \';\';\n        }\n\n        return \'\' === ret ? \'\' : \'style="\' + ret + \'"\';\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(DomConf);\n\nvar getcamel = function getcamel(prm) {\n  try {\n    if (\'string\' !== typeof prm) {\n      throw new Error(\'invalid parameter\');\n    }\n\n    if (prm.length - 1 === prm.lastIndexOf(\'-\')) {\n      throw new Error(\'invalid parameter\');\n    }\n\n    var skip = false;\n\n    if (0 === prm.indexOf(\'-\')) {\n      skip = true;\n    }\n\n    var ret_val = prm;\n    var ret_buf = null;\n    var up_str = null;\n    var idx = null;\n\n    while (true) {\n      idx = ret_val.indexOf(\'-\');\n\n      if (-1 === idx) {\n        break;\n      }\n\n      up_str = ret_val.charAt(idx + 1).toUpperCase();\n      ret_buf = ret_val.substr(0, idx);\n\n      if (true === skip) {\n        skip = false;\n        ret_val = ret_buf + ret_val.substr(idx + 1);\n      } else {\n        ret_val = ret_buf + up_str + ret_val.substr(idx + 2);\n      }\n    }\n\n    return ret_val;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/dom/Style.js?')},"./node_modules/mofron/src/core/tree/CompTree.js":
/*!*******************************************************!*\
  !*** ./node_modules/mofron/src/core/tree/CompTree.js ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file CompTree.js\n * @brief tree manager for component\n * @license MIT\n */\nvar Tree = __webpack_require__(/*! ./Tree.js */ "./node_modules/mofron/src/core/tree/Tree.js");\n\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nmodule.exports = /*#__PURE__*/function (_Tree) {\n  _inherits(_class, _Tree);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_class, [{\n    key: "addChild",\n    value: function addChild(chd, idx) {\n      try {\n        if (true === Array.isArray(chd)) {\n          /* parameter check */\n          for (var cidx in chd) {\n            this.addChild(chd[cidx], idx);\n          }\n\n          return;\n        }\n        /* set parent-child relation in component layer */\n        //super.addChild(chd, idx);\n\n        /* set parent-child relation in dom layer */\n\n\n        var rdom = chd.rootDom();\n\n        if (undefined === idx) {\n          this.target().childDom().child(rdom);\n        } else {\n          var tgt_tree = this.target().childDom().getTree();\n          var t_idx = tgt_tree.getIndex(this.target().child()[idx].rootDom()[0]);\n          tgt_tree.addChild(rdom, t_idx);\n        }\n        /* set parent-child relation in component layer */\n\n\n        _get(_getPrototypeOf(_class.prototype), "addChild", this).call(this, chd, idx);\n        /* check render */\n\n\n        if (true === this.target().isExists()) {\n          var layout = comp.layout();\n\n          for (var lidx in layout) {\n            /* set layout */\n            lo[lo_idx].execute();\n          }\n          /* render child */\n\n\n          cmputl.render(chd);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "replace",\n    value: function replace(o_chd, n_chd) {\n      try {\n        if (this.target().childDom().id() === o_chd.childDom().id()) {\n          /* old child is dom target, replace dom target */\n          this.target().childDom(n_chd.childDom());\n        }\n        /* set parent-child relation in component layer */\n\n\n        this.getChild().splice(this.getIndex(o_chd), 0, n_chd);\n        n_chd.parent(this.target());\n        /* set parent-child relation in dom layer */\n\n        var tgt_tree = o_chd.rootDom()[0].parent().getTree();\n        var rep_idx = tgt_tree.getIndex(o_chd.rootDom()[0]);\n        var n_rdom = n_chd.rootDom();\n\n        for (var ridx in n_rdom) {\n          tgt_tree.getChild().splice(rep_idx + parseInt(ridx), 0, n_rdom[ridx]);\n          n_rdom[ridx].parent(this.target().childDom());\n        }\n\n        if (true === o_chd.isExists()) {\n          cmputl.render(n_chd);\n        }\n\n        o_chd.destroy();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "delChild",\n    value: function delChild(chd) {\n      try {\n        /* release relational in dom layer */\n        var rdom = chd.rootDom();\n\n        for (var ridx in rdom) {\n          if (null !== rdom[ridx].parent()) {\n            rdom[ridx].parent().getTree().delChild(rdom[ridx]);\n          }\n        }\n        /* delete child component */\n\n\n        _get(_getPrototypeOf(_class.prototype), "delChild", this).call(this, chd);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Tree);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/tree/CompTree.js?')},"./node_modules/mofron/src/core/tree/Tree.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/core/tree/Tree.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval('function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @file Tree.js\n * @brief basement tree manager\n * @license MIT\n */\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function () {\n  function _class(tgt, elm) {\n    _classCallCheck(this, _class);\n\n    try {\n      this.m_parent = null;\n      this.m_child = [];\n      this.elemName(tgt.name());\n      this.target(tgt);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n\n  _createClass(_class, [{\n    key: "elemName",\n    value: function elemName(prm) {\n      try {\n        if (undefined === prm) {\n          if (undefined === this.m_elemnm) {\n            throw new Error("could not find element name");\n          }\n\n          return this.m_elemnm;\n        }\n\n        if ("string" !== typeof prm) {\n          throw new Error("invalid parameter");\n        }\n\n        this.m_elemnm = prm;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "target",\n    value: function target(prm) {\n      try {\n        if (undefined === prm) {\n          if (undefined === this.m_target) {\n            throw new Error("could not find target");\n          }\n\n          return this.m_target;\n        }\n\n        if (false === comutl.isinc(prm, this.elemName())) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.m_target = prm;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "getChild",\n    value: function getChild() {\n      try {\n        return this.m_child;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "addChild",\n    value: function addChild(chd, idx) {\n      try {\n        /* parameter check */\n        if (true === Array.isArray(chd)) {\n          for (var cidx in chd) {\n            this.addChild(chd[cidx], undefined !== idx ? idx + parseInt(cidx) : undefined);\n          }\n\n          return;\n        }\n\n        if (false === comutl.isinc(chd, this.elemName())) {\n          throw new Error(\'invalid parameter\');\n        }\n        /* set parent-child relation */\n\n\n        chd.parent(this.target());\n        /* add child */\n\n        if (undefined === idx) {\n          this.getChild().push(chd);\n        } else {\n          this.getChild().splice(idx, 0, chd);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "delChild",\n    value: function delChild(chd) {\n      try {\n        var del_idx = this.getIndex(chd);\n        this.getChild().splice(del_idx, 1);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "parent",\n    value: function parent(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          return undefined === this.m_parent ? null : this.m_parent;\n        }\n\n        if (false === comutl.isinc(prm, this.elemName())) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.m_parent = prm;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "getIndex",\n    value: function getIndex(prm) {\n      try {\n        var chd = this.getChild();\n\n        for (var cidx in chd) {\n          if (chd[cidx].id() === prm.id()) {\n            return parseInt(cidx);\n          }\n        }\n\n        throw new Error("invalid parameter");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}();\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/core/tree/Tree.js?')},"./node_modules/mofron/src/tag/Component.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron/src/tag/Component.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file   Component.js\n * @brief  basement component class\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../core/Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nvar CompTree = __webpack_require__(/*! ../core/tree/CompTree.js */ "./node_modules/mofron/src/core/tree/CompTree.js");\n\nvar Dom = mofron["class"].Dom;\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\nvar effutl = __webpack_require__(/*! ../util/effect.js */ "./node_modules/mofron/src/util/effect.js");\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize property, dom\n   *\n   * @param (mixed) component proterty\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("Component");\n\n      _this.confmng().add("rootDom", {\n        type: "Dom",\n        list: true,\n        target: "private"\n      });\n\n      _this.confmng().add("childDom", {\n        type: "Dom",\n        target: "private"\n      });\n\n      _this.confmng().add("styleDom", {\n        type: "Dom",\n        target: "private"\n      });\n\n      _this.confmng().add("eventDom", {\n        type: "Dom",\n        target: "private"\n      });\n\n      _this.confmng().add("isConf", {\n        type: "boolean",\n        target: "private"\n      });\n\n      _this.confmng().add("layout", {\n        type: "ModConf",\n        list: true\n      });\n\n      _this.confmng().add("effect", {\n        type: "ModConf",\n        list: true\n      });\n\n      _this.confmng().add("event", {\n        type: "ModConf",\n        list: true\n      });\n\n      _this.confmng().add("style", {\n        type: "Style"\n      });\n\n      _this.confmng().add("theme", {\n        type: "key-value"\n      });\n\n      _this.confmng().add("innerComp", {\n        type: "key-value",\n        target: "private"\n      });\n      /* initialize member */\n\n\n      _this.m_tree = new CompTree(_assertThisInitialized(_this));\n      /*** set config ***/\n\n      _this.shortForm("child");\n      /* user config */\n\n\n      if (undefined !== prm) {\n        _this.config(prm);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /*** dom method ***/\n\n  /**\n   * dom setter / getter\n   * \n   * @return (object) dom object\n   */\n\n\n  _createClass(_class, [{\n    key: "rootDom",\n    value: function rootDom(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          if (0 === this.confmng().get("rootDom").length) {\n            this.initDomConts();\n          }\n\n          return this.confmng().get("rootDom");\n        }\n        /* setter */\n\n\n        this.confmng().set("rootDom", prm);\n\n        if (null === this.childDom()) {\n          this.childDom(this.rootDom()[0]);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * dom target setter / getter\n     * \n     * @param tgt : (object) dom object\n     * @return (object) dom object\n     */\n\n  }, {\n    key: "childDom",\n    value: function childDom(tgt) {\n      try {\n        var ret = this.confmng("childDom", tgt);\n\n        if (null === ret) {\n          if (0 < this.rootDom().length) {\n            this.confmng("childDom", this.rootDom()[0]);\n            return this.confmng("childDom");\n          } else {\n            throw new Error("could not find child dom");\n          }\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get style target dom\n     *\n     * @param tgt : (object) dom object\n     * @return (object) dom object\n     */\n\n  }, {\n    key: "styleDom",\n    value: function styleDom(tgt) {\n      try {\n        var ret = this.confmng("styleDom", tgt);\n        return null === ret ? this.childDom() : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get event target dom\n     *\n     * @param tgt : (object) dom object\n     * @return (object) dom object\n     */\n\n  }, {\n    key: "eventDom",\n    value: function eventDom(tgt) {\n      try {\n        var ret = this.confmng("eventDom", tgt);\n        return null === ret ? this.childDom() : ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "beforeRender",\n    value: function beforeRender() {\n      try {\n        cmputl.chdloop(this, "beforeRender");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "initDomConts",\n    value: function initDomConts(prm) {\n      try {\n        this.rootDom(new Dom(undefined === prm ? "div" : prm, this));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "afterRender",\n    value: function afterRender() {\n      try {\n        cmputl.chdloop(this, "afterRender");\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "getTree",\n    value: function getTree() {\n      try {\n        return this.m_tree;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /*** child method ***/\n\n    /**\n     * child component setter / getter\n     * \n     * @param chd : (object) child component\n     * @param chd : (object) child component array\n     * @return (array) : childlen object\n     */\n\n  }, {\n    key: "child",\n    value: function child(chd, idx) {\n      try {\n        this.rootDom();\n        var ct = true === cmputl.isinncmp(this) ? this.childDom().component().getTree() : this.getTree();\n\n        if (undefined === chd) {\n          /* getter */\n          return ct.getChild();\n        }\n        /* setter */\n\n\n        ct.addChild(chd, idx);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "parent",\n    value: function parent(prm) {\n      try {\n        return this.getTree().parent(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "innerComp",\n    value: function innerComp(key, val, defcmp) {\n      try {\n        var incmp = this.confmng().get("innerComp");\n\n        if (undefined === val) {\n          /* getter */\n          if (undefined === incmp[key]) {\n            this[key](new defcmp());\n          }\n\n          return incmp[key];\n        } else if (false === comutl.iscmp(val)) {\n          throw new Error("invalid parameter");\n        }\n        /* setter */\n\n\n        if (undefined !== incmp[key]) {\n          if (false === comutl.isinc(val, incmp[key].name())) {\n            throw new Error("invalid parameter");\n          }\n          /* rewrite component, replace target child */\n\n\n          var pnt = incmp[key].parent();\n\n          if (null !== pnt) {\n            pnt.getTree().replace(incmp[key], val);\n          }\n        }\n\n        incmp[key] = val;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /* component method */\n\n    /**\n     * execute effect\n     *\n     * @param (number) execute id\n     * @param (function, array) callback\n     * @return (boolean) execute result\n     */\n\n  }, {\n    key: "execEffect",\n    value: function execEffect(eid, cb, cbp) {\n      try {\n        return effutl.exec(cmputl.modconf(this, cmputl.IDX_EFFECT), eid, [cb, cbp]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isExists",\n    value: function isExists() {\n      try {\n        return this.childDom().isPushed();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /*** user config method ***/\n\n    /**\n     * style getter / setter\n     *\n     * @return (object) style object\n     */\n\n  }, {\n    key: "style",\n    value: function style(kv, opt) {\n      try {\n        if ("string" === typeof kv) {\n          /* getter */\n          return this.styleDom().style(kv);\n        } else if ("Style" === comutl.isinc(kv)) {\n          /* setter */\n          var cnf = kv.get();\n\n          for (var cidx in cnf) {\n            var set = {};\n            set[cidx] = cnf[cidx];\n            this.styleDom().style(set, true === kv.lock(cidx) ? {\n              lock: true\n            } : undefined);\n          }\n        } else {\n          this.styleDom().style(kv, opt);\n          this.confmng("style", this.styleDom().style());\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "layout",\n    value: function layout(prm) {\n      try {\n        var ret = cmputl.modconf(this, 0, prm);\n\n        if (undefined !== prm && undefined !== ret) {\n          return true === Array.isArray(ret) && 1 === ret.length ? ret[0] : ret;\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "effect",\n    value: function effect(prm) {\n      try {\n        var ret = cmputl.modconf(this, 1, prm);\n\n        if (undefined !== prm && undefined !== ret) {\n          return true === Array.isArray(ret) && 1 === ret.length ? ret[0] : ret;\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "event",\n    value: function event(prm) {\n      try {\n        var ret = cmputl.modconf(this, 2, prm);\n\n        if (undefined !== prm && undefined !== ret) {\n          return true === Array.isArray(ret) && 1 === ret.length ? ret[0] : ret;\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "accessConfig",\n    value: function accessConfig(prm) {\n      try {\n        if (true === Array.isArray(prm)) {\n          for (var pidx in prm) {\n            this.accessConfig(prm[pidx]);\n          }\n\n          return;\n        } //            for (let pidx in prm) {\n        //                if (pidx === comutl.accdev()) {\n        //                    for (let pidx2 in prm[pidx][0]) {\n        //                        if (pidx2 === "os") {\n        //                            if (prm[pidx][0][pidx2] === comutl.accos()) {\n        //                                this.config(prm[pidx][1]);\n        //                            }\n        //                        } else if (pidx2 === "browser") {\n        //                            if (prm[pidx][0][pidx2] === comutl.accbrs()) {\n        //                                this.config(prm[pidx][1]);\n        //                            }\n        //                        }\n        //                    }\n        //                    if (0 === Object.keys(prm[pidx][0]).length) { \n        //                        this.config(prm[pidx][1]);\n        //                    }\n        //                }\n        //            }\n\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * \n     */\n\n  }, {\n    key: "theme",\n    value: function theme(prm) {\n      try {\n        return this.confmng("theme", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "template",\n    value: function template(tmpl, prm) {\n      try {\n        if (\'function\' !== typeof tmpl) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.child(tmpl(prm));\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      try {\n        /* destroy in component layer */\n        if (null === this.parent()) {\n          return;\n        }\n\n        this.parent().getTree().delChild(this);\n        /* destroy in dom layer */\n\n        var rdom = this.rootDom();\n\n        for (var ridx in rdom) {\n          rdom[ridx].destroy();\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "size",\n    value: function size(x, y, opt) {\n      try {\n        if (undefined === x) {\n          /* getter */\n          return [this.width(), this.height()];\n        }\n        /* setter */\n\n\n        this.width(x, opt);\n        this.height(y, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "width",\n    value: function width(prm, opt) {\n      try {\n        return cmputl.size(this, "width", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "height",\n    value: function height(prm, opt) {\n      try {\n        return cmputl.size(this, "height", prm, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /*** color method ***/\n\n  }, {\n    key: "color",\n    value: function color(c1, c2, c3) {\n      try {\n        if (undefined === c1) {\n          /* getter */\n          return [this.main_color(), this.base_color(), this.accent_color()];\n        }\n\n        var clr_tgt = ["mainColor", "baseColor", "accentColor"];\n\n        for (var cidx in clr_tgt) {\n          if (undefined === arguments[cidx]) {\n            continue;\n          } else if (true === comutl.isinc(arguments[cidx], "ConfArg")) {\n            arguments[cidx].exec(this, clr_tgt[cidx]);\n          } else {\n            this[clr_tgt[cidx]](arguments[cidx]);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "mainColor",\n    value: function mainColor(prm, opt) {\n      /* interface */\n      return null;\n    }\n  }, {\n    key: "baseColor",\n    value: function baseColor(clr, opt) {\n      try {\n        /* interface */\n        return cmputl.color(this, "background", clr, opt);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "accentColor",\n    value: function accentColor(prm, opt) {\n      /* interface */\n      return null;\n    }\n  }, {\n    key: "visible",\n    value: function visible(flg, cbf, cbp) {\n      try {\n        return cmputl.visible(this, flg, cbf, cbp);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "config",\n    value: function config(p1, p2, p3, p4, p5) {\n      try {\n        this.rootDom();\n        return _get(_getPrototypeOf(_class.prototype), "config", this).call(this, p1, p2, p3, p4, p5);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/tag/Component.js?')},"./node_modules/mofron/src/tag/Effect.js":
/*!***********************************************!*\
  !*** ./node_modules/mofron/src/tag/Effect.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file Effect.js\n */\nvar ModConf = __webpack_require__(/*! ../core/ModConf.js */ "./node_modules/mofron/src/core/ModConf.js");\n\nvar comutl = mofron.util.common;\nvar effutl = mofron.util.effect;\n\nmodule.exports = /*#__PURE__*/function (_ModConf) {\n  _inherits(_class, _ModConf);\n\n  var _super = _createSuper(_class);\n\n  function _class(po) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Effect\');\n\n      _this.confmng().add("callback", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("otCallback", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("beforeEvent", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("order", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("eid", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("speed", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("delay", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("forced", {\n        type: "boolean",\n        init: false\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * execute effect\n   * \n   * @param p2 (function) simple call back\n   */\n\n\n  _createClass(_class, [{\n    key: "execute",\n    value: function execute() {\n      try {\n        if (true === this.isSkipped(this.eid(), this.order())) {\n          return;\n        }\n\n        var evt = this.beforeEvent();\n\n        for (var eidx in evt) {\n          evt[eidx][0](this, this.component(), evt[eidx][1]);\n        }\n\n        var trans = false;\n\n        if (0 < this.speed() && null === this.component().style("transition")) {\n          effutl.transition(this, true);\n          trans = true;\n          this.otCallback(function (ts1, ts2, ts3) {\n            try {\n              mofron.util.effect.transition(ts3, false);\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          }, this);\n        }\n        /* execute effect */\n\n\n        var exec = function exec(exe_eff) {\n          try {\n            exe_eff.contents(exe_eff.component());\n            exe_eff.isInited(true);\n            setTimeout(exe_eff.exeCallback, exe_eff.speed(), exe_eff);\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n\n        if (0 === this.delay() && 0 === this.speed() && false === trans) {\n          exec(this);\n        } else {\n          setTimeout(exec, this.delay() + 50, this);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "fexec",\n    value: function fexec() {\n      try {\n        var sus = this.suspend();\n        this.suspend(false);\n        this.execute();\n        this.suspend(sus);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "contents",\n    value: function contents(eid, cmp) {}\n  }, {\n    key: "beforeEvent",\n    value: function beforeEvent(fnc, prm) {\n      try {\n        return this.confmng("beforeEvent", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "otCallback",\n    value: function otCallback(fnc, prm) {\n      try {\n        var ret = this.confmng("otCallback", fnc, prm);\n\n        if (undefined !== ret) {\n          this.confmng()["delete"]("otCallback");\n          return ret;\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * @param p1 (array) [function, param, one time flag]\n     */\n\n  }, {\n    key: "callback",\n    value: function callback(fnc, prm) {\n      try {\n        return this.confmng("callback", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "exeCallback",\n    value: function exeCallback(eff) {\n      try {\n        /* execute callback */\n        var cb = eff.callback();\n\n        for (var cidx1 in cb) {\n          cb[cidx1][0](eff, eff.component(), cb[cidx1][1]);\n        }\n\n        var ocb = eff.otCallback();\n\n        for (var cidx2 in ocb) {\n          ocb[cidx2][0](eff, eff.component(), ocb[cidx2][1]);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isSkipped",\n    value: function isSkipped(eid, ord) {\n      try {\n        if (true === this.suspend() || eid !== this.eid() || ord !== this.order()) {\n          return true;\n        }\n\n        return false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * execute order number setter/getter\n     *\n     * @param p1 (number) execute order number\n     * @param p1 (undefined) call as getter\n     * @return (number) execute order number\n     */\n\n  }, {\n    key: "order",\n    value: function order(prm) {\n      try {\n        return this.confmng("order", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "eid",\n    value: function eid(prm) {\n      try {\n        return this.confmng("eid", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /*** default execute config ***/\n\n    /**\n     * effect speed setter/getter\n     *\n     * @param p1 (number) effect speed\n     * @param p1 (undefined) call as getter\n     * @return (number) effect speed\n     */\n\n  }, {\n    key: "speed",\n    value: function speed(prm) {\n      try {\n        return this.confmng("speed", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "delay",\n    value: function delay(prm) {\n      try {\n        return this.confmng("delay", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "forced",\n    value: function forced(prm) {\n      try {\n        return this.confmng("forced", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(ModConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/tag/Effect.js?')},"./node_modules/mofron/src/tag/Event.js":
/*!**********************************************!*\
  !*** ./node_modules/mofron/src/tag/Event.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file event.js\n * @author simpart\n */\nvar ModConf = __webpack_require__(/*! ../core/ModConf.js */ "./node_modules/mofron/src/core/ModConf.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_ModConf) {\n  _inherits(_class, _ModConf);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   */\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Event\');\n\n      _this.shortForm(\'listener\');\n\n      _this.confmng().add("listener", {\n        type: "event",\n        list: true\n      });\n\n      _this.confmng().add("eid", {\n        type: "number"\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n  /**\n   * set function for event listener\n   *\n   * @param fnc : (function) function for event listener\n   * @param prm : (mixed) function parameter (option)\n   */\n\n\n  _createClass(_class, [{\n    key: "listener",\n    value: function listener(fnc, prm) {\n      try {\n        return this.confmng("listener", fnc, prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "execListener",\n    value: function execListener(eprm) {\n      try {\n        if (true === this.suspend()) {\n          return;\n        }\n\n        var lis = this.listener();\n        var prm = null;\n\n        for (var lidx in lis) {\n          lis[lidx][0](this.component(), eprm, lis[lidx][1]);\n        }\n        /* execute effect */\n\n\n        if (null !== this.eid()) {\n          this.component().execEffect(this.eid());\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "execute",\n    value: function execute() {\n      try {\n        this.initevt();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "initevt",\n    value: function initevt() {\n      try {\n        if (false === this.isInited()) {\n          this.contents(this.component().eventDom());\n          this.isInited(true);\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "eid",\n    value: function eid(prm) {\n      try {\n        return this.confmng("eid", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(ModConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/tag/Event.js?')},"./node_modules/mofron/src/tag/Layout.js":
/*!***********************************************!*\
  !*** ./node_modules/mofron/src/tag/Layout.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file layout/Base.js\n * @brief Base class of layout\n */\nvar ModConf = __webpack_require__(/*! ../core/ModConf.js */ "./node_modules/mofron/src/core/ModConf.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_ModConf) {\n  _inherits(_class, _ModConf);\n\n  var _super = _createSuper(_class);\n\n  function _class(po) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Layout\');\n\n      _this.confmng().add("skip", {\n        type: "Component",\n        list: true\n      });\n\n      _this.confmng().add("execlog", {\n        type: "Component",\n        list: true\n      }); //this.m_execnt = 0;\n\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "execute",\n    value: function execute() {\n      try {\n        var cmp_chd = this.component().child();\n\n        for (var _cidx in cmp_chd) {\n          /* check skip */\n          if (true === this.isSkipped(cmp_chd[_cidx])) {\n            continue;\n          }\n\n          if (false === this.isExeced(cmp_chd[_cidx])) {\n            /* execute layout contents */\n            this.contents(parseInt(_cidx), cmp_chd[_cidx]);\n            this.confmng("execlog", cmp_chd[_cidx]);\n          }\n        }\n\n        this.isInited(true);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isExeced",\n    value: function isExeced(cmp) {\n      try {\n        var elog = this.confmng("execlog");\n\n        for (var eidx in elog) {\n          if (elog[eidx].id() === cmp.id()) {\n            return true;\n          }\n        }\n\n        return false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "contents",\n    value: function contents(idx, tgt) {\n      console.warn(\'not implement\');\n    }\n  }, {\n    key: "skip",\n    value: function skip(prm) {\n      try {\n        return this.confmng("skip", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "isSkipped",\n    value: function isSkipped(cmp) {\n      try {\n        var skp = this.skip();\n\n        for (var sidx in skp) {\n          if (skp[sidx].id() === cmp[cidx].id()) {\n            return true;\n          }\n        }\n\n        return false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(ModConf);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/tag/Layout.js?')},"./node_modules/mofron/src/type/Color.js":
/*!***********************************************!*\
  !*** ./node_modules/mofron/src/type/Color.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  Color.js\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../core/Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Color\');\n\n      _this.m_rgba = [null, null, null, null];\n      /* red, green, blue, alpha */\n\n      if (true === Array.isArray(prm)) {\n        _this.rgba(prm[0], prm[1], prm[2], prm[3]);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "rgb",\n    value: function rgb(r, g, b) {\n      try {\n        var ret = this.rgba(r, g, b);\n        return undefined !== ret ? [ret[0], ret[1], ret[2]] : undefined;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get rgba value\n     * \n     * @return (object) rgba array object\n     *   [0] -> (number) red value\n     *   [1] -> (number) green value\n     *   [2] -> (number) blue value\n     *   [3] -> (number) alpha value\n     */\n\n  }, {\n    key: "rgba",\n    value: function rgba(red, green, blue, alpha) {\n      try {\n        if (undefined === red) {\n          /* getter */\n          return this.m_rgba;\n        }\n        /* setter */\n\n\n        var _red = red === undefined ? null : red;\n\n        var _green = green === undefined ? null : green;\n\n        var _blue = blue === undefined ? null : blue;\n\n        var _alpha = alpha === undefined ? 1 : alpha;\n\n        if (null === _red && null === _green && null === _blue) {} else if (null !== _red && null !== _green && null !== _blue) {\n          if (\'number\' !== typeof _red || \'number\' !== typeof _green || \'number\' !== typeof _blue) {\n            throw new Error(\'invalid parameter\');\n          }\n        } else {\n          throw new Error(\'invalid parameter\');\n        }\n\n        if (\'number\' !== typeof _alpha) {\n          throw new Error(\'invalid parameter\');\n        }\n\n        this.m_rgba[0] = _red;\n        this.m_rgba[1] = _green;\n        this.m_rgba[2] = _blue;\n        this.m_rgba[3] = _alpha;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n    /**\n     * get coloe style value\n     *\n     * @return (string) rgba(x,x,x,x)\n     * @return (string) none\n     * @note return \'none\' if rgb is null.\n     */\n\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        var rgba = this.rgba();\n        var red = rgba[0];\n        var green = rgba[1];\n        var blue = rgba[2];\n        var alpha = rgba[3];\n\n        if (null === red && null === green && null === blue) {\n          return \'none\';\n        }\n\n        return \'rgba(\' + red + \',\' + green + \',\' + blue + \',\' + alpha + \')\';\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/Color.js?')},"./node_modules/mofron/src/type/ConfArg.js":
/*!*************************************************!*\
  !*** ./node_modules/mofron/src/type/ConfArg.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file ConfArg.js\n * @brief config argument class\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../core/Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name("ConfArg");\n\n      _this.param(arguments);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "exec",\n    value: function exec(tgt, fnc) {\n      try {\n        var arg = this.param();\n\n        if (true === Array.isArray(fnc)) {\n          if (1 === fnc.length) {\n            this.exec(tgt, fnc[0]);\n          } else {\n            if (fnc.length < arg.length) {\n              throw new Error("mismatched config count");\n            }\n\n            for (var aidx in arg) {\n              if ("function" !== typeof tgt[fnc[aidx]]) {\n                console.warn("invalid config: " + fnc[aidx]);\n                continue;\n              }\n\n              if (true === comutl.isinc(arg[aidx], "ConfArg")) {\n                arg[aidx].exec(tgt, fnc[aidx]);\n              } else {\n                tgt[fnc[aidx]](arg[aidx]);\n              }\n            }\n          }\n\n          return;\n        } else if ("string" === typeof fnc) {\n          if ("function" !== typeof tgt[fnc]) {\n            console.warn("invalid config: " + fnc);\n            return;\n          }\n\n          if (0 === arg.length) {\n            tgt[fnc]();\n          } else if (1 === arg.length) {\n            tgt[fnc](arg[0]);\n          } else if (2 === arg.length) {\n            tgt[fnc](arg[0], arg[1]);\n          } else if (3 === arg.length) {\n            tgt[fnc](arg[0], arg[1], arg[2]);\n          } else if (4 === arg.length) {\n            tgt[fnc](arg[0], arg[1], arg[2], arg[3]);\n          } else {\n            tgt[fnc](arg[0], arg[1], arg[2], arg[3], arg[4]);\n          }\n        } else {\n          throw new Error("invalid parameter");\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "param",\n    value: function param(prm) {\n      try {\n        if (undefined === prm) {\n          /* getter */\n          if (undefined === this.m_param) {\n            throw new Error("could not find param");\n          }\n\n          return this.m_param;\n        }\n        /* setter */\n\n\n        if ("object" !== _typeof(prm)) {\n          throw new Error("invalid parameter");\n        }\n\n        var arg = [];\n        var hit = false;\n\n        for (var pidx = prm.length; pidx >= 0; pidx--) {\n          if (true === hit) {\n            arg.unshift(prm[pidx]);\n          } else if (undefined !== prm[pidx]) {\n            arg.unshift(prm[pidx]);\n            hit = true;\n          }\n        }\n\n        this.m_param = arg;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "addParam",\n    value: function addParam(prm) {\n      try {\n        this.m_param.push(prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/ConfArg.js?')},"./node_modules/mofron/src/type/EventFrame.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron/src/type/EventFrame.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file EventFrame.js\n */\nvar Base = __webpack_require__(/*! ../core/Base.js */ "./node_modules/mofron/src/core/Base.js");\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  /**\n   * initialize member\n   *\n   */\n  function _class(fnc, prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'EventFrame\');\n\n      _this.confmng().add("func", {\n        type: "function"\n      });\n\n      _this.func(fnc);\n\n      _this.param(prm);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "func",\n    value: function func(prm) {\n      try {\n        return this.confmng("func", prm, {\n          type: "function"\n        });\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "param",\n    value: function param(prm) {\n      try {\n        if (undefined === prm) {\n          return this.m_param;\n        }\n\n        this.m_param = prm;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "exec",\n    value: function exec(p1, p2) {\n      try {\n        if (undefined === p1) {\n          this.func()(undefined, undefined, this.param());\n        } else if (undefined === p2) {\n          this.func()(p1, undefined, this.param());\n        } else {\n          this.func()(p1, p2, this.param());\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/EventFrame.js?')},"./node_modules/mofron/src/type/PullConf.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron/src/type/PullConf.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file pullConf.js\n * @brief pull type config argument class\n * @author simpart\n */\nvar ConfArg = __webpack_require__(/*! ./ConfArg.js */ "./node_modules/mofron/src/type/ConfArg.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_ConfArg) {\n  _inherits(_class, _ConfArg);\n\n  var _super = _createSuper(_class);\n\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      if (!(\'object\' === _typeof(prm) && false === Array.isArray(prm) && false === comutl.isinc(prm, "Base"))) {\n        throw new Error("invalid parameter");\n      }\n\n      _this = _super.call(this, prm);\n\n      _this.name("PullConf");\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "exec",\n    value: function exec(tgt, fnc) {\n      try {\n        tgt[fnc]().config(this.param()[0]);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(ConfArg);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/PullConf.js?')},"./node_modules/mofron/src/type/size/Pixel.js":
/*!****************************************************!*\
  !*** ./node_modules/mofron/src/type/size/Pixel.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  Pixel.js\n * @brief pixel size data type\n * @author simpart\n */\nvar Size = __webpack_require__(/*! ./Size.js */ "./node_modules/mofron/src/type/size/Size.js");\n\nmodule.exports = /*#__PURE__*/function (_Size) {\n  _inherits(_class, _Size);\n\n  var _super = _createSuper(_class);\n\n  /**\n   *\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, prm, \'px\');\n\n      _this.name(\'Pixel\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "toPxnum",\n    value: function toPxnum() {\n      try {\n        return this.value();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Size);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/size/Pixel.js?')},"./node_modules/mofron/src/type/size/Rem.js":
/*!**************************************************!*\
  !*** ./node_modules/mofron/src/type/size/Rem.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  Rem.js\n * @brief rem size data type\n * @author simpart\n */\nvar Size = __webpack_require__(/*! ./Size.js */ "./node_modules/mofron/src/type/size/Size.js");\n\nvar comutl = mofron.util.common;\n\nmodule.exports = /*#__PURE__*/function (_Size) {\n  _inherits(_class, _Size);\n\n  var _super = _createSuper(_class);\n\n  /**\n   *\n   */\n  function _class(prm) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this, prm, \'rem\');\n\n      _this.name(\'Rem\');\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "toPixel",\n    value: function toPixel() {\n      try {\n        /* get html font-size */\n        var h_fsiz = document.documentElement.style["fontSize"];\n\n        if ("" === h_fsiz) {\n          h_fsiz = 625; // default size\n        } else {\n          h_fsiz = parseFloat(h_fsiz);\n        }\n        /* get body font-size */\n\n\n        var b_fsiz = document.body.style["fontSize"];\n\n        if ("" === b_fsiz) {\n          b_fsiz = "0.16"; // default size\n        } else {\n          b_fsiz = parseFloat(b_fsiz);\n        }\n\n        return this.value() * (b_fsiz * h_fsiz);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "calcu",\n    value: function calcu(prm, flg) {\n      try {\n        _get(_getPrototypeOf(_class.prototype), "calcu", this).call(this, prm, flg);\n\n        if (\'px\' === this.type()) {\n          this.value(this.px2Rem());\n          this.type(\'rem\');\n        }\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Size);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/size/Rem.js?')},"./node_modules/mofron/src/type/size/Size.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/type/size/Size.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @file  Size.js\n * @brief size data type\n * @author simpart\n */\nvar Base = __webpack_require__(/*! ../../core/Base.js */ "./node_modules/mofron/src/core/Base.js");\n/**\n * @class Size\n * @brief Size Defined Class\n */\n\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(_class, _Base);\n\n  var _super = _createSuper(_class);\n\n  /**\n   *\n   */\n  function _class(siz, tp) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    try {\n      _this = _super.call(this);\n\n      _this.name(\'Size\');\n\n      _this.confmng().add("type", {\n        type: "string",\n        init: ""\n      });\n\n      _this.confmng().add("value", {\n        type: "number",\n        init: 0\n      });\n\n      _this.confmng().add("option", {\n        type: "object",\n        init: {}\n      });\n\n      if (\'number\' === typeof siz && \'string\' === typeof tp) {\n        _this.value(siz);\n\n        _this.type(tp);\n      } else {\n        throw new Error("invalid parameter");\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: "type",\n    value: function type(prm) {\n      try {\n        return this.confmng("type", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "value",\n    value: function value(prm) {\n      try {\n        return this.confmng("value", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "option",\n    value: function option(prm) {\n      try {\n        return this.confmng("option", prm);\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toStyle",\n    value: function toStyle() {\n      try {\n        return [this.toString(), this.option()];\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      try {\n        return null === this.type() ? null : this.value() + this.type();\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: "toPixel",\n    value: function toPixel() {\n      try {\n        throw new Error("not supported");\n      } catch (e) {\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}(Base);\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/type/size/Size.js?')},"./node_modules/mofron/src/util/common.js":
/*!************************************************!*\
  !*** ./node_modules/mofron/src/util/common.js ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @file common.js\n * @brief common util functions\n */\nmofron.util.common = {\n  isinc: function isinc(obj, nm) {\n    try {\n      /* parameter check */\n      if (null === obj || 'object' !== _typeof(obj) || true === Array.isArray(obj) || \"function\" !== typeof obj.name || \"function\" !== typeof obj.confmng) {\n        return false;\n      }\n\n      var chk_nm = \"string\" === typeof nm ? [nm] : nm;\n      var chk_idx = 0;\n      var name_lst = obj.confmng(\"name\");\n\n      for (var idx in name_lst) {\n        if (chk_nm[chk_idx] === name_lst[idx]) {\n          chk_idx++;\n\n          if (chk_nm.length === chk_idx) {\n            return true;\n          }\n\n          continue;\n        }\n\n        if (0 < chk_idx) {\n          break;\n        }\n      }\n\n      return false;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  iscmp: function iscmp(obj) {\n    try {\n      return comutl.isinc(obj, \"Component\");\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  isobj: function isobj(obj, nm) {\n    try {\n      return obj.name() === nm ? true : false;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getcmp: function getcmp(prm) {\n    try {\n      return new mofron[\"class\"].Component(prm);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getcolor: function getcolor(prm) {\n    try {\n      if (null === prm || undefined === prm) {\n        return null;\n      } else if ('string' === typeof prm) {\n        if ('none' === prm) {\n          return new mofron[\"class\"].Color();\n        } else if (0 === prm.indexOf('rgb')) {\n          var rgb_clr = null;\n\n          if (0 === prm.indexOf('rgba(')) {\n            rgb_clr = prm.substring(5);\n          } else if (0 === prm.indexOf('rgb(')) {\n            rgb_clr = prm.substring(4);\n          } else {\n            throw new Error('invalid parameter');\n          }\n\n          rgb_clr = rgb_clr.substring(0, rgb_clr.length - 1);\n          rgb_clr = rgb_clr.split(',');\n\n          if (3 === rgb_clr.length) {\n            return new mofron[\"class\"].Color([parseInt(rgb_clr[0]), parseInt(rgb_clr[1]), parseInt(rgb_clr[2])]);\n          } else if (4 === rgb_clr.length) {\n            return new mofron[\"class\"].Color([parseInt(rgb_clr[0]), parseInt(rgb_clr[1]), parseInt(rgb_clr[2]), parseInt(rgb_clr[3])]);\n          } else {\n            throw new Error('invalid parameter');\n          }\n        } else if (0 === prm.indexOf('#')) {\n          /* hex */\n          var hex_clr = prm.substring(1);\n\n          if (6 !== hex_clr.length) {\n            throw new Error('invalid parameter');\n          }\n\n          return new mofron[\"class\"].Color([parseInt(hex_clr.substring(0, 2), 16), parseInt(hex_clr.substring(2, 4), 16), parseInt(hex_clr.substring(4, 6), 16)]);\n        } else {\n          /* name */\n          if ('string' !== typeof prm) {\n            throw new Error('invalid parameter');\n          }\n\n          switch (prm) {\n            case 'black':\n              return new mofron[\"class\"].Color([0, 0, 0]);\n\n            case 'gray':\n              return new mofron[\"class\"].Color([128, 128, 128]);\n\n            case 'silver':\n              return new mofron[\"class\"].Color([192, 192, 192]);\n\n            case 'white':\n              return new mofron[\"class\"].Color([255, 255, 255]);\n\n            case 'blue':\n              return new mofron[\"class\"].Color([0, 0, 255]);\n\n            case 'navy':\n              return new mofron[\"class\"].Color([0, 0, 128]);\n\n            case 'teal':\n              return new mofron[\"class\"].Color([0, 128, 128]);\n\n            case 'green':\n              return new mofron[\"class\"].Color([0, 128, 0]);\n\n            case 'lime':\n              return new mofron[\"class\"].Color([0, 255, 0]);\n\n            case 'aqua':\n              return new mofron[\"class\"].Color([0, 255, 255]);\n\n            case 'yellow':\n              return new mofron[\"class\"].Color([255, 255, 0]);\n\n            case 'red':\n              return new mofron[\"class\"].Color([255, 0, 0]);\n\n            case 'fuchsia':\n              return new mofron[\"class\"].Color([255, 0, 255]);\n\n            case 'olive':\n              return new mofron[\"class\"].Color([128, 128, 0]);\n\n            case 'purple':\n              return new mofron[\"class\"].Color([128, 0, 128]);\n\n            case 'maroon':\n              return new mofron[\"class\"].Color([128, 0, 0]);\n\n            default:\n              throw new Error('not supported color');\n          }\n        }\n      } else if (true === Array.isArray(prm)) {\n        return new mofron[\"class\"].Color(prm);\n      } else if (true === comutl.isinc(prm, 'Color')) {\n        return prm;\n      } else {\n        throw new Error('invalid parameter');\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getsize: function getsize(prm) {\n    try {\n      var siz = null;\n      /* parameter check */\n\n      if ('string' !== typeof prm) {\n        if (null === prm || undefined === prm) {\n          return null;\n        } else if (true === comutl.isinc(prm, \"Size\")) {\n          return prm;\n        } else {\n          throw new Error('invalid parameter');\n        }\n      }\n      /* get size type */\n\n\n      var stype = ['px', '%', 'rem', 'em', 'vw', 'vh'];\n      var ptype = null;\n\n      for (var sidx in stype) {\n        if (2 !== prm.split(stype[sidx]).length) {\n          continue;\n        }\n\n        ptype = stype[sidx];\n        break;\n      }\n\n      if (null === ptype) {\n        throw new Error('not supported size type');\n      }\n      /* get value */\n\n\n      var sval = null;\n      sp_prm = prm.split(ptype);\n\n      if (2 === sp_prm[0].split('.').length) {\n        sval = parseFloat(sp_prm[0]);\n      } else {\n        sval = parseInt(sp_prm[0]);\n      }\n\n      if ('px' === ptype) {\n        return new mofron[\"class\"].Pixel(sval);\n      } else if ('rem' === ptype) {\n        return new mofron[\"class\"].Rem(sval);\n      } else {\n        return new mofron[\"class\"].Size(sval, ptype);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  sizetype: function sizetype(prm) {\n    try {\n      var size = comutl.getsize(prm);\n      return null === size ? null : size.type();\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  sizesum: function sizesum(p1, p2) {\n    try {\n      var prm1 = 'string' === typeof p1 ? comutl.getsize(p1) : p1;\n      var prm2 = 'string' === typeof p2 ? comutl.getsize(p2) : p2;\n\n      if (null == prm1 && true === comutl.isinc(prm2, ['Base', 'Size'])) {\n        return prm2.toString();\n      } else if (null == prm2 && true === comutl.isinc(prm1, ['Base', 'Size'])) {\n        return prm1.toString();\n      } else if (null === prm1 && null === prm2) {\n        return null;\n      }\n\n      if (true !== comutl.isinc(prm1, ['Base', 'Size']) || true !== comutl.isinc(prm2, ['Base', 'Size'])) {\n        throw new Error('invalid parameter');\n      }\n\n      if (prm1.type() !== prm2.type()) {\n        if (undefined === prm1.toPxnum() || undefined === prm2.toPxnum()) {\n          throw new Error('not supported type');\n        }\n\n        return new mofron[\"class\"].Pixel(prm1.toPxnum() + prm2.toPxnum()).toString();\n      } else {\n        var val_1 = comutl.roundup(prm1.value());\n        var val_2 = comutl.roundup(prm2.value());\n        return comutl.roundup(val_1 + val_2) + prm1.type();\n      }\n    } catch (e) {\n      throw e;\n    }\n  },\n  sizediff: function sizediff(p1, p2) {\n    try {\n      var prm2 = 'string' === typeof p2 ? comutl.getsize(p2) : p2;\n\n      if (true !== comutl.isinc(prm2, \"Size\")) {\n        throw new Error('not supported type');\n      }\n\n      var prm2_buf = comutl.getsize(prm2.toString());\n      prm2_buf.value(prm2_buf.value() * -1);\n      return comutl.sizesum(p1, prm2_buf);\n    } catch (e) {\n      throw e;\n    }\n  },\n  roundup: function roundup(prm) {\n    try {\n      var flo = comutl.flo2int(prm);\n\n      if (1000 >= flo[1]) {\n        return prm;\n      }\n\n      return Math.floor(flo[0] / flo[1] * 1000) / 1000;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  flo2int: function flo2int(prm) {\n    try {\n      if ('number' !== typeof prm) {\n        throw new Error('invalid parameter');\n      }\n\n      var chk = null;\n      var pos = 0;\n      var wei = 1;\n      chk = prm + '';\n      pos = chk.indexOf('.');\n\n      if (-1 === pos) {\n        return [prm, 1];\n      }\n\n      for (pos = chk.length - 1 - pos; 0 < pos; pos--) {\n        wei = wei * 10;\n      }\n\n      return [prm * wei, wei];\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  chkacc: function chkacc(opt) {\n    try {\n      for (var oidx in opt) {\n        if (\"device\" === oidx) {\n          if (opt[oidx] !== comutl.accdev()) {\n            return false;\n          }\n        } else if (\"os\" === oidx) {\n          if (opt[oidx] !== comutl.accos()) {\n            return false;\n          }\n        } else if (\"browser\" === oidx) {\n          if (opt[oidx] !== comutl.accbrs()) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  accdev: function accdev() {\n    try {\n      var ua = window.navigator.userAgent;\n\n      if (ua.indexOf('iPhone') > 0 || ua.indexOf('iPod') > 0 || ua.indexOf('Android') > 0 && ua.indexOf('Mobile') > 0) {\n        return 'mobile';\n      } else if (ua.indexOf('iPad') > 0 || ua.indexOf('Android') > 0) {\n        return 'tablet';\n      } else {\n        return 'display';\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  accos: function accos() {\n    try {\n      var ua = window.navigator.userAgent;\n\n      if (ua.indexOf('iPhone') > 0 || ua.indexOf('iPod') > 0 || ua.indexOf('iPad') > 0) {\n        return 'ios';\n      } else if (ua.indexOf('Android') > 0) {\n        return 'android';\n      } else if (ua.indexOf('Windows') > 0) {\n        return 'windows';\n      } else if (ua.indexOf('Mac OS') > 0) {\n        return 'mac';\n      } else if (ua.indexOf('Linux') > 0) {\n        return 'linux';\n      } else {\n        return 'other';\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  accbrs: function accbrs() {\n    try {\n      var ua = window.navigator.userAgent.toLowerCase();\n\n      if (ua.indexOf('msie') !== -1 || ua.indexOf('trident') !== -1) {\n        return 'ie';\n      } else if (ua.indexOf('edge') != -1) {\n        return 'edge';\n      } else if (ua.indexOf('chrome') != -1) {\n        return 'chrome';\n      } else if (ua.indexOf('safari') != -1) {\n        return 'safari';\n      } else if (ua.indexOf('firefox') != -1) {\n        return 'firefox';\n      } else if (ua.indexOf('opera') != -1) {\n        return 'opera';\n      } else {\n        return 'other';\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  addhead: function addhead(tag, atr, txt) {\n    try {\n      var conts = \"<\" + tag + \" \";\n      /* set attributes */\n\n      for (var aidx in atr) {\n        conts += aidx + '=' + atr[aidx] + ' ';\n      }\n\n      conts = conts.substring(0, conts.length - 1) + \">\";\n\n      if ('link' !== tag && 'meta' !== tag && 'base' !== tag) {\n        /* set contents */\n        conts += txt + \"</\" + tag + \">\";\n      }\n\n      if (undefined !== mofron.ssr) {\n        mofron.ssr.head(conts);\n      } else {\n        document.head.insertAdjacentHTML('beforeend', conts);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n};\nvar comutl = mofron.util.common;\nmodule.exports = mofron.util.common;\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/util/common.js?")},"./node_modules/mofron/src/util/component.js":
/*!***************************************************!*\
  !*** ./node_modules/mofron/src/util/component.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports){eval('var _arguments = arguments;\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @file component.js\n * @brief util functions for component\n * @license MIT\n */\nvar comutl = mofron.util.common;\nmofron.util.component = {\n  /*** define ***/\n  IDX_LAYOUT: 0,\n  IDX_EFFECT: 1,\n  IDX_EVENT: 2,\n  chdloop: function chdloop(cmp, key, p1, p2, p3) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var _chd = cmp.child();\n\n      var argc = _arguments.length;\n\n      for (var cidx in _chd) {\n        if (2 === argc) {\n          _chd[cidx][key](p1);\n        } else if (3 === argc) {\n          _chd[cidx][key](p1, p2);\n        } else if (4 === argc) {\n          _chd[cidx][key](p1, p2, p3);\n        }\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  ischild: function ischild(pnt, cmp) {\n    try {\n      var ret = false;\n      var pchd = pnt.getTree().child();\n\n      for (var cidx in pchd) {\n        if (true === comutl.ischild(chd[cidx], cmp)) {\n          return true;\n        } else if (chd[cidx].id() === cmp.id()) {\n          return true;\n        }\n      }\n\n      return false;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  isinncmp: function isinncmp(cmp) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var chd_cmp = cmp.childDom().component();\n\n      if (null === chd_cmp || null === chd_cmp.getTree().parent()) {\n        return false;\n      }\n\n      var pnt_buf = chd_cmp.getTree().parent();\n\n      while (null !== pnt_buf) {\n        if (cmp.id() === pnt_buf.id()) {\n          /* target is inner component */\n          return true;\n        }\n\n        pnt_buf = pnt_buf.getTree().parent();\n      }\n\n      return false;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  modconf: function modconf(cmp, idx, po) {\n    try {\n      if (true === comutl.isinc(po, "ModConf") && true === po.innerTgt() && true === cmputl.isinncmp(cmp)) {\n        return cmputl.modconf(cmp.childDom().component(), idx, po);\n      }\n\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var cnf_key = ["layout", "effect", "event"];\n\n      if (undefined === cnf_key[idx]) {\n        throw new Error(\'invalid parameter\');\n      }\n\n      if (true === Array.isArray(po)) {\n        for (var pidx in po) {\n          cmputl.modconf(cmp, idx, po[pidx]);\n        }\n\n        return;\n      }\n\n      if (false === comutl.isinc(po, "ModConf")) {\n        /* getter */\n        var mc_ret = cmp.confmng().get(cnf_key[idx]);\n\n        if ("object" !== _typeof(po) || false !== Array.isArray(po)) {\n          return mc_ret;\n        }\n\n        var ret = [];\n        var hit = null;\n\n        for (var midx in mc_ret) {\n          hit = true;\n\n          for (var _pidx in po) {\n            if (mc_ret[midx][_pidx]() !== po[_pidx]) {\n              hit = false;\n              break;\n            }\n          }\n\n          if (true === hit) {\n            ret.push(mc_ret[midx]);\n          }\n        }\n\n        return 0 === ret.length ? null : ret;\n      }\n      /* setter */\n\n\n      po.component(cmp);\n      cmp.confmng(cnf_key[idx], po);\n\n      if (true === cmp.isExists() && cmputl.IDX_EFFECT !== idx) {\n        po.execute();\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  initmconf: function initmconf(cmp, idx) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var _chd2 = cmp.getTree().getChild();\n\n      for (var cidx in _chd2) {\n        cmputl.initmconf(_chd2[cidx], idx);\n      }\n      /* init module config */\n\n\n      if (cmputl.IDX_EFFECT === idx) {\n        /* init effect */\n        cmp.execEffect(true === cmp.visible() ? 0 : 1);\n      } else {\n        var cnf = cmputl.modconf(cmp, idx);\n\n        for (var cfidx in cnf) {\n          cnf[cfidx].execute();\n        }\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  exectheme: function exectheme(cmp, thm) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var cmp_thm = cmp.theme();\n\n      var _chd3 = cmp.getTree().getChild();\n\n      for (var cidx in _chd3) {\n        /* add theme */\n        for (var ct_idx in cmp_thm) {\n          thm[ct_idx] = cmp_thm[ct_idx];\n        }\n\n        cmputl.exectheme(_chd3[cidx], thm);\n        /* execute theme */\n\n        for (var tidx in thm) {\n          if (true === comutl.isinc(_chd3[cidx], tidx)) {\n            if (null !== thm[tidx].target) {\n              /* replace component */\n              // not supported yet\n            } else {\n              _chd3[cidx].config(thm[tidx].config);\n            }\n          }\n        }\n      } //            /* call child theme */\n      //            let thm     = this.theme();\n      //          let cur_thm = {};\n      //          /* copy parent theme */\n      //            for (let pidx in prm) {\n      //                cur_thm[pidx] = JSON.parse(JSON.stringify(prm[pidx]));\n      //          }\n      //            /* copy this theme */\n      //          for (let tidx in thm) {\n      //                cur_thm[tidx] = JSON.parse(JSON.stringify(thm[tidx]));\n      //          }\n      //            \n      //            let chd = this.getChild(true);\n      //            for (let cidx in chd) {\n      //                chd[cidx].execTheme(cur_thm);\n      //          }\n      //            \n      //            let replace = (cp, tg, rp) => {\n      //                try {\n      //                    let ret = new rp();\n      //                    /* copy option */\n      //                    let tg_opt = tg.option();\n      //                    ret.option(tg_opt);\n      //                    \n      //                    if ( (undefined === tg_opt.child) && (0 !== tg.child().length) ) {\n      //                        ret.option({ child: tg.child() });\n      //                    }\n      //\n      //                    /* replace child */\n      //                    cp.updChild(tg, ret);\n      //                    return ret;\n      //                } catch (e) {\n      //                    console.error(e.stack);\n      //                    throw e;\n      //                }\n      //            };\n      //            \n      //            for (let cidx2 in chd) {\n      //                for (let thm_idx in cur_thm) {\n      //                    if (true === comutl.isinc(chd[cidx2], thm_idx)) {\n      //                        /* this child component is theme target */\n      //                        if ( (undefined !== cur_thm[thm_idx][0]) &&\n      //                             (undefined === cur_thm[thm_idx][1]) ) {\n      //                            /* theme type is class */\n      //                            replace(this, chd[cidx2], cur_thm[thm_iidx][0]);\n      //                        } else if ( (null !== cur_thm[thm_idx][0]) &&\n      //                                    (undefined !== cur_thm[thm_idx][1]) ) {\n      //                            /* theme type is class with option */\n      //                            replace(this, chd[cidx2], cur_thm[thm_idx][0]).option(cur_thm[thm_idx][1]);\n      //                        } else if ( (null === cur_thm[thm_idx][0]) &&\n      //                                    (undefined !== cur_thm[thm_idx][1]) ) {\n      //                            /* theme type is option */\n      //                            chd[cidx2].option(cur_thm[thm_idx][1]);\n      //                        }\n      //                    }\n      //                }\n      //            }\n\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  size: function size(cmp, key, val, opt) {\n    try {\n      /* setter */\n      if (false === comutl.iscmp(cmp) || "string" !== typeof key) {\n        throw new Error("invalid parameter");\n      }\n\n      if (undefined === val) {\n        /* getter */\n        return cmp.style(key);\n      }\n      /* setter */\n\n\n      var style_val = {};\n\n      if (null === comutl.getsize(val)) {\n        style_val[key] = null;\n      } else {\n        style_val[key] = comutl.getsize(val).toString();\n      }\n\n      cmp.config({\n        style: new mofron["class"].ConfArg(style_val, opt)\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  color: function color(cmp, key, val, opt) {\n    try {\n      if (false === comutl.iscmp(cmp) || "string" !== typeof key) {\n        throw new Error("invalid parameter");\n      }\n\n      if (undefined === val) {\n        /* getter */\n        return cmp.style(key);\n      }\n      /* setter */\n\n\n      var style_val = {};\n      style_val[key] = null === val ? null : comutl.getcolor(val).toString();\n      cmp.style(style_val, opt);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  display: function display(cmp, flg) {\n    try {\n      /* check parameter */\n      if (false === comutl.iscmp(cmp) || \'boolean\' !== typeof flg) {\n        throw new Error(\'invalid parameter\');\n      }\n\n      var buf = null;\n      var rdom = cmp.rootDom();\n\n      for (var ridx in rdom) {\n        if (true === flg) {\n          /* diplayed target dom, set display value from buffer */\n          if (\'none\' === rdom[ridx].style("display") && true === rdom[ridx].isPushed()) {\n            buf = cmputl.dispbuff(rdom[ridx]);\n            rdom[ridx].style({\n              "display": undefined === buf ? null : buf\n            });\n            cmputl.dispbuff(rdom[ridx], null);\n          }\n        } else {\n          /* hidden target dom, buffering display value */\n          buf = rdom[ridx].style("display");\n\n          if (\'none\' !== buf && null !== buf) {\n            cmputl.dispbuff(rdom[ridx], buf);\n          }\n\n          rdom[ridx].style({\n            "display": "none"\n          });\n        }\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  dispbuff: function dispbuff(dom, val) {\n    try {\n      if (false === comutl.isinc(dom, "Dom")) {\n        throw new Error("invalid parameter");\n      }\n\n      var dkey = dom.id() + "_display";\n\n      if (undefined === val) {\n        /* getter */\n        return dom.data(dkey);\n      }\n      /* setter */\n\n\n      dom.data(dkey, val);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  visible: function visible(cmp, vflg, ef, ep) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      if (undefined === vflg) {\n        /* getter */\n        if (false === cmp.isExists()) {\n          /* it does not rendered yet */\n          return false;\n        }\n\n        var doms = cmp.rootDom();\n\n        for (var didx in doms) {\n          if (\'none\' !== doms[didx].style(\'display\')) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n      /* setter */\n\n\n      if (\'boolean\' !== typeof vflg) {\n        throw new Error(\'invalid parameter\');\n      }\n\n      if (false === cmp.isExists()) {\n        /* render component */\n        cmputl.display(cmp, vflg);\n\n        if (true === vflg) {\n          cmputl.render(cmp, ef, ep);\n        }\n\n        return;\n      } else if (true === vflg) {\n        cmputl.display(cmp, vflg);\n      }\n\n      var scb = function scb() {\n        try {\n          if (false === vflg) {\n            cmputl.display(cmp, false);\n          }\n\n          if ("function" === typeof ef) {\n            ef(cmp, cmp.visible(), ep);\n          }\n        } catch (e) {\n          console.error(e.stack);\n          throw e;\n        }\n      };\n\n      if (false === cmp.execEffect(true === vflg ? 0 : 1, scb)) {\n        /* it doesn\'t execute effect */\n        scb();\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  render: function render(cmp, ef, ep) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n      /* execute layout modules */\n\n\n      cmputl.initmconf(cmp, cmputl.IDX_LAYOUT);\n      /* execute theme */\n\n      cmputl.exectheme(cmp, {});\n      /* before push event */\n\n      cmp.beforeRender();\n      /* render */\n\n      var rdom = cmp.rootDom();\n\n      for (var ridx in rdom) {\n        if (null === rdom[ridx].parent()) {\n          rdom[ridx].push({\n            target: document.body\n          });\n        } else {\n          var cmp_idx = cmp.parent().getTree().getIndex(cmp);\n          var pc_len = cmp.parent().child().length;\n\n          if (1 === pc_len || cmp_idx === pc_len - 1) {\n            /* insert to last of parent */\n            rdom[ridx].push({\n              target: rdom[ridx].parent().getRawDom()\n            });\n          } else {\n            /* insert to target index of parent */\n            rdom[ridx].push({\n              target: cmp.parent().child()[cmp_idx].rootDom()[0].getRawDom(),\n              position: \'beforebegin\'\n            });\n          }\n        }\n      }\n      /* after push event */\n\n\n      cmp.afterRender();\n      /* execute effect modules */\n\n      if ("function" === typeof ef) {\n        var ini_lst = mofron.util.effect.initlist(cmp);\n\n        if (0 === ini_lst.length) {\n          ef(cmp, cmp.visible(), ep);\n        } else {\n          var exe_ef = function exe_ef() {\n            var fin_cnt = 0;\n            return function (p1, p2, p3) {\n              try {\n                fin_cnt++;\n\n                if (p3 <= fin_cnt) {\n                  ef(cmp, cmp.visible(), ep);\n                }\n              } catch (e) {\n                console.error(e.stack);\n                throw e;\n              }\n            };\n          };\n\n          var set_exe_ef = exe_ef();\n\n          for (var iidx in ini_lst) {\n            ini_lst[iidx].otCallback(set_exe_ef, ini_lst.length);\n          }\n        }\n      }\n\n      cmputl.initmconf(cmp, cmputl.IDX_EFFECT);\n      /* execute event modules */\n\n      cmputl.initmconf(cmp, cmputl.IDX_EVENT);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  rstyle: function rstyle(cmp, sty, opt) {\n    try {\n      if (false === comutl.iscmp(cmp)) {\n        throw new Error("invalid parameter");\n      }\n\n      var root = cmp.rootDom();\n\n      for (var ridx in root) {\n        root[ridx].style(sty, opt);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n};\nvar cmputl = mofron.util.component;\nmodule.exports = mofron.util.component;\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/util/component.js?')},"./node_modules/mofron/src/util/effect.js":
/*!************************************************!*\
  !*** ./node_modules/mofron/src/util/effect.js ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval("/**\n * @file effect.js\n */\nvar cmputl = mofron.util.component;\nmofron.util.effect = {\n  exec: function exec(eff, eid, evf, oid) {\n    try {\n      var _oid = undefined === oid ? 0 : oid;\n\n      var elst = effutl.getlist(eff, eid, _oid);\n\n      if (0 === _oid && 0 < elst.length) {\n        effutl.transition(elst[0], true);\n      }\n\n      var next_order = function next_order() {\n        var fin_cnt = 0;\n        return function (p1, p2, p3) {\n          try {\n            fin_cnt++;\n\n            if (p3 <= fin_cnt) {\n              if (false === effutl.exec(eff, eid, evf, oid + 1)) {\n                effutl.transition(eff[0], false);\n\n                if (\"function\" === typeof evf[0]) {\n                  evf[0](p2, eid, evf[1]);\n                }\n              }\n            }\n          } catch (e) {\n            console.error(e.stack);\n            throw e;\n          }\n        };\n      };\n\n      var next = next_order(eff, eid, evf, oid);\n\n      for (var eidx in elst) {\n        elst[eidx].otCallback(next, elst.length);\n        elst[eidx].execute();\n      }\n\n      return 0 === elst.length ? false : true;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getlist: function getlist(eff, eid, oid, uflg) {\n    try {\n      var elst = [];\n\n      for (var eidx in eff) {\n        if (true === eff[eidx].isSkipped(eid, oid)) {\n          continue;\n        }\n\n        elst.push(eff[eidx]);\n      }\n\n      if (false !== uflg) {\n        /* unification effect speed */\n        var spd = 0 < elst.length ? elst[0].speed() : 0;\n        var upd = false;\n\n        for (var eidx1 in elst) {\n          if (spd < elst[eidx1].speed()) {\n            spd = elst[eidx1].speed();\n            upd = true;\n          }\n        }\n\n        if (true === upd) {\n          for (var eidx2 in elst) {\n            elst[eidx2].speed(spd);\n          }\n        }\n      }\n\n      return elst;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  initlist: function initlist(cmp) {\n    try {\n      var ret = [];\n      var chd = cmp.child();\n\n      for (var cidx in chd) {\n        var chd_ret = effutl.initlist(chd[cidx]);\n\n        if (null !== chd_ret) {\n          for (var _cidx in chd_ret) {\n            ret.push(chd_ret[_cidx]);\n          }\n        }\n      }\n\n      var eff = cmputl.modconf(cmp, cmputl.IDX_EFFECT);\n      var oid = 0;\n      var buf = null;\n\n      while (true) {\n        buf = effutl.getlist(eff, true === cmp.visible() ? 0 : 1, oid, false);\n\n        if (0 === buf.length) {\n          break;\n        }\n\n        for (var bidx in buf) {\n          ret.push(buf[bidx]);\n        }\n\n        oid++;\n      }\n\n      return ret;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  transition: function transition(eff, flg) {\n    try {\n      var spd = eff.speed();\n      var rdom = eff.component().rootDom();\n      var set = {\n        'transition': false === flg || 0 === spd ? null : 'all ' + spd + 'ms ease 0s'\n      };\n\n      for (var ridx in rdom) {\n        rdom[ridx].style(set, {\n          bpref: true\n        });\n      }\n\n      eff.component().styleDom().style(set, {\n        bpref: true\n      });\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getfirst: function getfirst(eff, eid, ord) {\n    try {\n      for (var eidx in eff) {\n        if (false === eff[eidx].isSkipped(eid, ord)) {\n          return parseInt(eidx);\n        }\n      }\n\n      return null;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  getlast: function getlast(eff, eid, ord) {\n    try {\n      var tgt_lst = [];\n\n      for (var eidx in eff) {\n        if (eid !== eff[eidx].eid()) {\n          continue;\n        } else if ('number' === typeof ord && ord !== eff[eidx].order()) {\n          continue;\n        }\n\n        tgt_lst.push(eff[eidx]);\n      }\n\n      if (0 === tgt_lst.length) {\n        return null;\n      }\n\n      var last = tgt_lst[tgt_lst.length - 1];\n\n      for (var eidx2 in eff) {\n        if (eff[eidx2].id() === last.id()) {\n          return parseInt(eidx2);\n        }\n      }\n\n      return null;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  },\n  setconf: function setconf(cmp, einf, cnf) {\n    try {\n      var eff = cmp.effect(einf);\n\n      if (null === eff) {\n        throw new Error(\"invalid parameter\");\n      }\n\n      eff = true !== Array.isArray(eff) ? [eff] : eff;\n\n      for (var eidx in eff) {\n        eff[eidx].config(cnf);\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n};\nvar effutl = mofron.util.effect;\nmodule.exports = mofron.util.effect;\n/* end of file */\n\n//# sourceURL=webpack:///./node_modules/mofron/src/util/effect.js?")},"./node_modules/tetraring4js/index.js":
/*!********************************************!*\
  !*** ./node_modules/tetraring4js/index.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('__webpack_require__(/*! expose-loader?$!jquery */ "./node_modules/expose-loader/index.js?$!./node_modules/jquery/dist/jquery.js-exposed");\n\n__webpack_require__(/*! expose-loader?ttrg!./src/namesp.js */ "./node_modules/expose-loader/index.js?ttrg!./node_modules/tetraring4js/src/namesp.js-exposed");\n\n__webpack_require__(/*! ./src/loader.js */ "./node_modules/tetraring4js/src/loader.js");\n\n__webpack_require__(/*! ./src/rest.js */ "./node_modules/tetraring4js/src/rest.js");\n\n__webpack_require__(/*! ./src/debug.js */ "./node_modules/tetraring4js/src/debug.js");\n\n__webpack_require__(/*! ./src/time.js */ "./node_modules/tetraring4js/src/time.js");\n\n__webpack_require__(/*! ./src/url.js */ "./node_modules/tetraring4js/src/url.js");\n\n__webpack_require__(/*! ./src/array.js */ "./node_modules/tetraring4js/src/array.js");\n\n__webpack_require__(/*! ./src/init.js */ "./node_modules/tetraring4js/src/init.js");\n\nmodule.exports = ttrg;\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/index.js?')},"./node_modules/tetraring4js/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/tetraring4js/src/array.js ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nttrg.arry.Keyval = /*#__PURE__*/function () {\n  function _class(dat) {\n    _classCallCheck(this, _class);\n\n    try {\n      if (null === dat) {\n        throw new Error('invalid parameter');\n      }\n\n      this.data = dat;\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  }\n\n  _createClass(_class, [{\n    key: \"getValue\",\n    value: function getValue(key) {\n      try {\n        if (null === key || '' == key) {\n          throw new Error('invalid parameter');\n        }\n\n        if (false === this.isKeyExists(key)) {\n          return null;\n        }\n\n        return this.data[key];\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: \"isKeyExists\",\n    value: function isKeyExists(key) {\n      try {\n        if (null === key || '' == key) {\n          throw new Error('invalid parameter');\n        }\n\n        for (var data_key in this.data) {\n          if (data_key === key) {\n            return true;\n          }\n        }\n\n        return false;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }, {\n    key: \"getCount\",\n    value: function getCount() {\n      try {\n        var ret = 0;\n\n        for (var data_key in this.data) {\n          ret++;\n        }\n\n        return ret;\n      } catch (e) {\n        console.error(e.stack);\n        throw e;\n      }\n    }\n  }]);\n\n  return _class;\n}();\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/array.js?")},"./node_modules/tetraring4js/src/debug.js":
/*!************************************************!*\
  !*** ./node_modules/tetraring4js/src/debug.js ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval('ttrg.debg.dumpObj = function (obj) {\n  try {\n    var ret_str = "";\n\n    for (var i in obj) {\n      ret_str += i + "=" + obj[i] + "\\n";\n    }\n\n    return ret_str;\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/debug.js?')},"./node_modules/tetraring4js/src/init.js":
/*!***********************************************!*\
  !*** ./node_modules/tetraring4js/src/init.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports){eval("ttrg.init.addLoadEvt = function (fnc) {\n  try {\n    if (null === fnc || 'function' !== typeof fnc) {\n      throw new Error('invalid parameter');\n    }\n\n    if (window.addEventListener) {\n      window.addEventListener('load', fnc, false);\n    } else if (window.attachEvent) {\n      window.attachEvent('onload', fnc);\n    } else {\n      window.onload = fnc;\n    }\n  } catch (e) {\n    console.log(e.stack);\n    throw e;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/init.js?")},"./node_modules/tetraring4js/src/loader.js":
/*!*************************************************!*\
  !*** ./node_modules/tetraring4js/src/loader.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports){eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nttrg.load.JsPara = /*#__PURE__*/function () {\n  /**\n   * initialize js loader\n   *\n   */\n  function _class(bp) {\n    _classCallCheck(this, _class);\n\n    try {\n      this.base_path = bp || './';\n      this.load_path = new Array();\n      this.callback = new Array(null, null);\n      this.load_cnt = 0;\n      this.loading = false;\n      this.timeout = 1000;\n      this.load_intvl = 200;\n    } catch (e) {\n      throw new Error(e.stack + '\\n');\n    }\n  }\n\n  _createClass(_class, [{\n    key: \"addPath\",\n    value: function addPath(path) {\n      try {\n        if ('string' != typeof path) {\n          throw new Error('invalid parameter');\n        }\n\n        if (true === this.loading) {\n          throw new Error('Loader is busy');\n        }\n        /* check duplex */\n\n\n        for (var load_path_idx in this.load_path) {\n          if (path == this.load_path[load_path_idx][0]) {\n            /* already  added */\n            return;\n          }\n        }\n        /* add load target path */\n\n\n        this.load_path.push(new Array(path, false));\n      } catch (e) {\n        throw new Error(e.stack + '\\n');\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(cb_func, cb_prm, force) {\n      try {\n        /* check busy */\n        if (true === this.loading) {\n          throw new Error('Loader is busy');\n        }\n\n        this.loading = true;\n        /* set callback function */\n\n        if (null !== cb_func) {\n          this.callback[0] = cb_func;\n          this.callback[1] = cb_prm;\n        }\n\n        var p_force = force || false;\n\n        for (var load_path_idx in this.load_path) {\n          /* check loaded */\n          if (true === this.load_path[load_path_idx][1]) {\n            /* already loaded */\n            if (false === p_force) {\n              /* skip load */\n              continue;\n            }\n          }\n          /* load javascript */\n\n\n          var own_loader = this;\n          $.getScript(this.base_path + this.load_path[load_path_idx][0], function () {\n            try {\n              own_loader.loadedElem();\n            } catch (e) {\n              console.error(e.stack);\n            }\n          });\n        }\n\n        this.chkLoad(0);\n      } catch (e) {\n        throw new Error(e.stack + '\\n');\n      }\n    }\n  }, {\n    key: \"loadedElem\",\n    value: function loadedElem() {\n      try {\n        this.load_cnt++;\n\n        if (this.load_cnt === this.load_path.length) {\n          /* finished load */\n\n          /* update loaded flag */\n          for (var load_path_idx in this.load_path) {\n            this.load_path[load_path_idx][1] = true;\n          }\n          /* check callback function */\n\n\n          if (null !== this.callback[0]) {\n            var cb_func = this.callback[0];\n            var cb_parm = this.callback[1];\n            setTimeout(function () {\n              try {\n                cb_func(cb_parm);\n              } catch (e) {\n                console.error(e.stack);\n              }\n            }, this.load_intvl);\n            this.callback[0] = null;\n            this.callback[1] = null;\n          }\n\n          this.loading = false;\n        }\n      } catch (e) {\n        throw new Error(e.stack + '\\n');\n      }\n    }\n  }, {\n    key: \"chkLoad\",\n    value: function chkLoad(idx) {\n      try {\n        var load_flg = true;\n\n        for (var load_path_idx in this.load_path) {\n          if (false === this.load_path[load_path_idx][1]) {\n            load_flg = false;\n            break;\n          }\n        }\n\n        if (false === load_flg) {\n          if (idx * 100 > this.timeout) {\n            throw new Error('timeout load js : ' + this.base_path + this.load_path[load_path_idx][0]);\n          }\n\n          var own_loader = this;\n          setTimeout(function () {\n            try {\n              own_loader.chkLoad(idx + 1);\n            } catch (e) {\n              console.error(e.stack);\n            }\n          }, 100);\n        }\n      } catch (e) {\n        throw new Error(e.stack + '\\n');\n      }\n    }\n  }]);\n\n  return _class;\n}();\n\nttrg.load.JsSeri = /*#__PURE__*/function () {\n  /**\n   * initialize js loader\n   *\n   */\n  function _class2(bp) {\n    _classCallCheck(this, _class2);\n\n    try {\n      this.base_path = bp || './';\n      this.load_path = new Array();\n    } catch (e) {\n      throw new Error(e.stack + '\\n');\n    }\n  }\n\n  _createClass(_class2, [{\n    key: \"addPath\",\n    value: function addPath(path) {\n      try {\n        if ('string' != typeof path) {\n          throw new Error('invalid parameter');\n        }\n\n        if (true === this.loading) {\n          throw new Error('Loader is busy');\n        }\n        /* check duplex */\n\n\n        for (var load_path_idx in this.load_path) {\n          if (path == this.load_path[load_path_idx][0]) {\n            /* already  added */\n            return;\n          }\n        }\n        /* add load target path */\n\n\n        this.load_path.push(path);\n      } catch (e) {\n        throw new Error(e.stack + '\\n');\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(force) {\n      try {\n        /* check stock */\n        this.loadElm();\n      } catch (e) {\n        throw new Error(e.stack);\n      }\n    }\n  }, {\n    key: \"loadElm\",\n    value: function loadElm(idx) {\n      try {\n        var _idx = idx || 0;\n\n        var own_obj = this;\n        $.ajax({\n          url: this.base_path + this.load_path[_idx],\n          type: 'GET',\n          cache: false,\n          dataType: 'script',\n          async: false\n        }).done(function (jqXHR, textStatus, errorThrown) {\n          try {\n            if (_idx < own_obj.load_path.length - 1) {\n              own_obj.loadElm(_idx + 1);\n            }\n          } catch (e) {\n            console.error(e.stack);\n          }\n        }).fail(function (jqXHR, textStatus, errorThrown) {\n          throw new Error(textStatus);\n        }).always(function (data, textStatus, errorThrown) {});\n      } catch (e) {\n        throw new Error(e.stack);\n      }\n    }\n  }]);\n\n  return _class2;\n}();\n/**\n * load css\n *\n * @param path to target css\n */\n\n\nttrg.load.css = function (path) {\n  try {\n    $('head').append('<link>');\n    css = $('head').children(':last');\n    css.attr({\n      rel: 'stylesheet',\n      type: 'text/css',\n      href: path\n    });\n  } catch (e) {\n    throw new Error(e.stack);\n  }\n};\n/**\n * brief load html\n * \n * @param hpath : (string) path to html file\n * @param h_id : (string) insert the destination 'id' attribute of html tag\n */\n\n\nttrg.load.html = function (h_path, h_id) {\n  try {\n    $.ajax({\n      url: h_path,\n      type: 'GET',\n      cache: false,\n      dataType: 'html',\n      async: false\n    }).done(function (jqXHR, textStatus, errorThrown) {\n      $('#' + h_id).html(jqXHR);\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n      throw new Error();\n    }).always(function (data, textStatus, errorThrown) {});\n  } catch (e) {\n    throw new Error(e.stack);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/loader.js?")},"./node_modules/tetraring4js/src/rest.js":
/*!***********************************************!*\
  !*** ./node_modules/tetraring4js/src/rest.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports){eval("ttrg.rest[\"private\"] = {};\n\nttrg.rest.get = function (uri, data, func, prm) {\n  try {\n    ttrg.rest[\"private\"].request(uri, 'GET', data, func, prm);\n  } catch (e) {\n    throw new Error(e.stack + '\\n');\n  }\n};\n\nttrg.rest.post = function (uri, data, func, prm) {\n  try {\n    if (null == data) {\n      throw new Error('invalid parameter');\n    }\n\n    ttrg.rest[\"private\"].request(uri, 'POST', data, func, prm);\n  } catch (e) {\n    throw new Error(e.stack + '\\n');\n  }\n};\n\nttrg.rest[\"private\"].request = function (uri, type, data, func, prm) {\n  try {\n    $.ajax({\n      url: uri,\n      type: type,\n      dataType: 'json',\n      data: data\n    }).done(function (jqXHR, textStatus, errorThrown) {\n      try {\n        if (null != func) {\n          if (null == prm) {\n            func(jqXHR);\n          } else {\n            func(jqXHR, prm);\n          }\n        }\n      } catch (e) {\n        console.error(e.stack);\n      }\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n      console.error('send request is failed');\n    }).always(function (data, textStatus, errorThrown) {});\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/rest.js?")},"./node_modules/tetraring4js/src/time.js":
/*!***********************************************!*\
  !*** ./node_modules/tetraring4js/src/time.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports){eval("ttrg.time.getDate = function () {\n  try {\n    var date = new Date();\n    return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();\n  } catch (e) {\n    throw new Error(e.stack + '\\n');\n  }\n};\n\nttrg.time.getTime = function () {\n  try {\n    var time = new Date();\n    return time.getHours() + ':' + time.getMinutes() + ':' + time.getSeconds();\n  } catch (e) {\n    throw new Error(e.stack + '\\n');\n  }\n};\n\nttrg.time.getUnix = function () {\n  try {\n    var start = new Date();\n    return start.getTime();\n  } catch (e) {\n    throw new Error(e.stack + '\\n');\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/time.js?")},"./node_modules/tetraring4js/src/url.js":
/*!**********************************************!*\
  !*** ./node_modules/tetraring4js/src/url.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports){eval("ttrg.url.getParam = function () {\n  try {\n    var ret_val = new Array();\n    var prm = document.location.search;\n\n    if (\"\" == prm) {\n      return null;\n    }\n\n    prm = prm.substring(1);\n    var ret_flg = false;\n    var prm_array = prm.split('&');\n\n    for (var prm_array_idx in prm_array) {\n      var key_val = prm_array[prm_array_idx].split('=');\n\n      if (2 != key_val.length) {\n        continue;\n      }\n\n      ret_flg = true;\n      ret_val[decodeURIComponent(key_val[0])] = decodeURIComponent(key_val[1]);\n    }\n\n    if (false === ret_flg) {\n      return null;\n    }\n\n    return new tetraring.array.Keyval(ret_val);\n  } catch (e) {\n    console.error(e.stack);\n    throw e;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/tetraring4js/src/url.js?")},"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function("return this")();\n} catch (e) {\n  // This works if the window reference is available\n  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?')},"./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, "loaded", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, "id", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?')},"./src/js/init/index.js":
/*!******************************!*\
  !*** ./src/js/init/index.js ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* require */\n__webpack_require__(/*! expose-loader?app!../conf/namesp.js */ "./node_modules/expose-loader/index.js?app!./src/js/conf/namesp.js-exposed");\n\n__webpack_require__(/*! mofron */ "./node_modules/mofron/index.js");\n\nvar AppBase = __webpack_require__(/*! mofron-comp-appbase */ "./node_modules/mofron-comp-appbase/index.js");\n\nvar Text = __webpack_require__(/*! mofron-comp-text */ "./node_modules/mofron-comp-text/index.js");\n\nvar Image = __webpack_require__(/*! mofron-comp-image */ "./node_modules/mofron-comp-image/index.js");\n\nvar HrzPos = __webpack_require__(/*! mofron-effect-hrzpos */ "./node_modules/mofron-effect-hrzpos/index.js");\n\nvar ClickTap = __webpack_require__(/*! mofron-event-clicktap */ "./node_modules/mofron-event-clicktap/index.js");\n\nvar SlideMenu = __webpack_require__(/*! mofron-comp-slidemenu */ "./node_modules/mofron-comp-slidemenu/index.js");\n\nvar TxtFrame = __webpack_require__(/*! mofron-comp-txtframe */ "./node_modules/mofron-comp-txtframe/index.js");\n\nvar Dialog = __webpack_require__(/*! mofron-comp-dialog */ "./node_modules/mofron-comp-dialog/index.js");\n\nvar Button = __webpack_require__(/*! mofron-comp-button */ "./node_modules/mofron-comp-button/index.js");\n\nvar DropDown = __webpack_require__(/*! mofron-comp-dropdown */ "./node_modules/mofron-comp-dropdown/index.js");\n\nvar SynwWid = __webpack_require__(/*! mofron-effect-synwwid */ "./node_modules/mofron-effect-synwwid/index.js");\n\nvar VrtPos = __webpack_require__(/*! mofron-effect-vrtpos */ "./node_modules/mofron-effect-vrtpos/index.js");\n\nvar ttrg = __webpack_require__(/*! tetraring4js */ "./node_modules/tetraring4js/index.js");\n\nvar Frame = __webpack_require__(/*! mofron-comp-frame */ "./node_modules/mofron-comp-frame/index.js");\n\nvar Grid = __webpack_require__(/*! mofron-layout-grid */ "./node_modules/mofron-layout-grid/index.js");\n\nvar Fade = __webpack_require__(/*! mofron-effect-fade */ "./node_modules/mofron-effect-fade/index.js");\n\nvar comutl = mofron.util.common;\nvar cmputl = mofron.util.component;\n\ntry {\n  /* access */\n  if (true === mofron.util.common.chkacc({\n    device: \'mobile\'\n  })) {\n    if (true === mofron.window.isPortrait()) {\n      document.documentElement.setAttribute(\'style\', \'font-size:625%;\');\n    }\n\n    mofron.window.portraitEvent(function () {\n      document.documentElement.setAttribute(\'style\', \'font-size:625%;\');\n    });\n  }\n\n  if (true === mofron.util.common.chkacc({\n    device: \'mobile\'\n  })) {\n    if (true === mofron.window.isLandscape()) {\n      document.documentElement.setAttribute(\'style\', \'font-size:800%;\');\n    }\n\n    mofron.window.landscapeEvent(function () {\n      document.documentElement.setAttribute(\'style\', \'font-size:800%;\');\n    });\n  }\n\n  if (true === mofron.util.common.chkacc({\n    device: \'tablet\'\n  })) {\n    document.documentElement.setAttribute(\'style\', \'font-size:800%;\');\n  }\n\n  if (true === mofron.util.common.chkacc({\n    device: \'display\'\n  })) {\n    document.documentElement.setAttribute(\'style\', \'font-size:625%;\');\n  }\n  /* script (external) */\n\n\n  var moni = {\n    start: function start() {\n      //if (null === wsock) {\n      //    wsock = new WebSocket(\'ws:/\'+ location.host +\':5000\');\n      //    wsock.addEventListener(\'open\', (e) => {\n      //        ws_conn = true;\n      //    });\n      //    wsock.addEventListener(\'message\', msgrsv);\n      //    \n      //    setTimeout(\n      //        () => {\n      //            if (false === ws_conn) {\n      //                alert("connection error " + \'ws:/\'+ location.host +\':5000\');\n      //            }\n      //        },\n      //        1000\n      //    );\n      //}\n      sby.visible(false);\n      act.visible(true);\n    },\n    stop: function stop() {\n      //if (null !== wsock) {\n      //    wsock.close();\n      //    wsock = null;\n      //}\n      act.visible(false);\n      sby.visible(true);\n    }\n  };\n  var temp = {\n    start: function start() {\n      temp_val.text("");\n    },\n    stop: function stop() {\n      temp_val.text("-");\n    }\n  };\n  var rslt = {\n    none: function none() {\n      alrt_img.visible(false);\n      pass_img.visible(false);\n      ret_txt.text("");\n    },\n    pass: function pass() {\n      alrt_img.visible(false);\n      pass_img.visible(true);\n      ret_txt.text("Pass");\n    },\n    alert: function alert() {\n      pass_img.visible(false);\n      alrt_img.visible(true);\n      ret_txt.text("Alert!!");\n    }\n  };\n  /* script (init) */\n\n  var bar_evt = function bar_evt() {\n    menu_cmp.visible(true);\n  };\n\n  var mnu_cls = function mnu_cls() {\n    menu_cmp.visible(false);\n  };\n\n  var sel_evt = function sel_evt(s1, s2, s3) {\n    try {\n      if (0 === s2) {\n        ths_dlg.visible(true);\n      } else if (2 === s2) {\n        document.body.requestFullscreen();\n      }\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  };\n\n  var dbtn_evt = function dbtn_evt(db1, db2, db3) {\n    try {\n      if ("OK" === db1.text().text()) {\n        var data = "threshold=" + dropd.select();\n        var req = new XMLHttpRequest();\n\n        req.onreadystatechange = function () {\n          if (this.readyState == 4 && // READYSTATE_COMPLETED\n          this.status == 200) {\n            // HTTP_STATUS_OK\n            console.log(this.responseText);\n          }\n        };\n\n        req.open(\'POST\', "http://" + location.hostname + "/cgi-bin/threshold.py");\n        req.setRequestHeader(\'Content-Type\', \'application/x-www-form-urlencoded\');\n        req.send(data);\n      }\n\n      ths_dlg.visible(false);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  };\n\n  var msgrsv = function msgrsv(msg) {\n    try {\n      var srv_ret = JSON.parse(msg.data);\n      act.base64("data:image/bmp;base64," + srv_ret.image);\n    } catch (e) {\n      console.error(e.stack);\n      throw e;\n    }\n  };\n  /* template */\n\n\n  var menu_cmp_0 = new Image();\n  var menu_cmp = new SlideMenu();\n  var dropd = new DropDown();\n  var ths_dlg_0 = new mofron["class"].Component();\n  var ths_dlg = new Dialog();\n  var cmp0_0_0 = new mofron["class"].Component();\n  var sby_0 = new Image();\n  var sby = new Frame();\n  var act = new Image();\n  var cmp0_0_1 = new mofron["class"].Component();\n  var temp_val = new Text("-");\n  var cmp0_0_2_0 = new mofron["class"].Component();\n  var cmp0_0_2_1_0 = new Text("℃");\n  var cmp0_0_2_1 = new mofron["class"].Component();\n  var cmp0_0_2 = new mofron["class"].Component();\n  var pass_img = new Image();\n  var alrt_img = new Image();\n  var ret_txt = new Text();\n  var cmp0_0_3 = new mofron["class"].Component();\n  var cmp0_0 = new mofron["class"].Component();\n  var cmp0 = new AppBase();\n  var menu_cmp_1_0 = new Text("Threshold");\n  var menu_cmp_1 = new TxtFrame();\n  var ths_dlg_1 = new Button("OK");\n  var ths_dlg_2 = new Button("Cancel");\n  var ths_dlg_3 = new SynwWid("-0.05rem");\n  var sby_0_0 = new HrzPos();\n  var sby_0_1 = new VrtPos();\n  var pass_img_0 = new HrzPos("center");\n  var alrt_img_0 = new HrzPos("center");\n  var cmp0_1 = new Image("./img/bars.png");\n  menu_cmp_1.child([menu_cmp_1_0]);\n  cmp0.child([cmp0_0]);\n  cmp0_0.child([cmp0_0_0, cmp0_0_1, cmp0_0_2, cmp0_0_3]);\n  cmp0_0_3.child([pass_img, alrt_img, ret_txt]);\n  cmp0_0_2.child([cmp0_0_2_0, cmp0_0_2_1]);\n  cmp0_0_2_1.child([cmp0_0_2_1_0]);\n  cmp0_0_2_0.child([temp_val]);\n  cmp0_0_1.child([sby, act]);\n  sby.child([sby_0]);\n  cmp0_0_0.child([menu_cmp, ths_dlg]);\n  ths_dlg.child([ths_dlg_0]);\n  ths_dlg_0.child([dropd]);\n  menu_cmp.child([menu_cmp_0]);\n  menu_cmp_0.config({\n    size: new mofron["class"].ConfArg("0.3rem", "0.3rem"),\n    event: new ClickTap(mnu_cls),\n    style: new mofron["class"].ConfArg({\n      \'position\': \'absolute\',\n      \'top\': \'0.25rem\',\n      \'left\': \'0.2rem\'\n    }, {\n      \'lock\': true\n    }),\n    src: "./img/close.png"\n  });\n  menu_cmp_1_0.config({\n    size: "0.25rem",\n    space: "0.05rem",\n    style: {\n      \'margin-left\': \'0.2rem\'\n    }\n  });\n  menu_cmp_1.config({\n    baseColor: [245, 255, 245],\n    xCenter: false,\n    borderWidth: new mofron["class"].ConfArg("0.01rem", "0rem", "0.01rem", "0rem")\n  });\n  menu_cmp.config({\n    objkey: "menu_cmp",\n    offset: "-0.01rem",\n    position: "right",\n    baseColor: [245, 255, 245],\n    select: -1,\n    reselect: true,\n    selectEvent: sel_evt,\n    style: {\n      \'padding-top\': \'0.8rem\'\n    },\n    item: new mofron["class"].ConfArg(menu_cmp_1, {\n      size: new mofron["class"].ConfArg("2.2rem", "0.6rem")\n    })\n  });\n  dropd.config({\n    objkey: "dropd",\n    size: new mofron["class"].ConfArg("1.5rem", "0.5rem"),\n    baseColor: [230, 255, 230],\n    effect: new HrzPos("center"),\n    text: ["36.0℃", "36.1℃", "36.2℃", "36.3℃", "36.4℃", "36.5℃", "36.6℃", "36.7℃", "36.8℃", "36.9℃", "37.0℃", "37.1℃", "37.2℃", "37.3℃", "37.4℃"]\n  });\n  ths_dlg_0.config({\n    style: {\n      \'margin-top\': \'0.6rem\'\n    }\n  });\n  ths_dlg_1.config({\n    baseColor: "none",\n    accentColor: [0, 0, 0, 0]\n  });\n  ths_dlg_2.config({\n    baseColor: "none",\n    accentColor: [0, 0, 0, 0]\n  });\n  ths_dlg.config({\n    objkey: "ths_dlg",\n    headerHeight: "0.6rem",\n    title: "Threshold",\n    buttonEvent: dbtn_evt,\n    button: new mofron["class"].ConfArg([ths_dlg_1, ths_dlg_2], {\n      size: new mofron["class"].ConfArg("1.5rem", "0.4rem")\n    }),\n    effect: ths_dlg_3\n  });\n  sby_0.config({\n    size: new mofron["class"].ConfArg("1rem", "1rem"),\n    src: "./img/standby.png",\n    effect: [sby_0_0, sby_0_1]\n  });\n  sby.config({\n    objkey: "sby",\n    effect: new SynwWid(),\n    baseColor: [220, 220, 220]\n  });\n  act.config({\n    objkey: "act",\n    effect: new SynwWid(),\n    visible: false\n  });\n  temp_val.config({\n    objkey: "temp_val",\n    size: "1rem",\n    effect: new HrzPos("right")\n  });\n  cmp0_0_2_1_0.config({\n    size: "1rem",\n    style: {\n      \'margin-left\': \'0.5rem\'\n    }\n  });\n  cmp0_0_2.config({\n    layout: new Grid([50, 50])\n  });\n  pass_img.config({\n    objkey: "pass_img",\n    size: new mofron["class"].ConfArg("1.5rem", "1.5rem"),\n    visible: false,\n    effect: pass_img_0,\n    src: "./img/check.png"\n  });\n  alrt_img.config({\n    objkey: "alrt_img",\n    size: new mofron["class"].ConfArg("1.5rem", "1.5rem"),\n    visible: false,\n    effect: alrt_img_0,\n    src: "./img/false.png"\n  });\n  ret_txt.config({\n    objkey: "ret_txt",\n    effect: new HrzPos("center"),\n    size: "0.5rem"\n  });\n  cmp0_0_3.config({\n    style: {\n      \'margin-top\': \'-0.5rem\'\n    }\n  });\n  cmp0_1.config({\n    size: new mofron["class"].ConfArg("0.3rem", "0.3rem"),\n    event: new ClickTap(bar_evt)\n  });\n  cmp0.config({\n    title: "SeekGate",\n    mainColor: [230, 255, 230],\n    theme: {\n      Text: {\n        target: null,\n        config: {\n          font: "Cairo",\n          mainColor: [96, 131, 127]\n        }\n      }\n    },\n    style: {\n      \'overflow\': \'hidden\'\n    },\n    header: new mofron["class"].PullConf({\n      navi: cmp0_1\n    })\n  });\n  /* script (before) */\n\n  sby.height(156 * (window.innerWidth / 208) + \'px\');\n  act.height(156 * (window.innerWidth / 208) + \'px\');\n  /* start visible */\n\n  var root_cmp = new mofron["class"].Component([cmp0]);\n  root_cmp.visible(true, function () {\n    try {\n      /* script (after) */\n      var Thermo = /*#__PURE__*/function () {\n        function Thermo(t) {\n          _classCallCheck(this, Thermo);\n\n          try {\n            if ("number" != typeof t) throw new Error("invalid parameter");\n            this.m_threshold = t, this.m_status = "none", thm_obj = this, window.onbeforeunload = function () {\n              thm_obj.close();\n            };\n          } catch (t) {\n            throw console.error(t.stack), t;\n          }\n        }\n\n        _createClass(Thermo, [{\n          key: "start",\n          value: function start() {\n            var _this = this;\n\n            try {\n              this.m_wsock = new WebSocket("ws:/" + location.host + ":5000", "thermo");\n              var t = this,\n                  r = !1;\n              this.m_wsock.addEventListener("open", function (e) {\n                r = !0, t.wsk_callback()(!0);\n              }), this.m_wsock.addEventListener("close", function (r) {\n                t.wsk_callback()(!1), t.start();\n              }), setTimeout(function () {\n                !1 === r && console.error("failed connect to thermo camera");\n              }, 5e3), this.m_wsock.addEventListener("message", function (r) {\n                if ("" === r.data) return;\n                var e = JSON.parse(r.data);\n                t.inf_event()(e);\n                var o = null;\n                o = _this.m_threshold - 1 > e.temperature ? "none" : _this.m_threshold > e.temperature ? "pass" : "alert", _this.m_status !== o && (_this.m_status = o, t.sts_event()(o));\n              });\n            } catch (t) {\n              throw console.error(t.stack), t;\n            }\n          }\n        }, {\n          key: "close",\n          value: function close() {\n            try {\n              this.m_wsock.close();\n            } catch (t) {\n              throw console.error(t.stack), t;\n            }\n          }\n        }, {\n          key: "wsk_callback",\n          value: function wsk_callback(t) {\n            try {\n              if (void 0 === t) {\n                if (void 0 === this.m_wskcb) throw new Error("could not find callback");\n                return this.m_wskcb;\n              }\n\n              if ("function" != typeof t) throw new Error("invalid parameter");\n              this.m_wskcb = t;\n            } catch (t) {\n              throw console.error(t.stack), t;\n            }\n          }\n        }, {\n          key: "inf_event",\n          value: function inf_event(t) {\n            try {\n              if (void 0 === t) {\n                if (void 0 === this.m_infcb) throw new Error("could not find event");\n                return this.m_infcb;\n              }\n\n              if ("function" != typeof t) throw new Error("invalid parameter");\n              this.m_infcb = t;\n            } catch (t) {\n              throw console.error(t.stack), t;\n            }\n          }\n        }, {\n          key: "sts_event",\n          value: function sts_event(t) {\n            try {\n              if (void 0 === t) {\n                if (void 0 === this.m_stscb) throw new Error("could not find event");\n                return this.m_stscb;\n              }\n\n              if ("function" != typeof t) throw new Error("invalid parameter");\n              this.m_stscb = t;\n            } catch (t) {\n              throw console.error(t.stack), t;\n            }\n          }\n        }]);\n\n        return Thermo;\n      }();\n\n      var thm_prs = function thm_prs() {\n        try {\n          var thd_txt = dropd.text()[dropd.select()].text();\n          var thd_val = parseFloat(thd_txt.substring(0, thd_txt.length - 1));\n          var thermo = new Thermo(thd_val);\n          /* websocket connection callback */\n\n          thermo.wsk_callback(function (ws_p) {\n            true === ws_p ? moni.start() : moni.stop();\n          });\n          /* thermo info receive event */\n\n          thermo.inf_event(function (msg) {\n            try {\n              act.base64("data:image/bmp;base64," + msg.image);\n              temp_val.text(msg.temperature + "");\n            } catch (e) {\n              console.error(e.stack);\n              throw e;\n            }\n          });\n          /* thermo status change event */\n\n          thermo.sts_event(function (sts) {\n            if ("none" === sts) {\n              rslt.none();\n            } else if ("pass") {\n              rslt.pass();\n            } else {}\n\n            console.log(sts);\n          });\n          thermo.start();\n        } catch (e) {\n          console.error(e.stack);\n          throw e;\n        }\n      };\n\n      setTimeout(thm_prs, 500);\n      var req = new XMLHttpRequest();\n\n      req.onreadystatechange = function () {\n        if (this.readyState == 4 && // READYSTATE_COMPLETED\n        this.status == 200) {\n          // HTTP_STATUS_OK\n          var resp = JSON.parse(this.responseText);\n          dropd.select(parseInt(resp.contents));\n        }\n      };\n\n      req.open(\'GET\', "http://" + location.hostname + "/cgi-bin/threshold.py");\n      req.send(); //dropd\n    } catch (e) {\n      console.error(e.stack);\n    }\n  });\n} catch (e) {\n  console.error(e.stack);\n}\n\n//# sourceURL=webpack:///./src/js/init/index.js?')}});